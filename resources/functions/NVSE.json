[
  {
    "name": "GetNVSEVersion",
    "params": [],
    "retType": "Float",
    "opcode": 5120,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the installed version of NVSE"
  },
  {
    "name": "GetNVSERevision",
    "params": [],
    "retType": "Float",
    "opcode": 5121,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the numbered revision of the installed version of NVSE"
  },
  {
    "name": "GetNVSEBeta",
    "params": [],
    "retType": "Float",
    "opcode": 5122,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the numbered beta of the installed version of NVSE"
  },
  {
    "name": "GetBaseObject",
    "alias": "gbo",
    "params": [],
    "retType": "Form",
    "opcode": 5123,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the base object id of the reference"
  },
  {
    "name": "GetWeight",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5124,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the weight of the specified base form"
  },
  {
    "name": "GetHealth",
    "alias": "GetBaseHealth",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5125,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the base health of the object or calling reference"
  },
  {
    "name": "GetValue",
    "alias": "GetItemValue",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5126,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the base value of the object or calling reference"
  },
  {
    "name": "SetWeight",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5127,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weight of the object"
  },
  {
    "name": "SetHealth",
    "alias": "SetObjectHealth",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5128,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the base health of the specified base form"
  },
  {
    "name": "SetBaseItemValue",
    "alias": "SetValue",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "integer",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5129,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the monetary value of a base object"
  },
  {
    "name": "GetType",
    "alias": "GetObjectType",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5130,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the type of the specified base form"
  },
  {
    "name": "GetRepairList",
    "alias": "grl",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5131,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the repair list for the inventory object"
  },
  {
    "name": "GetEquipType",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5132,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the equipment type of the inventory object"
  },
  {
    "name": "GetWeaponAmmo",
    "alias": "GetAmmo",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5133,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the ammo of a weapon"
  },
  {
    "name": "GetWeaponClipRounds",
    "alias": "GetClipSize",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5134,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the clip size for the weapon"
  },
  {
    "name": "GetAttackDamage",
    "alias": "GetDamage",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5135,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the attack damage for the weapon"
  },
  {
    "name": "GetWeaponType",
    "alias": "GetWeapType",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5136,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the weapon type"
  },
  {
    "name": "GetWeaponMinSpread",
    "alias": "GetMinSpread",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5137,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the minimum spread of the weapon"
  },
  {
    "name": "GetWeaponSpread",
    "alias": "GetSpread",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5138,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the spread of the weapon"
  },
  {
    "name": "GetWeaponProjectile",
    "alias": "GetWeapProj",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5139,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the weapon projectile info"
  },
  {
    "name": "GetWeaponSightFOV",
    "alias": "GetSightFOV",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5140,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the zoom field of view for the weapon"
  },
  {
    "name": "GetWeaponMinRange",
    "alias": "GetMinRange",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5141,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the min range of the weapon"
  },
  {
    "name": "GetWeaponMaxRange",
    "alias": "GetMaxRange",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5142,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the max range of the weapon"
  },
  {
    "name": "GetWeaponAmmoUse",
    "alias": "GetAmmoUse",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5143,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the ammo used per shot of the weapon"
  },
  {
    "name": "GetWeaponActionPoints",
    "alias": "GetAP",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5144,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the number of action points per shot of the weapon"
  },
  {
    "name": "GetWeaponCritDamage",
    "alias": "GetCritDam",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5145,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the critical damage of the weapon"
  },
  {
    "name": "GetWeaponCritChance",
    "alias": "GetCritPerc",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5146,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the chance of a critical shot for the weapon"
  },
  {
    "name": "GetWeaponCritEffect",
    "alias": "GetCritEffect",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5147,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the spell for the critical effect for the weapon"
  },
  {
    "name": "GetWeaponFireRate",
    "alias": "GetFireRate",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5148,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the fire rate of the weapon"
  },
  {
    "name": "GetWeaponAnimAttackMult",
    "alias": "GetAnimAttackMult",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5149,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the animation attack multiplier of the weapon"
  },
  {
    "name": "GetWeaponRumbleLeftMotor",
    "alias": "GetRumbleLeft",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5150,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the rumble left motor of the weapon"
  },
  {
    "name": "GetWeaponRumbleRightMotor",
    "alias": "GetRumbleRight",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5151,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the rumble right motor of the weapon"
  },
  {
    "name": "GetWeaponRumbleDuration",
    "alias": "GetRumbleDuration",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5152,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the rumble duration of the weapon"
  },
  {
    "name": "GetWeaponRumbleWavelength",
    "alias": "GetRumbleWavelen",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5153,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the rumble wavelegnth for the weapon"
  },
  {
    "name": "GetWeaponAnimShotsPerSec",
    "alias": "GetAnimShotsPerSec",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5154,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the animation shots per second of the weapon"
  },
  {
    "name": "GetWeaponAnimReloadTime",
    "alias": "GetAnimReloadTime",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5155,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Retuns the animation reload time for the weapon"
  },
  {
    "name": "GetWeaponAnimJamTime",
    "alias": "GetAnimJamTime",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5156,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the animation jam time of the weapon"
  },
  {
    "name": "GetWeaponSkill",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5157,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the skill for the weapon"
  },
  {
    "name": "GetWeaponResistType",
    "alias": "GetWeaponResist",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5158,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the resist type for the weapon"
  },
  {
    "name": "GetWeaponFireDelayMin",
    "alias": "GetFireDelayMin",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5159,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the semi-auto min fire delay for the weapon"
  },
  {
    "name": "GetWeaponFireDelayMax",
    "alias": "GetFireDelayMax",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5160,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the semi-auto max fire delay for the weapon"
  },
  {
    "name": "GetWeaponAnimMult",
    "alias": "GetAnimMult",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5161,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the animation multiplier for the weapon"
  },
  {
    "name": "GetWeaponReach",
    "alias": "GetReach",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5162,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the reach of the weapon"
  },
  {
    "name": "GetWeaponIsAutomatic",
    "alias": "GetIsAutomatic",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5163,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns 1 if the weapon is an automatic weapon"
  },
  {
    "name": "GetWeaponHandGrip",
    "alias": "GetHandGrip",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5164,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the hand grip of the weapon"
  },
  {
    "name": "GetWeaponReloadAnim",
    "alias": "GetReloadAnim",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5165,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the reload animation of the weapon"
  },
  {
    "name": "GetWeaponBaseVATSChance",
    "alias": "GetVATSChance",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5166,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the base VATS chance of the weapon"
  },
  {
    "name": "GetWeaponAttackAnimation",
    "alias": "GetAttackAnim",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5167,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the attack animation of the weapon"
  },
  {
    "name": "GetWeaponNumProjectiles",
    "alias": "GetNumProj",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5168,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the number of projectiles used in a single shot by the weapon"
  },
  {
    "name": "GetWeaponAimArc",
    "alias": "GetAimArc",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5169,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the aim arc of the weapon"
  },
  {
    "name": "GetWeaponLimbDamageMult",
    "alias": "GetLimbDamageMult",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5170,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the limb damage multiplier of the weapon"
  },
  {
    "name": "GetWeaponSightUsage",
    "alias": "GetSightUsage",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5171,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the sight usage of the weapon"
  },
  {
    "name": "GetWeaponHasScope",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5172,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns whether the weapon has a scope or not"
  },
  {
    "name": "con_SetGameSetting",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "String",
        "name": "String",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5173,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "con_SetINISetting",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "String",
        "name": "String",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5174,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "setting:category"
  },
  {
    "name": "con_GetINISetting",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5175,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "setting:category"
  },
  {
    "name": "con_RefreshINI",
    "params": [],
    "retType": "Float",
    "opcode": 5176,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Refresh INI settings from file"
  },
  {
    "name": "con_Save",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "Integer",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5177,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "SaveGame "
  },
  {
    "name": "con_SaveINI",
    "params": [],
    "retType": "Float",
    "opcode": 5178,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Writes all the .ini files"
  },
  {
    "name": "con_QuitGame",
    "params": [],
    "retType": "Float",
    "opcode": 5179,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Exit game without going through menus"
  },
  {
    "name": "con_LoadGame",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "Integer",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5180,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "LoadGame "
  },
  {
    "name": "con_CloseAllMenus",
    "params": [],
    "retType": "Float",
    "opcode": 5181,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Closes all open menus"
  },
  {
    "name": "con_SetVel",
    "params": [
      {
        "type": "Axis",
        "name": "Axis",
        "optional": false
      },
      {
        "type": "Float",
        "name": "Float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5182,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets Velocity on a reference"
  },
  {
    "name": "ListGetCount",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5183,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "returns the count of items in the form list"
  },
  {
    "name": "ListGetNthForm",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5184,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nth form in the form list"
  },
  {
    "name": "ListGetFormIndex",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5185,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the index for the specified form"
  },
  {
    "name": "ListAddForm",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "bCheckForDuplicates",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5186,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Adds the form to the list at the given index (or at the end if not provided)"
  },
  {
    "name": "ListAddReference",
    "alias": "ListAddRef",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "bCheckForDuplicates",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5187,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Adds the calling reference at the given index (or at the end if not provided)"
  },
  {
    "name": "ListRemoveNthForm",
    "alias": "ListRemoveNth",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5188,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes the nth form from the list"
  },
  {
    "name": "ListRemoveForm",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5189,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes the specified from from the list"
  },
  {
    "name": "ListReplaceNthForm",
    "alias": "ListReplaceNth",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "replaceWith",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "formIndex",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5190,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Replaces the nth form of the list with the specified form"
  },
  {
    "name": "ListReplaceForm",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "replaceWith",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5191,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Replaces the specified from with another"
  },
  {
    "name": "ListClear",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5192,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes all entries from the list"
  },
  {
    "name": "GetEquippedObject",
    "alias": "GetEqObj",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5193,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the base object of the item in the specified slot"
  },
  {
    "name": "GetEquippedCurrentHealth",
    "alias": "GetEqCurHealth",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5194,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Returns the current health of the object equipped in the specified slot"
  },
  {
    "name": "CompareNames",
    "params": [
      {
        "type": "AnyForm",
        "name": "target item",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "object",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5195,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Compares one name to another"
  },
  {
    "name": "SetName",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5196,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the name of the object"
  },
  {
    "name": "GetHotkeyItem",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5197,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the item assigned to the specified hotkey from 1 to 8"
  },
  {
    "name": "GetNumItems",
    "alias": "GetNumObjects",
    "params": [],
    "retType": "Float",
    "opcode": 5198,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Returns the number of items contained by the calling ref"
  },
  {
    "name": "GetInventoryObject",
    "alias": "GetNthObject",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5199,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the base object of the specified index contained in the calling ref"
  },
  {
    "name": "SetEquippedCurrentHealth",
    "alias": "SetEqCurHealth",
    "params": [
      {
        "type": "Float",
        "name": "val",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "slot",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5200,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets the current health of the equipped object at the given slot"
  },
  {
    "name": "GetCurrentHealth",
    "params": [],
    "retType": "Float",
    "opcode": 5201,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Returns the current health of the calling ref"
  },
  {
    "name": "SetCurrentHealth",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5202,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets the current health of the calling ref"
  },
  {
    "name": "IsKeyPressed",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5203,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return if a dx scancode is down or up"
  },
  {
    "name": "TapKey",
    "alias": "tk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5204,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Fakes a key press for one frame"
  },
  {
    "name": "HoldKey",
    "alias": "hk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5205,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Fakes a key press indefinately"
  },
  {
    "name": "ReleaseKey",
    "alias": "rk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5206,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Releases a key held down by HoldKey"
  },
  {
    "name": "DisableKey",
    "alias": "dk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5207,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prevents a player from using a key"
  },
  {
    "name": "EnableKey",
    "alias": "ek",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5208,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Reenables a key previously disabled with DisableKey"
  },
  {
    "name": "GetNumKeysPressed",
    "alias": "gnkp",
    "params": [],
    "retType": "Float",
    "opcode": 5209,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns how many keyboard keys are currently being held down"
  },
  {
    "name": "GetKeyPress",
    "alias": "gkp",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5210,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the scancode of the nth key which is currently being held down"
  },
  {
    "name": "GetNumMouseButtonsPressed",
    "alias": "gnmbp",
    "params": [],
    "retType": "Float",
    "opcode": 5211,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns how many mouse buttons are currently being held down"
  },
  {
    "name": "GetMouseButtonPress",
    "alias": "gmbp",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5212,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the code of the nth mouse button which is currently being held down"
  },
  {
    "name": "GetControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5213,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the key assigned to a control"
  },
  {
    "name": "GetAltControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5214,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the mouse button assigned to a control"
  },
  {
    "name": "MenuTapKey",
    "alias": "mtk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5215,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Fakes a key press for one frame in menu mode"
  },
  {
    "name": "MenuHoldKey",
    "alias": "mhk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5216,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Fakes a key press indefinately in menu mode"
  },
  {
    "name": "MenuReleaseKey",
    "alias": "mrk",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5217,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Releases a key held down by MenuHoldKey"
  },
  {
    "name": "DisableControl",
    "alias": "dc",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5218,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Disables the key and button bound to a control"
  },
  {
    "name": "EnableControl",
    "alias": "ec",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5219,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Enables the key and button assigned to a control"
  },
  {
    "name": "TapControl",
    "alias": "tc",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5220,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Taps the key or mouse button assigned to control"
  },
  {
    "name": "SetControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5221,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Assigns a new keycode to the specified keyboard control"
  },
  {
    "name": "SetAltControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5222,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Assigns a new mouse button code to the specified mouse control"
  },
  {
    "name": "SetIsControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5223,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a key as a custom control"
  },
  {
    "name": "IsControl",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5224,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if key is a game control or 2 if a custom control"
  },
  {
    "name": "IsKeyDisabled",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5225,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the key has been disabled by a script"
  },
  {
    "name": "IsControlDisabled",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5226,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the control has been disabled by a script"
  },
  {
    "name": "IsControlPressed",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5227,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns 1 if the control is pressed"
  },
  {
    "name": "IsPersistent",
    "params": [],
    "retType": "1/0",
    "opcode": 5228,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns true if the calling reference is persistent"
  },
  {
    "name": "GetParentCell",
    "alias": "gpc",
    "params": [],
    "retType": "Form",
    "opcode": 5229,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the parent cell of the reference"
  },
  {
    "name": "GetParentWorldspace",
    "alias": "gpw",
    "params": [],
    "retType": "Form",
    "opcode": 5230,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the parent worldspace of the reference"
  },
  {
    "name": "GetTeleportCell",
    "params": [],
    "retType": "Form",
    "opcode": 5231,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the cell to which the calling door reference teleports"
  },
  {
    "name": "GetLinkedDoor",
    "params": [],
    "retType": "Form",
    "opcode": 5232,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the door to which the calling reference is linked"
  },
  {
    "name": "GetFirstRef",
    "params": [
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5233,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the first reference of the specified type in the current cell"
  },
  {
    "name": "GetNextRef",
    "params": [],
    "retType": "Form",
    "opcode": 5234,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the next reference of a given type in the current cell"
  },
  {
    "name": "GetNumRefs",
    "params": [
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max distance",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max angle",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "baseForm",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5235,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of references of a given type in the current cell"
  },
  {
    "name": "GetFirstRefInCell",
    "params": [
      {
        "type": "Cell",
        "name": "cell",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5236,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the first reference of the specified type in the specified cell"
  },
  {
    "name": "GetNumRefsInCell",
    "params": [
      {
        "type": "Cell",
        "name": "cell",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max distance",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max angle",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "baseForm",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5237,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of references of a given type in the specified cell"
  },
  {
    "name": "GetRefCount",
    "params": [],
    "retType": "Float",
    "opcode": 5238,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the count in a stacked reference"
  },
  {
    "name": "SetRefCount",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5239,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets the count on a stacked reference"
  },
  {
    "name": "GetArmorAR",
    "alias": "GetArmorArmorRating",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5240,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the armor rating of the specified armor"
  },
  {
    "name": "IsPowerArmor",
    "alias": "IsPA",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5241,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns whether the biped form is considered power armor"
  },
  {
    "name": "SetIsPowerArmor",
    "alias": "SetIsPA",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5242,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets whether the armor is power armor or not"
  },
  {
    "name": "SetRepairList",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "target item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5243,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the repair list for the specified item"
  },
  {
    "name": "IsQuestItem",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5244,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns 1 if the object or calling reference is a quest item"
  },
  {
    "name": "SetQuestItem",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5245,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets whether the specified object or object reference is a quest item"
  },
  {
    "name": "GetObjectEffect",
    "alias": "GetEnchantment",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5246,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the object effect of the inventory object"
  },
  {
    "name": "SetWeaponAmmo",
    "alias": "SetAmmo",
    "params": [
      {
        "type": "AnyForm",
        "name": "inv item",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "target item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5247,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the ammo of the weapon"
  },
  {
    "name": "SetWeaponClipRounds",
    "alias": "SetClipSize",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5248,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon clip size"
  },
  {
    "name": "SetAttackDamage",
    "alias": "SetDamage",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5249,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the attack damage of the form"
  },
  {
    "name": "SetWeaponType",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5250,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon type of the weapon"
  },
  {
    "name": "SetWeaponMinSpread",
    "alias": "SetMinSpread",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5251,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon min spread"
  },
  {
    "name": "SetWeaponSpread",
    "alias": "SetSpread",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5252,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon spread"
  },
  {
    "name": "SetWeaponProjectile",
    "alias": "SetProjectile",
    "params": [
      {
        "type": "AnyForm",
        "name": "inv item",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "target item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5253,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the projectile of the weapon"
  },
  {
    "name": "SetWeaponSightFOV",
    "alias": "SetSightFOV",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5254,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon xoom field of view"
  },
  {
    "name": "SetWeaponMinRange",
    "alias": "SetMinRange",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5255,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon min range"
  },
  {
    "name": "SetWeaponMaxRange",
    "alias": "SetMaxRange",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5256,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon max range"
  },
  {
    "name": "SetWeaponAmmoUse",
    "alias": "SetAmmoUse",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5257,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon ammo use"
  },
  {
    "name": "SetWeaponActionPoints",
    "alias": "SetAP",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5258,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon number of action pointer per shot"
  },
  {
    "name": "SetWeaponCritDamage",
    "alias": "SetCritDam",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5259,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon critical hit damage"
  },
  {
    "name": "SetWeaponCritChance",
    "alias": "SetCritPerc",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5260,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon critical hit chance"
  },
  {
    "name": "SetWeaponCritEffect",
    "alias": "SetCritEffect",
    "params": [
      {
        "type": "MagicItem",
        "name": "magic item",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5261,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon critical hit effect"
  },
  {
    "name": "SetWeaponAnimAttackMult",
    "alias": "SetAnimAttackMult",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5262,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the anim attack multiplier"
  },
  {
    "name": "SetWeaponAnimMult",
    "alias": "SetAnimMult",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5263,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the animiation multiple of the weapon"
  },
  {
    "name": "SetWeaponReach",
    "alias": "SetReach",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5264,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the reach of the weapon"
  },
  {
    "name": "SetWeaponIsAutomatic",
    "alias": "SetIsAutomatic",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5265,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets whether the weapon is an automatic weapon or not"
  },
  {
    "name": "SetWeaponHandGrip",
    "alias": "SetHandGrip",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5266,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the hand grip of the weapon"
  },
  {
    "name": "SetWeaponReloadAnim",
    "alias": "SetReloadAnim",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5267,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the reload animation of the weapon"
  },
  {
    "name": "SetWeaponBaseVATSChance",
    "alias": "SetVATSChance",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5268,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the base VATS chance for the weapon"
  },
  {
    "name": "SetWeaponAttackAnimation",
    "alias": "SetAttackAnim",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5269,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the attack animation for the weapon"
  },
  {
    "name": "SetWeaponNumProjectiles",
    "alias": "SetNumProj",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5270,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the number of projectiles the weapon fires each time it is shot"
  },
  {
    "name": "SetWeaponAimArc",
    "alias": "SetAimArc",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5271,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the aim arc of the weapon"
  },
  {
    "name": "SetWeaponLimbDamageMult",
    "alias": "SetLimbDamageMult",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5272,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the limb damage multiplier for the weapon"
  },
  {
    "name": "SetWeaponSightUsage",
    "alias": "SetSightUsage",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5273,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the sight usage for the weapon"
  },
  {
    "name": "GetNumericGameSetting",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5274,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the value of a numeric game setting"
  },
  {
    "name": "SetNumericGameSetting",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "Double",
        "name": "Double",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5275,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a numeric game setting"
  },
  {
    "name": "GetNumericIniSetting",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5276,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the value of an ini setting"
  },
  {
    "name": "SetNumericIniSetting",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      },
      {
        "type": "Double",
        "name": "Double",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5277,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets an ini setting"
  },
  {
    "name": "Label",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5278,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set a label"
  },
  {
    "name": "Goto",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5279,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Branch to a label"
  },
  {
    "name": "PrintToConsole",
    "alias": "printc",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5280,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Print formatted string to console"
  },
  {
    "name": "DebugPrint",
    "alias": "dbprintc",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5281,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a formatted string to the console if debug mode is enabled for calling script"
  },
  {
    "name": "SetDebugMode",
    "alias": "dbmode",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5282,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Toggles debug mode for all scripts belonging to a mod"
  },
  {
    "name": "GetDebugMode",
    "alias": "GetDbMode",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5283,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns whether debug mode is set for the mod"
  },
  {
    "name": "GetUIFloat",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5284,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the value of a float UI trait"
  },
  {
    "name": "SetUIFloat",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5285,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value of a float UI trait"
  },
  {
    "name": "SetUIString",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5286,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value of a string UI trait"
  },
  {
    "name": "GetCrosshairRef",
    "params": [],
    "retType": "Form",
    "opcode": 5287,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the reference under the crosshair"
  },
  {
    "name": "GetGameRestarted",
    "params": [],
    "retType": "Float",
    "opcode": 5288,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 when the game is restarted"
  },
  {
    "name": "con_ToggleMenus",
    "params": [],
    "retType": "Float",
    "opcode": 5289,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Hide all the menus. Used for taking screen shots"
  },
  {
    "name": "con_TFC",
    "params": [
      {
        "type": "Integer",
        "name": "Integer",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5290,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Toggles the Free Fly camera (UFO cam)"
  },
  {
    "name": "con_TCL",
    "params": [],
    "retType": "Float",
    "opcode": 5291,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "GetGameLoaded",
    "params": [],
    "retType": "Float",
    "opcode": 5292,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 after a game is loaded"
  },
  {
    "name": "GetWeaponItemMod",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5293,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the specified item mod of the weapon"
  },
  {
    "name": "IsModLoaded",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5294,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the whether the specified mod is loaded"
  },
  {
    "name": "GetModIndex",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5295,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the index of the specified mod"
  },
  {
    "name": "GetNumLoadedMods",
    "params": [],
    "retType": "Float",
    "opcode": 5296,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of loaded mods"
  },
  {
    "name": "GetSourceModIndex",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5297,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the index of the mod associated with the form"
  },
  {
    "name": "GetDebugSelection",
    "params": [],
    "retType": "Form",
    "opcode": 5298,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the current selected object in the console"
  },
  {
    "name": "GetArmorDT",
    "alias": "GetArmorDamageThreshold",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5299,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the damage threshold of the armor"
  },
  {
    "name": "SetArmorAR",
    "alias": "SetArmorArmorRating",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5300,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the armor rating of the armor"
  },
  {
    "name": "SetArmorDT",
    "alias": "SetArmorDamageThreshold",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5301,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the damage threshold of the armor"
  },
  {
    "name": "IsScripted",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5302,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the object or reference has a script attached to it"
  },
  {
    "name": "GetScript",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5303,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the script of the reference or passed object"
  },
  {
    "name": "RemoveScript",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5304,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes the script of the reference or passed object"
  },
  {
    "name": "SetScript",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5305,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the script of the reference or passed object"
  },
  {
    "name": "IsFormValid",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5306,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the reference or passed object is valid"
  },
  {
    "name": "IsReference",
    "params": [
      {
        "type": "ObjectRef",
        "name": "reference",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5307,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the passed refVar is a reference"
  },
  {
    "name": "GetWeaponRequiredStrength",
    "alias": "GetReqStr",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5308,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the required strength for the weapon"
  },
  {
    "name": "GetWeaponRequiredSkill",
    "alias": "GetReqSkill",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5309,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the required strength for the weapon"
  },
  {
    "name": "SetWeaponRequiredStrength",
    "alias": "SetReqStr",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5310,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the required strength for the weapon"
  },
  {
    "name": "SetWeaponRequiredSkill",
    "alias": "SetReqSkill",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5311,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the required skill for the weapon"
  },
  {
    "name": "SetWeaponResistType",
    "alias": "SetWeaponResist",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5312,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon clip size"
  },
  {
    "name": "SetWeaponSkill",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5313,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the skill for the weapon"
  },
  {
    "name": "GetAmmoSpeed",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5314,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the speed of the specified ammo"
  },
  {
    "name": "GetAmmoConsumedPercent",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5315,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the percentage of ammo consumed for the specified ammo"
  },
  {
    "name": "GetAmmoCasing",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5316,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the casing of the specified ammo"
  },
  {
    "name": "GetPlayerCurrentAmmoRounds",
    "params": [],
    "retType": "Float",
    "opcode": 5317,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the current number of rounds in the clip of the player"
  },
  {
    "name": "SetPlayerCurrentAmmoRounds",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5318,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the current number of rounds in the clip of the player"
  },
  {
    "name": "GetPlayerCurrentAmmo",
    "params": [],
    "retType": "Form",
    "opcode": 5319,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the current ammo in the weapon held by the player"
  },
  {
    "name": "GetOpenKey",
    "alias": "GetKey",
    "params": [],
    "retType": "Form",
    "opcode": 5320,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the key associated with a lockable object"
  },
  {
    "name": "Exp",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5321,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the exponential of a value"
  },
  {
    "name": "Log10",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5322,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the base 10 log of a value"
  },
  {
    "name": "Floor",
    "alias": "flr",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5323,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nearest whole number that is less than a float"
  },
  {
    "name": "Ceil",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5324,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nearest whole number that is greater than a float"
  },
  {
    "name": "LeftShift",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5325,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Shifts a 32-bit integer left the specified number of bits"
  },
  {
    "name": "RightShift",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5326,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Shifts a 32-bit integer right the specified number of bits"
  },
  {
    "name": "LogicalAnd",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5327,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Performs a logical AND between two 32-bit integers"
  },
  {
    "name": "LogicalOr",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5328,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Performs a logical OR between two 32-bit integers"
  },
  {
    "name": "LogicalXor",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5329,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Performs a logical XOR between two 32-bit integers"
  },
  {
    "name": "LogicalNot",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5330,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Performs a logical NOT on a 32-bit integer"
  },
  {
    "name": "Pow",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5331,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates one value raised to the power of another"
  },
  {
    "name": "Fmod",
    "params": [
      {
        "type": "Float",
        "name": "x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "n",
        "optional": false
      },
      {
        "type": "Float",
        "name": "offset",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5332,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the result of a floating point modulous of the passed floats"
  },
  {
    "name": "Rand",
    "alias": "r",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5333,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a float between min and max"
  },
  {
    "name": "SortUIListBox",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5334,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sorts the items in a UI list_box"
  },
  {
    "name": "GetOwner",
    "params": [],
    "retType": "Form",
    "opcode": 5335,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the owner of the calling reference"
  },
  {
    "name": "GetLocalRefIndex",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5336,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the index of the ref"
  },
  {
    "name": "BuildRef",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5337,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Builds a reference from a mod and ref index"
  },
  {
    "name": "SetNameEx",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "inventory object",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5338,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the name of the object based on the format string"
  },
  {
    "name": "MessageEx",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5339,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a formatted message"
  },
  {
    "name": "MessageBoxEx",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5340,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Displays a formatted message box"
  },
  {
    "name": "TempCloneForm",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bInheritModIndex",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5341,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "clones the specified form and returns a new base form which will be saved in the save game"
  },
  {
    "name": "IsClonedForm",
    "alias": "IsCloned",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5342,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns whether the specified form is a created object or not"
  },
  {
    "name": "GetParentCellOwner",
    "params": [],
    "retType": "Form",
    "opcode": 5343,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the owner of the cell of the calling reference"
  },
  {
    "name": "GetOwningFactionRequiredRank",
    "params": [],
    "retType": "Float",
    "opcode": 5344,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the required rank for ownership of the calling reference"
  },
  {
    "name": "GetParentCellOwningFactionRequiredRank",
    "params": [],
    "retType": "Float",
    "opcode": 5345,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the required rank for ownership of the cell of the calling reference"
  },
  {
    "name": "SetUIStringEx",
    "params": [
      {
        "type": "String",
        "name": "component name",
        "optional": false
      },
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5346,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value of a string UI trait to a formatted string"
  },
  {
    "name": "con_SetUFOCamSpeedMult",
    "params": [
      {
        "type": "Float",
        "name": "Float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5347,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set speed mult for UFO cam"
  },
  {
    "name": "con_TDT",
    "params": [],
    "retType": "Float",
    "opcode": 5348,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Show debug numbers on the screen"
  },
  {
    "name": "SetWeaponFireRate",
    "alias": "SetFireRate",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5349,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the weapon fire rate"
  },
  {
    "name": "GetWeaponLongBursts",
    "alias": "GetLongBursts",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5350,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns if a weapon uses long bursts"
  },
  {
    "name": "SetWeaponLongBursts",
    "alias": "SetLongBursts",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5351,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets if a weapon uses long bursts"
  },
  {
    "name": "GetWeaponFlags1",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5352,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns weapon flags bitfield 1"
  },
  {
    "name": "GetWeaponFlags2",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5353,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns weapon flags bitfield 2"
  },
  {
    "name": "SetWeaponFlags1",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5354,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets weapon flags bitfield 1"
  },
  {
    "name": "SetWeaponFlags2",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5355,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets weapon flags bitfield 2"
  },
  {
    "name": "GetActorBaseFlagsLow",
    "params": [
      {
        "type": "ActorBase",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5356,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a bitfield containing actor base flags"
  },
  {
    "name": "SetActorBaseFlagsLow",
    "params": [
      {
        "type": "Integer",
        "name": "flags",
        "optional": false
      },
      {
        "type": "ActorBase",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5357,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets actor base flags"
  },
  {
    "name": "GetActorBaseFlagsHigh",
    "params": [
      {
        "type": "ActorBase",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5358,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a bitfield containing actor base flags"
  },
  {
    "name": "SetActorBaseFlagsHigh",
    "params": [
      {
        "type": "Integer",
        "name": "flags",
        "optional": false
      },
      {
        "type": "ActorBase",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5359,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets actor base flags"
  },
  {
    "name": "ClearBit",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5360,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Clear a single bit specified by lsb-first index"
  },
  {
    "name": "SetBit",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5361,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a single bit specified by lsb-first index"
  },
  {
    "name": "GetEquippedWeaponModFlags",
    "params": [],
    "retType": "Float",
    "opcode": 5362,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Returns equipped weapon mod flags"
  },
  {
    "name": "SetEquippedWeaponModFlags",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5363,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets equipped weapon mod flags"
  },
  {
    "name": "GetWeaponItemModEffect",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5364,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the specified item mod effect id of the weapon"
  },
  {
    "name": "GetWeaponItemModValue1",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5365,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the specified item mod value1 of the weapon"
  },
  {
    "name": "GetWeaponItemModValue2",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5366,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the specified item mod value2 of the weapon"
  },
  {
    "name": "HasOwnership",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5367,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Check if an NPC has direct or indirect ownership"
  },
  {
    "name": "IsOwned",
    "params": [
      {
        "type": "Actor",
        "name": "actor reference",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5368,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Check if an object is directly or indirectly owned by an NPC"
  },
  {
    "name": "SetOwningFactionRequiredRank",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5369,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets the required rank for ownership of the calling reference"
  },
  {
    "name": "GetDialogueTarget",
    "alias": "GDT",
    "params": [
      {
        "type": "Actor",
        "name": "actor reference",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5370,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Get the NPC talked to"
  },
  {
    "name": "GetDialogueSubject",
    "alias": "GDS",
    "params": [
      {
        "type": "Actor",
        "name": "actor reference",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5371,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Get the NPC who started the conversation"
  },
  {
    "name": "GetDialogueSpeaker",
    "alias": "GDK",
    "params": [
      {
        "type": "Actor",
        "name": "actor reference",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5372,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Get the NPC who is currently speaking in the conversation"
  },
  {
    "name": "SetPackageLocationReference",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5373,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets package start location as a reference"
  },
  {
    "name": "GetAgeClass",
    "params": [
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5374,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return NPC age class. From 0=Child -default- to 3=OldAged. -1 for non NPC. Based on race fullname"
  },
  {
    "name": "RemoveMeIR",
    "params": [
      {
        "type": "Container",
        "name": "containerRef",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5375,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "removes an inventory reference from its container, optionally transferring it to a different container, in much the same way as the vanilla RemoveMe command. The inventory reference becomes invalid once this command is called and should no longer be used"
  },
  {
    "name": "CopyIR",
    "params": [
      {
        "type": "Container",
        "name": "containerRef",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5376,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "copies an inventory reference to the specified container. The calling object needn't be in a container and remains valid after the command is called. If the calling object is equipped, the copy will not be equipped"
  },
  {
    "name": "CreateTempRef",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5377,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "creates a temporary reference to the specified form. This reference does not exist in the gameworld or in a container, and remains valid for only one frame. It is mostly useful for creating a stack of one or more items to be added to a container with CopyIR"
  },
  {
    "name": "GetFirstRefForItem",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5378,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the first entry in an array of temp refs to objects of the specified type in the calling container"
  },
  {
    "name": "GetNextRefForItem",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5379,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the next entry in the array of temp refs to objects of the specified type in the calling container"
  },
  {
    "name": "AddItemOwnership",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Float",
        "name": "count",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "owner",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "rank",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5380,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Adds an item to a container with a specified ownership"
  },
  {
    "name": "AddItemHealthPercentOwner",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Float",
        "name": "count",
        "optional": false
      },
      {
        "type": "Float",
        "name": "health",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "owner",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "rank",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5381,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Adds an item to a container at a specified health percentage and with an ownership"
  },
  {
    "name": "GetTokenValue",
    "alias": "GetTV",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5382,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Get a token value"
  },
  {
    "name": "SetTokenValue",
    "alias": "SetTV",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Float",
        "name": "value",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5383,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Set a token value or create a token with value"
  },
  {
    "name": "GetTokenRef",
    "alias": "GetTR",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5384,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Get a token reference"
  },
  {
    "name": "SetTokenRef",
    "alias": "SetTR",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "reference",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5385,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Add or modify a token reference"
  },
  {
    "name": "SetTokenValueAndRef",
    "alias": "SetTVR",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Float",
        "name": "value",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "reference",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5386,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Add or modify a token with value and reference"
  },
  {
    "name": "GetPaired",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Actor",
        "name": "actor",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5387,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Detects if ref and actor are crossreferencing each others"
  },
  {
    "name": "GetRespawn",
    "params": [
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5388,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return if the respawn flag is set on a base form"
  },
  {
    "name": "SetRespawn",
    "params": [
      {
        "type": "Integer",
        "name": "flag",
        "optional": false
      },
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5389,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the respawn flag on a base form"
  },
  {
    "name": "GetPermanent",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5390,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return if the permanent flag is set on a base form"
  },
  {
    "name": "SetPermanent",
    "params": [
      {
        "type": "Integer",
        "name": "flag",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5391,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the permanent flag on a base form"
  },
  {
    "name": "GetBaseForm",
    "alias": "gbf",
    "params": [],
    "retType": "Form",
    "opcode": 5392,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns the permanent base object id of the reference"
  },
  {
    "name": "IsRefInList",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5393,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns the index for the specified form or base Form or permanent base Form"
  },
  {
    "name": "SetOpenKey",
    "alias": "SetKey",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5394,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Sets the key used to unlock the calling object"
  },
  {
    "name": "GetCurrentPackage",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5395,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets the current package from an actor"
  },
  {
    "name": "GetPackageLocation",
    "alias": "GetPackageLocationReference",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5396,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets package start location"
  },
  {
    "name": "GetPackageCount",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5397,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Gets the count of packages from an actor base form"
  },
  {
    "name": "GetNthPackage",
    "params": [
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5398,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets the Nth package from an actor base form"
  },
  {
    "name": "SetNthPackage",
    "params": [
      {
        "type": "AnyForm",
        "name": "package",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5399,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets and returns the Nth package to an actor base form"
  },
  {
    "name": "AddPackageAt",
    "params": [
      {
        "type": "AnyForm",
        "name": "package",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5400,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Adds the Nth package to an actor base form : 0 at top -1 at end returns index"
  },
  {
    "name": "RemovePackageAt",
    "params": [
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5401,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes and returns the Nth package from an actor base form"
  },
  {
    "name": "RemoveAllPackages",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5402,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes all packages from an actor base form returns count removed"
  },
  {
    "name": "ClearOpenKey",
    "alias": "ClearKey",
    "params": [],
    "retType": "Float",
    "opcode": 5403,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Clears the key used to unlock the calling object"
  },
  {
    "name": "SetPackageTargetReference",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5404,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets package target as a reference"
  },
  {
    "name": "SetPackageTargetCount",
    "alias": "SetPackageTargetDistance",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5405,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets package target count or distance"
  },
  {
    "name": "GetPackageTargetCount",
    "alias": "GetPackageTargetDistance",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5406,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets package target count or distance"
  },
  {
    "name": "SetPackageLocationRadius",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5407,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets package start location radius"
  },
  {
    "name": "GetPackageLocationRadius",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5408,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets package start location radius"
  },
  {
    "name": "SetEyes",
    "params": [
      {
        "type": "AnyForm",
        "name": "body data",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5409,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs eyes"
  },
  {
    "name": "GetEyes",
    "params": [
      {
        "type": "NPC",
        "name": "NPC",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5410,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get an NPCs eyes"
  },
  {
    "name": "SetHair",
    "params": [
      {
        "type": "AnyForm",
        "name": "body data",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5411,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs hair"
  },
  {
    "name": "GetHair",
    "params": [
      {
        "type": "NPC",
        "name": "NPC",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5412,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs hair"
  },
  {
    "name": "GetHairLength",
    "params": [
      {
        "type": "NPC",
        "name": "NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5413,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get an NPCs hair length"
  },
  {
    "name": "SetHairLength",
    "params": [
      {
        "type": "Float",
        "name": "hair length",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5414,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs hair length"
  },
  {
    "name": "GetHairColor",
    "params": [
      {
        "type": "Integer",
        "name": "hair color code",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5415,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get an NPCs hair color (code: 1=R, 2=G, 3=B)"
  },
  {
    "name": "SetHairColor",
    "params": [
      {
        "type": "Integer",
        "name": "hair color",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5416,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs hair color (RGB bytes)"
  },
  {
    "name": "GetNPCWeight",
    "params": [
      {
        "type": "NPC",
        "name": "NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5417,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get an NPCs weight"
  },
  {
    "name": "SetNPCWeight",
    "params": [
      {
        "type": "Float",
        "name": "weight",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5418,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs weight"
  },
  {
    "name": "GetNPCHeight",
    "params": [
      {
        "type": "NPC",
        "name": "NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5419,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get an NPCs height"
  },
  {
    "name": "SetNPCHeight",
    "params": [
      {
        "type": "Float",
        "name": "weight",
        "optional": false
      },
      {
        "type": "NPC",
        "name": "base NPC",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5420,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set an NPCs height"
  },
  {
    "name": "Update3D",
    "params": [],
    "retType": "Float",
    "opcode": 5421,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Updates the visual representation of the calling reference"
  },
  {
    "name": "GetVariable",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5422,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Looks up the value of a variable by name"
  },
  {
    "name": "HasVariable",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5423,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns true if the script has a variable with the specified name"
  },
  {
    "name": "GetRefVariable",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5424,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Looks up the value of a ref variable by name"
  },
  {
    "name": "GetArrayVariable",
    "alias": "GetArrayVar",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5425,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Looks up an array variable by name on the calling object or specified quest"
  },
  {
    "name": "CompareScripts",
    "params": [
      {
        "type": "ObjectID",
        "name": "script",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "script",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5426,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns true if the compiled scripts are identical"
  },
  {
    "name": "ResetAllVariables",
    "params": [],
    "retType": "Float",
    "opcode": 5427,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets all variables in a script to zero"
  },
  {
    "name": "GetNumExplicitRefs",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5428,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of literal references in a script"
  },
  {
    "name": "GetNthExplicitRef",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5429,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nth literal reference in a script"
  },
  {
    "name": "RunScript",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5430,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Debug"
  },
  {
    "name": "GetCurrentScript",
    "params": [],
    "retType": "Form",
    "opcode": 5431,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the calling script"
  },
  {
    "name": "GetCallingScript",
    "params": [],
    "retType": "Form",
    "opcode": 5432,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the script that called the executing function script"
  },
  {
    "name": "Let",
    "params": [
      {
        "type": "<unknown>",
        "name": "expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5433,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Assigns the value of an expression to a variable"
  },
  {
    "name": "eval",
    "params": [
      {
        "type": "Bool",
        "name": "boolean expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5434,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Evaluates an expression and returns a boolean result"
  },
  {
    "name": "while",
    "params": [
      {
        "type": "<unknown>",
        "name": "boolean expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5435,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Loops until the given condition evaluates to false"
  },
  {
    "name": "loop",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5436,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Marks the end of a While or ForEach loop"
  },
  {
    "name": "ForEach",
    "params": [
      {
        "type": "<unknown>",
        "name": "ForEach expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5437,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Iterates over the elements of an array"
  },
  {
    "name": "continue",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5438,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns control to the top of a loop"
  },
  {
    "name": "break",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5439,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Exits a loop"
  },
  {
    "name": "ToString",
    "params": [
      {
        "type": "AnyType",
        "name": "expression",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5440,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Attempts to convert an expression to a string"
  },
  {
    "name": "Print",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5441,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a string expression to the console"
  },
  {
    "name": "testexpr",
    "params": [
      {
        "type": "AnyType",
        "name": "expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5442,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns false if errors occur while evaluating expression, true otherwise"
  },
  {
    "name": "TypeOf",
    "params": [
      {
        "type": "AnyType",
        "name": "expression",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5443,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a string representing the type of the expression"
  },
  {
    "name": "Function",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5444,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Defines a function"
  },
  {
    "name": "Call",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Ambiguous",
    "opcode": 5445,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calls a user-defined function"
  },
  {
    "name": "SetFunctionValue",
    "params": [
      {
        "type": "AnyType",
        "name": "expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5446,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a value from a user-defined function"
  },
  {
    "name": "GetUserTime",
    "params": [],
    "retType": "Array",
    "opcode": 5447,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the users local time and date as a stringmap"
  },
  {
    "name": "GetModLocalData",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Ambiguous",
    "opcode": 5448,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets a key-value pair for the mod"
  },
  {
    "name": "SetModLocalData",
    "params": [
      {
        "type": "String",
        "name": "key",
        "optional": false
      },
      {
        "type": "<unknown>",
        "name": "data",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5449,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a key-value pair for the mod"
  },
  {
    "name": "ModLocalDataExists",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5450,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns true if mod local data exists for the specified key"
  },
  {
    "name": "RemoveModLocalData",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5451,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Removes the specified entry from the mod's local data"
  },
  {
    "name": "GetAllModLocalData",
    "params": [],
    "retType": "Array",
    "opcode": 5452,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a StringMap containing all local data for the calling mod"
  },
  {
    "name": "@PushExecutionContext",
    "params": [],
    "retType": "Float",
    "opcode": 5453,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Internal command - pushes execution context for current script for use with ExtractArgsOverride"
  },
  {
    "name": "@PopExecutionContext",
    "params": [],
    "retType": "Float",
    "opcode": 5454,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Internal command - pops execution context for current script for use with ExtractArgsOverride"
  },
  {
    "name": "ar_Construct",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5455,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Creates a new array"
  },
  {
    "name": "ar_Size",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5456,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the size of an array or -1 if the array does not exist"
  },
  {
    "name": "ar_Dump",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5457,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dumps the contents of an array for debugging purposes"
  },
  {
    "name": "ar_DumpID",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5458,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dumps an array given an integer ID"
  },
  {
    "name": "ar_Erase",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "<unknown>",
        "name": "index or range",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5459,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Erases an element or range of elements from an array"
  },
  {
    "name": "ar_Sort",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Number",
        "name": "bDescending",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5460,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array containing the source array elements in sorted order"
  },
  {
    "name": "ar_CustomSort",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "comparator",
        "optional": false
      },
      {
        "type": "Number",
        "name": "bDescending",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5461,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array containing the source array elements sorted using the passed function script"
  },
  {
    "name": "ar_SortAlpha",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Number",
        "name": "bDescending",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5462,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array containing the source array elements in alphabetical order"
  },
  {
    "name": "ar_Find",
    "params": [
      {
        "type": "AnyType",
        "name": "valueToFind",
        "optional": false
      },
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Slice",
        "name": "range",
        "optional": true
      }
    ],
    "retType": "Array index",
    "opcode": 5463,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Finds the first occurence of a value within an array"
  },
  {
    "name": "ar_First",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array index",
    "opcode": 5464,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the key of the first element in an array"
  },
  {
    "name": "ar_Last",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array index",
    "opcode": 5465,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the key of the last element in an array"
  },
  {
    "name": "ar_Next",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "StringOrNumber",
        "name": "array index",
        "optional": false
      }
    ],
    "retType": "Array index",
    "opcode": 5466,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the key of the element immediately following the specified key"
  },
  {
    "name": "ar_Prev",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "StringOrNumber",
        "name": "array index",
        "optional": false
      }
    ],
    "retType": "Array index",
    "opcode": 5467,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the key of the element immediately preceding the specified key"
  },
  {
    "name": "ar_Keys",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5468,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an Array containing the keys of the specified array"
  },
  {
    "name": "ar_HasKey",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "StringOrNumber",
        "name": "array index",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5469,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the array contains an element with the specified key"
  },
  {
    "name": "ar_BadStringIndex",
    "params": [],
    "retType": "String",
    "opcode": 5470,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the return value of a bad string array index"
  },
  {
    "name": "ar_BadNumericIndex",
    "params": [],
    "retType": "Float",
    "opcode": 5471,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the return value of a bad numeric array index"
  },
  {
    "name": "ar_Copy",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5472,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a shallow copy of an array"
  },
  {
    "name": "ar_DeepCopy",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5473,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a deep copy of an array copying any arrays contained in that array"
  },
  {
    "name": "ar_Null",
    "params": [],
    "retType": "Array",
    "opcode": 5474,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Makes an array variable refer to no array"
  },
  {
    "name": "ar_Resize",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Number",
        "name": "newSize",
        "optional": false
      },
      {
        "type": "AnyType",
        "name": "padding",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5475,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Resizes an array padding additional elements with zero or a supplied value"
  },
  {
    "name": "ar_Insert",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Number",
        "name": "index",
        "optional": false
      },
      {
        "type": "AnyType",
        "name": "toInsert",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5476,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Inserts a single element in an array"
  },
  {
    "name": "ar_InsertRange",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Number",
        "name": "index",
        "optional": false
      },
      {
        "type": "Array",
        "name": "range",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5477,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Inserts a range of elements into an array"
  },
  {
    "name": "ar_Append",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "AnyType",
        "name": "toInsert",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5478,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Appends an element to an Array"
  },
  {
    "name": "ar_List",
    "params": [
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5479,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Creates an array given a list of elements"
  },
  {
    "name": "ar_Map",
    "params": [
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": false
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "key-value pair",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5480,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Creates a Map or Stringmap given a list of key-value pairs"
  },
  {
    "name": "ar_Range",
    "params": [
      {
        "type": "Number",
        "name": "start",
        "optional": false
      },
      {
        "type": "Number",
        "name": "end",
        "optional": false
      },
      {
        "type": "Number",
        "name": "step",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5481,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array containing numbers beginning with 'start' up to and including 'end' in intervals 'step'"
  },
  {
    "name": "sv_Destruct",
    "params": [
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      },
      {
        "type": "StringVar",
        "name": "string_var",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5482,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Destroys one or more string variables"
  },
  {
    "name": "sv_Construct",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5483,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a formatted string"
  },
  {
    "name": "sv_Set",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5484,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the contents of a string variable"
  },
  {
    "name": "sv_Compare",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bCaseSensitive",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5485,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Compares two strings"
  },
  {
    "name": "sv_Length",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5486,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of characters in a string"
  },
  {
    "name": "sv_Erase",
    "params": [
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "howMany",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5487,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Erases a portion of a string variable"
  },
  {
    "name": "sv_SubString",
    "params": [
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "howMany",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5488,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a substring of a string variable"
  },
  {
    "name": "sv_ToNumeric",
    "params": [
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5489,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts a string variable to a numeric type"
  },
  {
    "name": "sv_Insert",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bCaseSensitive",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5490,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Inserts a substring in a string variable"
  },
  {
    "name": "sv_Count",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "endPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "bCaseSensitive",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5491,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of occurences of a substring within a string variable"
  },
  {
    "name": "sv_Find",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "endPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "bCaseSensitive",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5492,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the position of a substring within a string variable or -1 if not found"
  },
  {
    "name": "sv_Replace",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "stringVar",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "startPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "endPos",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "bCaseSensitive",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "howMany",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5493,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Replaces 1 or more occurences of a substring within a string variable"
  },
  {
    "name": "sv_GetChar",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5494,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the ASCII code of the character at the specified position in a string variable"
  },
  {
    "name": "sv_Split",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Bool",
        "name": "bool",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5495,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "split a string into substrings returning an array"
  },
  {
    "name": "sv_Percentify",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5496,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts all percent signs in a string to double percent signs"
  },
  {
    "name": "sv_ToUpper",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5497,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts all characters in the string to uppercase"
  },
  {
    "name": "sv_ToLower",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5498,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts all characters in the string to lowercase"
  },
  {
    "name": "IsLetter",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5499,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the character is an alphabetic character"
  },
  {
    "name": "IsDigit",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5500,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the character is a numeric character"
  },
  {
    "name": "IsPrintable",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5501,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the character is a printable character"
  },
  {
    "name": "IsPunctuation",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5502,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the character is a punctuation character"
  },
  {
    "name": "IsUpperCase",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5503,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the character is an uppercase letter"
  },
  {
    "name": "CharToAscii",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5504,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts a single character to its equivalent ASCII code"
  },
  {
    "name": "ToUpper",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5505,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts a character to uppercase"
  },
  {
    "name": "ToLower",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5506,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts a character to lowercase"
  },
  {
    "name": "AsciiToChar",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5507,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a single character string given an ASCII code"
  },
  {
    "name": "NumToHex_OLD",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5508,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "ToNumber",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Number",
        "name": "bHex",
        "optional": true
      },
      {
        "type": "Number",
        "name": "bReportError",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5509,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Translates a string to a number"
  },
  {
    "name": "GetNthModName",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5510,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the name of the nth active mod"
  },
  {
    "name": "GetName",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5511,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the name of an object"
  },
  {
    "name": "GetKeyName",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5512,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the name of a key given a scan code"
  },
  {
    "name": "GetFormIDString",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5513,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a formID of a form as a hex string"
  },
  {
    "name": "GetRawFormIDString",
    "alias": "GetFormIDString2",
    "params": [
      {
        "type": "Form",
        "name": "object",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5514,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the form ID stored in an array element or ref variable as a string regardless of whether or not the formID is valid"
  },
  {
    "name": "GetFalloutDirectory",
    "alias": "GetFalloutDir",
    "params": [],
    "retType": "String",
    "opcode": 5515,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the path to the Fallout directory"
  },
  {
    "name": "ActorValueToString",
    "alias": "AVString",
    "params": [
      {
        "type": "ActorValue",
        "name": "actor value",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5516,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the localized string corresponding to an actor value"
  },
  {
    "name": "ActorValueToStringC",
    "alias": "AVStringC",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5517,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the localized string corresponding to an actor value code"
  },
  {
    "name": "GetModelPath",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5518,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the model path of an object"
  },
  {
    "name": "GetIconPath",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5519,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the icon path of an object"
  },
  {
    "name": "GetBipedModelPath",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5520,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a model path"
  },
  {
    "name": "GetBipedIconPath",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5521,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an icon path"
  },
  {
    "name": "GetTexturePath",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5522,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "returns the texture path of an object. This command is identical to GetIconPath, but also works for other object types such as skills, classes, and miscellaneous objects"
  },
  {
    "name": "SetModelPathEX",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "object",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5523,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a simple model path"
  },
  {
    "name": "SetIconPathEX",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "object",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5524,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a simple icon path"
  },
  {
    "name": "SetBipedIconPathEX",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "whichPath",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5525,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a biped icon path"
  },
  {
    "name": "SetBipedModelPathEX",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "whichPath",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5526,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a biped model path"
  },
  {
    "name": "SetTexturePath",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Form",
        "name": "object",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5527,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the texture path of an object. This command works for a broader set of objects than SetIconPathEX"
  },
  {
    "name": "GetNthFactionRankName",
    "params": [
      {
        "type": "Faction",
        "name": "faction",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "rank",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bFemale",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5528,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the name of the faction rank"
  },
  {
    "name": "SetNthFactionRankNameEX",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Faction",
        "name": "faction",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "rank",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bFemale",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5529,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the name of the nth faction rank"
  },
  {
    "name": "GetStringGameSetting",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5530,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the value of a string game setting"
  },
  {
    "name": "SetStringGameSettingEX_DEPRECATED",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5531,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a string game setting"
  },
  {
    "name": "GetRace",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5532,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return NPC race"
  },
  {
    "name": "GetRaceName",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5533,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the name of the NPC race"
  },
  {
    "name": "con_SCOF",
    "params": [
      {
        "type": "String",
        "name": "String",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5534,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the given file as target for console output"
  },
  {
    "name": "PickOneOf",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5535,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Selects a random item present in the formList"
  },
  {
    "name": "IsPlayerSwimming",
    "params": [],
    "retType": "1/0",
    "opcode": 5536,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Check if the player is swimming"
  },
  {
    "name": "GetTFC",
    "params": [],
    "retType": "Float",
    "opcode": 5537,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Returns TFC status"
  },
  {
    "name": "V3Length",
    "alias": "v3len",
    "params": [
      {
        "type": "Float",
        "name": "vector_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5538,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns length of given vector3"
  },
  {
    "name": "V3Normalize",
    "alias": "v3norm",
    "params": [
      {
        "type": "String",
        "name": "vector_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5539,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns normalized vector3"
  },
  {
    "name": "V3Crossproduct",
    "alias": "v3xprod",
    "params": [
      {
        "type": "String",
        "name": "vector_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorA_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorA_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorA_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorB_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorB_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vectorB_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5540,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns crossproduct of two vectors"
  },
  {
    "name": "QFromEuler",
    "alias": "qfrome",
    "params": [
      {
        "type": "String",
        "name": "quat_w_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "elevation",
        "optional": false
      },
      {
        "type": "Float",
        "name": "bank",
        "optional": false
      },
      {
        "type": "Float",
        "name": "heading",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "actorFlag",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5541,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts euler angles to quaternion. optional flag indicates if the angles came from an actor"
  },
  {
    "name": "QFromAxisAngle",
    "alias": "qfromaa",
    "params": [
      {
        "type": "String",
        "name": "quat_w_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "axis_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "axis_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "axis_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "angle",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5542,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts axis-angle rotation to quaternion"
  },
  {
    "name": "QNormalize",
    "alias": "qnorm",
    "params": [
      {
        "type": "String",
        "name": "quat_w_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5543,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns normalized quaternion"
  },
  {
    "name": "QMultQuatQuat",
    "alias": "qmultq",
    "params": [
      {
        "type": "String",
        "name": "quat_w_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5544,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Multiplies two quaternions"
  },
  {
    "name": "QMultQuatVector3",
    "alias": "qmultv3",
    "params": [
      {
        "type": "String",
        "name": "vector_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "vector_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "vector_z",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5545,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Multiplies vector3 by quaternion"
  },
  {
    "name": "QToEuler",
    "alias": "qtoe",
    "params": [
      {
        "type": "String",
        "name": "elevation_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "bank_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "heading_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quat_z",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "actorFlag",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5546,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Converts quaternion to euler angles. optional flag indicates the output will be used for rotating an actor"
  },
  {
    "name": "QInterpolate",
    "alias": "qint",
    "params": [
      {
        "type": "String",
        "name": "quat_w_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_x_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_y_name",
        "optional": false
      },
      {
        "type": "String",
        "name": "quat_z_name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatA_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_w",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_x",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_y",
        "optional": false
      },
      {
        "type": "Float",
        "name": "quatB_z",
        "optional": false
      },
      {
        "type": "Float",
        "name": "ratio",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "flag",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5547,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Interpolates between two quaternions; default method is normalized linear interpolation. optional flag indicates spherical linear interpolation"
  },
  {
    "name": "IsPlayable",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5548,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns whether the biped form is usable by the player"
  },
  {
    "name": "SetIsPlayable",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5549,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets whether the armor is usable by the player or not"
  },
  {
    "name": "GetEquipmentSlotsMask",
    "alias": "GetESM",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5550,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the slots used by the biped form as a bitmask"
  },
  {
    "name": "SetEquipmentSlotsMask",
    "alias": "SetESM",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5551,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the slots used by the biped form from a bitmask"
  },
  {
    "name": "con_SQV",
    "params": [
      {
        "type": "Quest",
        "name": "Quest",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5552,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Show quest variables. [svq QuestID]"
  },
  {
    "name": "GetConsoleEcho",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5553,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns whether the engine echoes to the console"
  },
  {
    "name": "SetConsoleEcho",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5554,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Toggles wether the engine echoes to the console and return previous state"
  },
  {
    "name": "GetScopeModelPath",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5555,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get the path to the scope model of a weapon"
  },
  {
    "name": "SetScopeModelPath",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5556,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set the path to the scope model of a weapon"
  },
  {
    "name": "EndVATScam",
    "params": [],
    "retType": "Float",
    "opcode": 5557,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Remove all targets and close VATS mode"
  },
  {
    "name": "EquipItem2",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "silent",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "lockEquip",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5558,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Equips and runs onequip block"
  },
  {
    "name": "EquipMe",
    "params": [],
    "retType": "Float",
    "opcode": 5559,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Equips the calling object on its owner"
  },
  {
    "name": "UnequipMe",
    "params": [],
    "retType": "Float",
    "opcode": 5560,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Unequips the calling object on its owner"
  },
  {
    "name": "IsEquipped",
    "params": [],
    "retType": "1/0",
    "opcode": 5561,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns 1 if the calling object is currently being worn"
  },
  {
    "name": "GetInvRefsForItem",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5562,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns an array of temp refs to objects of the specified type in the calling container"
  },
  {
    "name": "SetHotkeyItem",
    "params": [
      {
        "type": "Integer",
        "name": "hotkey",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5563,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the item associated with a hotkey"
  },
  {
    "name": "ClearHotkey",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5564,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "clears the item associated with the specified hotkey"
  },
  {
    "name": "PrintDebug",
    "alias": "PrintD",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5565,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a string expression to the console in debug mode"
  },
  {
    "name": "SetVariable",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable value",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5566,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value of a variable by name"
  },
  {
    "name": "SetRefVariable",
    "params": [
      {
        "type": "String",
        "name": "variable name",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "variable value",
        "optional": false
      },
      {
        "type": "Quest",
        "name": "quest",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5567,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value of a variable by name"
  },
  {
    "name": "con_ShowVars",
    "params": [],
    "retType": "Float",
    "opcode": 5568,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Show variables on object. [player->sv]"
  },
  {
    "name": "GetStringIniSetting",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "String",
    "opcode": 5569,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the value of a string ini setting"
  },
  {
    "name": "SetStringIniSetting_DEPRECATED",
    "params": [
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5570,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a string ini setting"
  },
  {
    "name": "GetPerkRank",
    "params": [
      {
        "type": "Perk",
        "name": "perk",
        "optional": false
      },
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5571,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return actor Perk rank or -1 if the perk is not applied"
  },
  {
    "name": "GetAltPerkRank",
    "params": [
      {
        "type": "Perk",
        "name": "perk",
        "optional": false
      },
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5572,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "Return actor alternate Perk rank or -1 if the perk is not applied"
  },
  {
    "name": "GetEquipmentBipedMask",
    "alias": "GetEBM",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5573,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets the flags used by the biped form as a bitmask"
  },
  {
    "name": "SetEquipmentBipedMask",
    "alias": "SetEBM",
    "params": [
      {
        "type": "Integer",
        "name": "path type",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5574,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the flags used by the biped form from a bitmask"
  },
  {
    "name": "GetRefs",
    "params": [
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max distance",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max angle",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "baseForm",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5575,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of references of a given type in the current cell"
  },
  {
    "name": "GetRefsInCell",
    "params": [
      {
        "type": "Cell",
        "name": "cell",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "form type",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max distance",
        "optional": true
      },
      {
        "type": "Float",
        "name": "max angle",
        "optional": true
      },
      {
        "type": "AnyForm",
        "name": "baseForm",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5576,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of references of a given type in the specified cell"
  },
  {
    "name": "GetBaseNumFactions",
    "params": [
      {
        "type": "ActorBase",
        "name": "base actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5577,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of factions to which an actor base form belongs"
  },
  {
    "name": "GetBaseNthFaction",
    "params": [
      {
        "type": "Integer",
        "name": "bool",
        "optional": false
      },
      {
        "type": "ActorBase",
        "name": "base actor",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5578,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nth faction to which an actor base form belongs"
  },
  {
    "name": "GetBaseNthRank",
    "params": [
      {
        "type": "Integer",
        "name": "bool",
        "optional": false
      },
      {
        "type": "ActorBase",
        "name": "base actor",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5579,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nth faction rank to which an actor base form belongs"
  },
  {
    "name": "GetNumRanks",
    "params": [
      {
        "type": "Faction",
        "name": "faction",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5580,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of rank of a faction"
  },
  {
    "name": "GetRaceHairs",
    "params": [
      {
        "type": "Race",
        "name": "race",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5581,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the array of hair for a race"
  },
  {
    "name": "GetRaceEyes",
    "params": [
      {
        "type": "Race",
        "name": "race",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5582,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the array of eyes for a race"
  },
  {
    "name": "GetBaseSpellListSpells",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5583,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the array of spells for a SpellList"
  },
  {
    "name": "GetBaseSpellListLevSpells",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5584,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the array of leveled spells for a SpellList"
  },
  {
    "name": "GetBasePackages",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5585,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of packages for an actor base form"
  },
  {
    "name": "GetBaseFactions",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5586,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of factions to which an actor base form belongs"
  },
  {
    "name": "GetBaseRanks",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5587,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of faction ranks to which an actor base form belongs"
  },
  {
    "name": "GetActiveFactions",
    "params": [
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5588,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the active factions on an actor"
  },
  {
    "name": "GetActiveRanks",
    "params": [
      {
        "type": "Actor",
        "name": "actor",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5589,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the active faction ranks on an actor"
  },
  {
    "name": "GetFactionRankNames",
    "params": [
      {
        "type": "Faction",
        "name": "faction",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5590,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of name of faction ranks"
  },
  {
    "name": "GetFactionRankFemaleNames",
    "params": [
      {
        "type": "Faction",
        "name": "faction",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5591,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of the female name of faction ranks"
  },
  {
    "name": "GetHeadParts",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5592,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of head parts for a character"
  },
  {
    "name": "GetLevCreatureRefs",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5593,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of ref in a leveled creature leveled list"
  },
  {
    "name": "GetLevCharacterRefs",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5594,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of ref in a leveled character leveled list"
  },
  {
    "name": "GetListForms",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5595,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of forms in a form list"
  },
  {
    "name": "GenericAddForm",
    "params": [
      {
        "type": "Integer",
        "name": "which",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "containingForm",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5596,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Adds a form to a list of form of an object at index"
  },
  {
    "name": "GenericReplaceForm",
    "params": [
      {
        "type": "Integer",
        "name": "which",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "containingForm",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5597,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Change a form in a list of form of an object at index"
  },
  {
    "name": "GenericDeleteForm",
    "params": [
      {
        "type": "Integer",
        "name": "which",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "containingForm",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5598,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Delete a form from a list of form of an object at index"
  },
  {
    "name": "IsPluginInstalled",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5599,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if the specified plugin is installed, else 0"
  },
  {
    "name": "GetPluginVersion",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5600,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the version of the specified plugin, or -1 if the plugin is not installed"
  },
  {
    "name": "GenericGetForm",
    "params": [
      {
        "type": "Integer",
        "name": "which",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "containingForm",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5601,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a form from a list of form of an object at index"
  },
  {
    "name": "con_INV",
    "params": [],
    "retType": "Float",
    "opcode": 5602,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Shows reference inventory"
  },
  {
    "name": "GetNthDefaultForm",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Form",
    "opcode": 5603,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the Nth default form"
  },
  {
    "name": "SetNthDefaultForm",
    "params": [
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5604,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the Nth default form"
  },
  {
    "name": "GetDefaultForms",
    "params": [],
    "retType": "Array",
    "opcode": 5605,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns all default forms as an array"
  },
  {
    "name": "GetGridsToLoad",
    "params": [],
    "retType": "Float",
    "opcode": 5606,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the effective value of the uGridsToLoad ini setting"
  },
  {
    "name": "OutputLocalMapPicturesOverride",
    "alias": "OLMPOR",
    "params": [],
    "retType": "Float",
    "opcode": 5607,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "identical to the OutputLocalMapPictures console command, but overrides the uGridsToLoad ini setting"
  },
  {
    "name": "SetOutputLocalMapPicturesGrids",
    "alias": "SetOLMPGrids",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5608,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the value with which to override uGridsToLoad when generating local maps with OLMPOR"
  },
  {
    "name": "SetEventHandler",
    "params": [
      {
        "type": "String",
        "name": "event name",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function script",
        "optional": false
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5609,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "defines a function script to serve as a callback for game events"
  },
  {
    "name": "RemoveEventHandler",
    "params": [
      {
        "type": "String",
        "name": "event name",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function script",
        "optional": false
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5610,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "removes event handlers matching the event, script, and optional filters specified"
  },
  {
    "name": "GetCurrentEventName",
    "params": [],
    "retType": "String",
    "opcode": 5611,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the name of the event currently being processed by an event handler"
  },
  {
    "name": "DispatchEvent",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "Array",
        "name": "args",
        "optional": true
      },
      {
        "type": "String",
        "name": "sender",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5612,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dispatches a user-defined event to any registered listeners"
  },
  {
    "name": "GetInGrid",
    "params": [
      {
        "type": "ObjectRef",
        "name": "refr",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5613,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns if a specific reference is in the current cell"
  },
  {
    "name": "GetInGridInCell",
    "params": [
      {
        "type": "Cell",
        "name": "cell",
        "optional": false
      },
      {
        "type": "ObjectRef",
        "name": "refr",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "cell depth",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "include taken refs",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5614,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns if a specific reference is in the grid centered on the specified cell"
  },
  {
    "name": "AddSpellNS",
    "params": [
      {
        "type": "SpellItem",
        "name": "spell",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5615,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Identical to AddSpell but without the UI message"
  },
  {
    "name": "GetFlagsLow",
    "params": [
      {
        "type": "AnyForm",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5616,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a bitfield containing object flags"
  },
  {
    "name": "SetFlagsLow",
    "params": [
      {
        "type": "Integer",
        "name": "flags",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5617,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets actor flags"
  },
  {
    "name": "GetFlagsHigh",
    "params": [
      {
        "type": "AnyForm",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5618,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a bitfield containing actor flags"
  },
  {
    "name": "SetFlagsHigh",
    "params": [
      {
        "type": "Integer",
        "name": "flags",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "actor base",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5619,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets actor base flags"
  },
  {
    "name": "HasConsoleOutputFilename",
    "alias": "HasCOF",
    "params": [],
    "retType": "Float",
    "opcode": 5620,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "return if there is a Console Output Filename active"
  },
  {
    "name": "GetConsoleOutputFilename",
    "alias": "GetCOF",
    "params": [],
    "retType": "String",
    "opcode": 5621,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "returns the name of the Console Output Filename"
  },
  {
    "name": "PrintF",
    "params": [
      {
        "type": "String",
        "name": "filename",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5622,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a string expression to a file"
  },
  {
    "name": "PrintDebugF",
    "alias": "PrintDF",
    "params": [
      {
        "type": "String",
        "name": "filename",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5623,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints a string expression to a file in debug mode"
  },
  {
    "name": "con_TFIK",
    "params": [],
    "retType": "Float",
    "opcode": 5624,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Toggles Foot IK system"
  },
  {
    "name": "IsLoadDoor",
    "params": [],
    "retType": "1/0",
    "opcode": 5625,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "returns 1 if the calling reference is a load door"
  },
  {
    "name": "GetDoorTeleportX",
    "params": [],
    "retType": "Float",
    "opcode": 5626,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns x-coord to which the door teleports"
  },
  {
    "name": "GetDoorTeleportY",
    "params": [],
    "retType": "Float",
    "opcode": 5627,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns y-coord to which the door teleports"
  },
  {
    "name": "GetDoorTeleportZ",
    "params": [],
    "retType": "Float",
    "opcode": 5628,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns z-coord to which the door teleports"
  },
  {
    "name": "GetDoorTeleportRot",
    "params": [],
    "retType": "Float",
    "opcode": 5629,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns z rotation to which the door teleports"
  },
  {
    "name": "SetDoorTeleport",
    "params": [
      {
        "type": "ObjectRef",
        "name": "linkedDoor",
        "optional": false
      },
      {
        "type": "Float",
        "name": "x",
        "optional": true
      },
      {
        "type": "Float",
        "name": "y",
        "optional": true
      },
      {
        "type": "Float",
        "name": "z",
        "optional": true
      },
      {
        "type": "Float",
        "name": "rot",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5630,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the linked door and coordinates to which the door teleports"
  },
  {
    "name": "GenericCheckForm",
    "params": [
      {
        "type": "Integer",
        "name": "which",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "containingForm",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5631,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Checks if a form is in a list of form of an object"
  },
  {
    "name": "GetEyesFlags",
    "params": [
      {
        "type": "AnyForm",
        "name": "eyes",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "mask",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5632,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get the flags of eyes"
  },
  {
    "name": "SetEyesFlags",
    "params": [
      {
        "type": "AnyForm",
        "name": "eyes",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "mask",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5633,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set the flags of eyes"
  },
  {
    "name": "GetHairFlags",
    "params": [
      {
        "type": "AnyForm",
        "name": "hair",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "mask",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5634,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Get the flags of an hair"
  },
  {
    "name": "SetHairFlags",
    "params": [
      {
        "type": "AnyForm",
        "name": "hair",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "mask",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5635,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Set the flags of an hair"
  },
  {
    "name": "ar_Packed",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5636,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns if the array is packed (array) or not (map)"
  },
  {
    "name": "GetActorFIKstatus",
    "alias": "GetFIK",
    "params": [],
    "retType": "Float",
    "opcode": 5637,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "Get an actor Foot IK status"
  },
  {
    "name": "SetActorFIKstatus",
    "alias": "SetFIK",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5638,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Set an actor Foot IK status"
  },
  {
    "name": "GetBit",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5639,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets a single bit specified by lsb-first index"
  },
  {
    "name": "HasEffectShader",
    "params": [
      {
        "type": "EffectShader",
        "name": "effectShader",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5640,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Returns 1 if the reference is playing the effect shader"
  },
  {
    "name": "GetCurrentQuestObjectiveTeleportLinks",
    "alias": "GCQOTL",
    "params": [],
    "retType": "Array",
    "opcode": 5641,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an array of array of the path to the current objective targets"
  },
  {
    "name": "ATan2",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5642,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the arccos of two values in radians"
  },
  {
    "name": "Sinh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5643,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic sin of a value in radians"
  },
  {
    "name": "Cosh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5644,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic cos of a value in radians"
  },
  {
    "name": "Tanh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5645,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic tan of a value in radians"
  },
  {
    "name": "dSin",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5646,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the sin of a value in degrees"
  },
  {
    "name": "dCos",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5647,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the cos of a value in degrees"
  },
  {
    "name": "dTan",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5648,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the tan of a value in degrees"
  },
  {
    "name": "dASin",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5649,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the arcsin of a value in degrees"
  },
  {
    "name": "dACos",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5650,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the arccos of a value in degrees"
  },
  {
    "name": "dATan",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5651,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the arctan of a value in degrees"
  },
  {
    "name": "dATan2",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5652,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the arctan of two values in degrees"
  },
  {
    "name": "dSinh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5653,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic sin of a value in degrees"
  },
  {
    "name": "dCosh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5654,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic cos of a value in degrees"
  },
  {
    "name": "dTanh",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5655,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Calculates the hyperbolic tan of a value in degrees"
  },
  {
    "name": "GetNthAnimation",
    "params": [
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5656,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the nth animation selected on an NPC or a creature"
  },
  {
    "name": "AddAnimation",
    "params": [
      {
        "type": "String",
        "name": "index",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5657,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Add an animation to an NPC or a creature"
  },
  {
    "name": "DelAnimation",
    "params": [
      {
        "type": "String",
        "name": "index",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5658,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Delete an animation from an NPC or a creature"
  },
  {
    "name": "DelAnimations",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5659,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Delete all animation from an NPC or a creature"
  },
  {
    "name": "GetClass",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5660,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return NPC class"
  },
  {
    "name": "GetNameOfClass",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5661,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Return the name of the NPC class"
  },
  {
    "name": "ShowLevelUpMenu",
    "params": [],
    "retType": "Float",
    "opcode": 5662,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Shows the LevelUp menu"
  },
  {
    "name": "GetUIFloatAlt",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5663,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "SetUIFloatAlt",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5664,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "SetUIStringAlt",
    "params": [
      {
        "type": "String",
        "name": "component name",
        "optional": false
      },
      {
        "type": "String",
        "name": "format string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Float",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5665,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "CallAfterSeconds_OLD",
    "alias": "CallAfter_OLD",
    "params": [
      {
        "type": "Float",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "function",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "runs in menumode",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5666,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "CallWhile_OLD",
    "params": [
      {
        "type": "AnyForm",
        "name": "function",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "condition",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5667,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "CallForSeconds_OLD",
    "alias": "CallFor_OLD",
    "params": [
      {
        "type": "Float",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "function",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "runs in menumode",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5668,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "ar_DumpF",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Bool",
        "name": "bool",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5669,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dumps the contents of an array to a file"
  },
  {
    "name": "PrintVar",
    "alias": "PrintV",
    "params": [
      {
        "type": "Variable",
        "name": "variable",
        "optional": false
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5670,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "ar_FindWhere",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Array index",
    "opcode": 5671,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "finds first element in array which satisfies a condition"
  },
  {
    "name": "ar_Filter",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5672,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "filters an array on a condition"
  },
  {
    "name": "ar_MapTo",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5673,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "transforms an array into a new array from a script"
  },
  {
    "name": "DecompileScript",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5674,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Decompiles a script to file"
  },
  {
    "name": "HasScriptCommand",
    "params": [
      {
        "type": "Integer",
        "name": "command opcode",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "form",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "event block id",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5675,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 1 if script contains call to a command"
  },
  {
    "name": "GetCommandOpcode",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5676,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Gets opcode for command name"
  },
  {
    "name": "ar_Generate",
    "params": [
      {
        "type": "Number",
        "name": "int",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5677,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "creates a new array from a function called each time for each element"
  },
  {
    "name": "ar_Init",
    "alias": "ar_Initialize",
    "params": [
      {
        "type": "Number",
        "name": "int",
        "optional": false
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5678,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "creates a new array with x amount of elements, all set to a single value"
  },
  {
    "name": "ar_DeepEquals",
    "alias": "ar_DeepCompare",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5679,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "checks if every element and sub-elements are identical between two arrays"
  },
  {
    "name": "ar_ForEach",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5680,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls a function on each element of array"
  },
  {
    "name": "ar_Any",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5681,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "checks if any of the elements in array satisfies a function script"
  },
  {
    "name": "ar_All",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5682,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "checks if all of the elements in array satisfy a function script"
  },
  {
    "name": "GetWeaponRegenRate",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5683,
    "isCondFunc": true,
    "reqRef": false
  },
  {
    "name": "SetWeaponRegenRate",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5684,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "ar_Unique",
    "params": [
      {
        "type": "Array",
        "name": "array",
        "optional": false
      }
    ],
    "retType": "Array",
    "opcode": 5685,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "returns a new array with no duplicate elements from the source array"
  },
  {
    "name": "CallFunctionCond",
    "params": [
      {
        "type": "FormList",
        "name": "UDF FormList",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "bBreakIfFalse",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5686,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "calls every UDF in a formlist and returns the result of the last one"
  },
  {
    "name": "CallWhen_OLD",
    "params": [
      {
        "type": "AnyForm",
        "name": "function",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "condition",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5687,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "ForEachInList",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      },
      {
        "type": "AnyForm",
        "name": "condition user defined function",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5688,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "invokes a UDF that is called on each form in a formlist"
  },
  {
    "name": "Ternary",
    "params": [
      {
        "type": "AnyType",
        "name": "value",
        "optional": false
      },
      {
        "type": "Form",
        "name": "callIfTrue (UDF)",
        "optional": false
      },
      {
        "type": "Form",
        "name": "callIfFalse (UDF)",
        "optional": false
      }
    ],
    "retType": "Ambiguous",
    "opcode": 5689,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "The ternary operator as a function"
  },
  {
    "name": "ModUIFloat",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Float",
        "name": "float",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5690,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "GetQuestObjectiveCount",
    "alias": "GetObjectiveCount",
    "params": [
      {
        "type": "Quest",
        "name": "quest",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5691,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the number of objectives for the specified quest"
  },
  {
    "name": "GetNthQuestObjective",
    "alias": "GetNthObjective",
    "params": [
      {
        "type": "Quest",
        "name": "quest",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "index",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5692,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the objectiveID of the Nth objective of the quest"
  },
  {
    "name": "GetCurrentObjective",
    "alias": "GetCurObjID",
    "params": [],
    "retType": "Float",
    "opcode": 5693,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the objectiveID of the current objective"
  },
  {
    "name": "PrintActiveTile",
    "params": [],
    "retType": "Float",
    "opcode": 5694,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Prints name of highlighted UI component for debug purposes"
  },
  {
    "name": "SetCurrentQuest",
    "params": [
      {
        "type": "Quest",
        "name": "quest",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5695,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets the current quest to the specified quest"
  },
  {
    "name": "sv_Trim",
    "params": [
      {
        "type": "StringVar",
        "name": "stringVar",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5696,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Trims the beginning and the end of a string variable"
  },
  {
    "name": "CallAfterSeconds",
    "alias": "CallAfter",
    "params": [
      {
        "type": "Number",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5697,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF after argument number of seconds"
  },
  {
    "name": "CallForSeconds",
    "alias": "CallFor",
    "params": [
      {
        "type": "Number",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5698,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF each frame for argument number of seconds"
  },
  {
    "name": "CallWhile",
    "params": [
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5699,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF each frame while condition is met"
  },
  {
    "name": "CallWhen",
    "params": [
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5700,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF once when a condition is met which is polled each frame"
  },
  {
    "name": "SetEditorID",
    "params": [
      {
        "type": "AnyForm",
        "name": "form",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5701,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "sets editor id of form"
  },
  {
    "name": "Assert",
    "alias": "AssertTrue",
    "params": [
      {
        "type": "Bool",
        "name": "boolean expression",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5702,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "DispatchEventAlt",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "AnyType",
        "name": "arg1",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg2",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg3",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg4",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg5",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg6",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg7",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg8",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg9",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg10",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg11",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg12",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg13",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg14",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg15",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5703,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dispatches a user-defined event to any registered listeners"
  },
  {
    "name": "DumpEventHandlers",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": true
      },
      {
        "type": "Form",
        "name": "script",
        "optional": true
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg1",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg2",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg3",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg4",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg5",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg6",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg7",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg8",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg9",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg10",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg11",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg12",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg13",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg14",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg15",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5704,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "dumps event handlers, optionally filtered by eventName, script and args"
  },
  {
    "name": "GetEventHandlers",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": true
      },
      {
        "type": "Form",
        "name": "script",
        "optional": true
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg1",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg2",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg3",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg4",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg5",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg6",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg7",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg8",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg9",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg10",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg11",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg12",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg13",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg14",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "arg15",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5705,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "returns a multi-dimensional array of event handlers, optionally filtered by eventName, script and args"
  },
  {
    "name": "GetSelfAlt_OLD",
    "alias": "ThisAlt_OLD",
    "params": [],
    "retType": "Form",
    "opcode": 5706,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "|DEPRECATED|"
  },
  {
    "name": "SetEventHandlerAlt",
    "params": [
      {
        "type": "String",
        "name": "event name",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function script",
        "optional": false
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      },
      {
        "type": "Pair",
        "name": "filter",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5707,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Uses the new event filtering system"
  },
  {
    "name": "CreateFormList",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": true
      },
      {
        "type": "Array",
        "name": "array",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5708,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "creates a formList, optionally set with an editorID and filled by an array"
  },
  {
    "name": "CallWhilePerSeconds",
    "params": [
      {
        "type": "Number",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Form",
        "name": "condition",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5709,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF every couple of seconds, until the condition UDF returns false"
  },
  {
    "name": "CallAfterFrames",
    "params": [
      {
        "type": "Number",
        "name": "seconds",
        "optional": false
      },
      {
        "type": "Form",
        "name": "function",
        "optional": false
      },
      {
        "type": "Number",
        "name": "flags",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      },
      {
        "type": "AnyType",
        "name": "element",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5710,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "calls UDF after argument number of frame"
  },
  {
    "name": "GetSoldItemInvRef",
    "params": [],
    "retType": "Form",
    "opcode": 5711,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns the invRef for the currently sold item (in OnSell event)"
  },
  {
    "name": "IsEventHandlerFirst",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "Form",
        "name": "script",
        "optional": false
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": false
      },
      {
        "type": "Form",
        "name": "scriptsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginHandlersToIgnore",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5712,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "IsEventHandlerLast",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "Form",
        "name": "script",
        "optional": false
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": false
      },
      {
        "type": "Form",
        "name": "scriptsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginHandlersToIgnore",
        "optional": true
      }
    ],
    "retType": "1/0",
    "opcode": 5713,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "GetHigherPriorityEventHandlers",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "Form",
        "name": "script",
        "optional": false
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": false
      },
      {
        "type": "Form",
        "name": "scriptsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginHandlersToIgnore",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5714,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "GetLowerPriorityEventHandlers",
    "params": [
      {
        "type": "String",
        "name": "eventName",
        "optional": false
      },
      {
        "type": "Form",
        "name": "script",
        "optional": false
      },
      {
        "type": "Number",
        "name": "priority",
        "optional": false
      },
      {
        "type": "Form",
        "name": "scriptsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginsToIgnore",
        "optional": true
      },
      {
        "type": "Array",
        "name": "pluginHandlersToIgnore",
        "optional": true
      }
    ],
    "retType": "Array",
    "opcode": 5715,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "ValidateRegex",
    "params": [
      {
        "type": "String",
        "name": "regexToValidate",
        "optional": false
      },
      {
        "type": "StringVar",
        "name": "outErrStrVar",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5716,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns 0 for no errors, otherwise returns int codes indicating the error cause"
  },
  {
    "name": "IntToBin",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5717,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an int as a binary string of the specified width"
  },
  {
    "name": "NumToHex",
    "alias": "IntToHex",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "String",
    "opcode": 5718,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns an int as a hex string of the specified width"
  },
  {
    "name": "HasAmmoEquipped",
    "alias": "IsAmmoEquipped",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5719,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "returns if a specific ammo is equipped by the calling ref"
  },
  {
    "name": "GetEquippedWeaponCanUseAmmo",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5720,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "returns if the equipped weapon can use the specified ammo"
  },
  {
    "name": "IsEquippedAmmoInList",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "1/0",
    "opcode": 5721,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "returns if any ammo in a list is currently equipped by the calling ref"
  },
  {
    "name": "GetEquippedWeaponUsesAmmoList",
    "params": [
      {
        "type": "FormList",
        "name": "form list",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5722,
    "isCondFunc": true,
    "reqRef": true,
    "desc": "returns if the equipped weapon uses a specific list of ammo"
  },
  {
    "name": "IsInventoryRef",
    "params": [],
    "retType": "1/0",
    "opcode": 5723,
    "isCondFunc": false,
    "reqRef": true
  },
  {
    "name": "DebugPrintVar",
    "alias": "DPrintV",
    "params": [
      {
        "type": "Variable",
        "name": "variable",
        "optional": false
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      },
      {
        "type": "Variable",
        "name": "variable",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5724,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "SetStringIniSetting",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5725,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Sets a string ini setting"
  },
  {
    "name": "GetHeadingAngleX",
    "params": [
      {
        "type": "ObjectRef",
        "name": "ref",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5726,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "Gets the up/down angle the calling reference is relative to a target"
  },
  {
    "name": "GetWeaponCanUseAmmo",
    "params": [
      {
        "type": "ObjectID",
        "name": "item",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5727,
    "isCondFunc": true,
    "reqRef": false,
    "desc": "returns if the weapon can use the specified ammo"
  },
  {
    "name": "SetAmmoConsumedPercent",
    "params": [
      {
        "type": "Float",
        "name": "float",
        "optional": false
      },
      {
        "type": "ObjectID",
        "name": "item",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5728,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "DisablePlayerControlsAlt",
    "alias": "DPCAlt",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5729,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Per-mod version with added args"
  },
  {
    "name": "EnablePlayerControlsAlt",
    "alias": "EPCAlt",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5730,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Per-mod version with added args"
  },
  {
    "name": "GetPlayerControlsDisabledAlt",
    "alias": "GPCDAlt",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5731,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "DisablePlayerControlsAltEx",
    "alias": "DPCEx",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5732,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Per-mod version with added args"
  },
  {
    "name": "EnablePlayerControlsAltEx",
    "alias": "EPCEx",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5733,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Per-mod version with added args"
  },
  {
    "name": "GetPlayerControlsDisabledAltEx",
    "alias": "GPCDEx",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5734,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "CopyIRAlt",
    "params": [
      {
        "type": "Container",
        "name": "containerRef",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5735,
    "isCondFunc": false,
    "reqRef": true,
    "desc": "copies an inventory reference to the specified container. The calling object needn't be in a container and remains valid after the command is called. If the calling object is equipped, the copy will not be equipped"
  },
  {
    "name": "CompileScript",
    "alias": "GetUDFFromFile",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      },
      {
        "type": "Bool",
        "name": "bool",
        "optional": true
      }
    ],
    "retType": "Form",
    "opcode": 5736,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Returns a compiled script from a file, to call as a UDF"
  },
  {
    "name": "GetSelfAlt",
    "alias": "ThisAlt",
    "params": [],
    "retType": "Form",
    "opcode": 5737,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Unlike GetSelf, will return ThisObj even if it isn't Persistent and is clutter"
  },
  {
    "name": "DumpDocs",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5738,
    "isCondFunc": false,
    "reqRef": false
  },
  {
    "name": "DumpCommandWikiDoc",
    "alias": "DumpWikiDoc",
    "params": [
      {
        "type": "String",
        "name": "string",
        "optional": false
      }
    ],
    "retType": "Float",
    "opcode": 5739,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dumps wiki-style documentation for a command"
  },
  {
    "name": "DumpCommandWikiDocs",
    "alias": "DumpWikiDocs",
    "params": [
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "Integer",
        "name": "int",
        "optional": false
      },
      {
        "type": "String",
        "name": "string",
        "optional": true
      }
    ],
    "retType": "Float",
    "opcode": 5740,
    "isCondFunc": false,
    "reqRef": false,
    "desc": "Dumps wiki-style documentation for multiple commands"
  }
]
