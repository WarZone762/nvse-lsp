Script@0..3995
    Name@0..4 "name"
    Whitespace@4..5 " "
    Name@5..11
        Identifier@5..11 "binary"
    Semicolon@11..12 ";"
    Whitespace@12..14 "\n\n"
    FnDeclItem@14..3995
        Fn@14..16 "fn"
        Whitespace@16..17 " "
        ParamList@17..19
            LeftParen@17..18 "("
            RightParen@18..19 ")"
        Whitespace@19..20 " "
        BlockStmt@20..3995
            LeftBrace@20..21 "{"
            Whitespace@21..23 "\n\t"
            VarDeclStmt@23..61
                VarDecl@23..60
                    StringType@23..29 "string"
                    Whitespace@29..30 " "
                    Name@30..38
                        Identifier@30..38 "testName"
                    Whitespace@38..39 " "
                    Eq@39..40 "="
                    Whitespace@40..41 " "
                    StrExpr@41..60
                        QuoteDouble@41..42 "\""
                        StringShardLiteral@42..59
                            StringShard@42..59 "Binary Operations"
                        QuoteDouble@59..60 "\""
                Semicolon@60..61 ";"
            Whitespace@61..63 "\n\t"
            ExprStmt@63..125
                CallExpr@63..124
                    NameRef@63..68
                        Identifier@63..68 "print"
                    ArgList@68..124
                        LeftParen@68..69 "("
                        LeftParen@69..70 "("
                        BinaryExpr@70..122
                            BinaryExpr@70..105
                                StrExpr@70..94
                                    QuoteDouble@70..71 "\""
                                    StringShardLiteral@71..93
                                        StringShard@71..93 "Started running xNVSE "
                                    QuoteDouble@93..94 "\""
                                Whitespace@94..95 " "
                                Plus@95..96 "+"
                                Whitespace@96..97 " "
                                NameRef@97..105
                                    Identifier@97..105 "testName"
                            Whitespace@105..106 " "
                            Plus@106..107 "+"
                            Whitespace@107..108 " "
                            StrExpr@108..122
                                QuoteDouble@108..109 "\""
                                StringShardLiteral@109..121
                                    StringShard@109..121 " unit tests."
                                QuoteDouble@121..122 "\""
                        RightParen@122..123 ")"
                        RightParen@123..124 ")"
                Semicolon@124..125 ";"
            Whitespace@125..128 "\n\t\n"
            Comment@128..154 "//== Assignment operators\n"
            Whitespace@154..155 "\n"
            Comment@155..171 "// \"=\" operator\n"
            Whitespace@171..172 "\t"
            VarDeclStmt@172..186
                VarDecl@172..185
                    IntType@172..175 "int"
                    Whitespace@175..176 " "
                    Name@176..181
                        Identifier@176..181 "iTest"
                    Whitespace@181..182 " "
                    Eq@182..183 "="
                    Whitespace@183..184 " "
                    Literal@184..185
                        Number@184..185 "1"
                Semicolon@185..186 ";"
            Whitespace@186..188 "\n\t"
            ExprStmt@188..207
                CallExpr@188..206
                    NameRef@188..194
                        Identifier@188..194 "assert"
                    ArgList@194..206
                        LeftParen@194..195 "("
                        BinaryExpr@195..205
                            NameRef@195..200
                                Identifier@195..200 "iTest"
                            Whitespace@200..201 " "
                            EqEq@201..203 "=="
                            Whitespace@203..204 " "
                            Literal@204..205
                                Number@204..205 "1"
                        RightParen@205..206 ")"
                Semicolon@206..207 ";"
            Whitespace@207..208 " "
            Comment@208..240 "// also tests equality operator\n"
            Whitespace@240..243 "\t\n\t"
            VarDeclStmt@243..271
                VarDecl@243..270
                    ArrayType@243..248 "array"
                    Whitespace@248..249 " "
                    Name@249..254
                        Identifier@249..254 "aTest"
                    Whitespace@254..255 " "
                    Eq@255..256 "="
                    Whitespace@256..257 " "
                    CallExpr@257..270
                        NameRef@257..264
                            Identifier@257..264 "ar_list"
                        ArgList@264..270
                            LeftParen@264..265 "("
                            Literal@265..266
                                Number@265..266 "1"
                            Comma@266..267 ","
                            Whitespace@267..268 " "
                            Literal@268..269
                                Number@268..269 "2"
                            RightParen@269..270 ")"
                Semicolon@270..271 ";"
            Whitespace@271..273 "\n\t"
            ExprStmt@273..306
                CallExpr@273..305
                    NameRef@273..279
                        Identifier@273..279 "assert"
                    ArgList@279..305
                        LeftParen@279..280 "("
                        BinaryExpr@280..304
                            NameRef@280..285
                                Identifier@280..285 "aTest"
                            Whitespace@285..286 " "
                            EqEq@286..288 "=="
                            Whitespace@288..289 " "
                            LeftParen@289..290 "("
                            CallExpr@290..303
                                NameRef@290..297
                                    Identifier@290..297 "ar_List"
                                ArgList@297..303
                                    LeftParen@297..298 "("
                                    Literal@298..299
                                        Number@298..299 "1"
                                    Comma@299..300 ","
                                    Whitespace@300..301 " "
                                    Literal@301..302
                                        Number@301..302 "2"
                                    RightParen@302..303 ")"
                            RightParen@303..304 ")"
                        RightParen@304..305 ")"
                Semicolon@305..306 ";"
            Whitespace@306..308 "\n\t"
            ExprStmt@308..341
                CallExpr@308..340
                    NameRef@308..314
                        Identifier@308..314 "assert"
                    ArgList@314..340
                        LeftParen@314..315 "("
                        BinaryExpr@315..339
                            NameRef@315..320
                                Identifier@315..320 "aTest"
                            Whitespace@320..321 " "
                            BangEq@321..323 "!="
                            Whitespace@323..324 " "
                            LeftParen@324..325 "("
                            CallExpr@325..338
                                NameRef@325..332
                                    Identifier@325..332 "ar_List"
                                ArgList@332..338
                                    LeftParen@332..333 "("
                                    Literal@333..334
                                        Number@333..334 "1"
                                    Comma@334..335 ","
                                    Whitespace@335..336 " "
                                    Literal@336..337
                                        Number@336..337 "3"
                                    RightParen@337..338 ")"
                            RightParen@338..339 ")"
                        RightParen@339..340 ")"
                Semicolon@340..341 ";"
            Whitespace@341..342 " "
            Comment@342..361 "// test inequality\n"
            Whitespace@361..364 "\t\n\t"
            VarDeclStmt@364..383
                VarDecl@364..382
                    RefType@364..367 "ref"
                    Whitespace@367..368 " "
                    Name@368..373
                        Identifier@368..373 "rTest"
                    Whitespace@373..374 " "
                    Eq@374..375 "="
                    Whitespace@375..376 " "
                    NameRef@376..382
                        Identifier@376..382 "Player"
                Semicolon@382..383 ";"
            Whitespace@383..385 "\n\t"
            ExprStmt@385..409
                CallExpr@385..408
                    NameRef@385..391
                        Identifier@385..391 "assert"
                    ArgList@391..408
                        LeftParen@391..392 "("
                        BinaryExpr@392..407
                            NameRef@392..397
                                Identifier@392..397 "rTest"
                            Whitespace@397..398 " "
                            EqEq@398..400 "=="
                            Whitespace@400..401 " "
                            NameRef@401..407
                                Identifier@401..407 "Player"
                        RightParen@407..408 ")"
                Semicolon@408..409 ";"
            Whitespace@409..413 "\n\t\n\t"
            VarDeclStmt@413..435
                VarDecl@413..434
                    StringType@413..419 "string"
                    Whitespace@419..420 " "
                    Name@420..425
                        Identifier@420..425 "sTest"
                    Whitespace@425..426 " "
                    Eq@426..427 "="
                    Whitespace@427..428 " "
                    StrExpr@428..434
                        QuoteDouble@428..429 "\""
                        StringShardLiteral@429..433
                            StringShard@429..433 "test"
                        QuoteDouble@433..434 "\""
                Semicolon@434..435 ";"
            Whitespace@435..437 "\n\t"
            ExprStmt@437..461
                CallExpr@437..460
                    NameRef@437..443
                        Identifier@437..443 "assert"
                    ArgList@443..460
                        LeftParen@443..444 "("
                        BinaryExpr@444..459
                            NameRef@444..449
                                Identifier@444..449 "sTest"
                            Whitespace@449..450 " "
                            EqEq@450..452 "=="
                            Whitespace@452..453 " "
                            StrExpr@453..459
                                QuoteDouble@453..454 "\""
                                StringShardLiteral@454..458
                                    StringShard@454..458 "test"
                                QuoteDouble@458..459 "\""
                        RightParen@459..460 ")"
                Semicolon@460..461 ";"
            Whitespace@461..465 "\n\t\n\t"
            VarDeclStmt@465..484
                VarDecl@465..483
                    DoubleType@465..471 "double"
                    Whitespace@471..472 " "
                    Name@472..477
                        Identifier@472..477 "fTest"
                    Whitespace@477..478 " "
                    Eq@478..479 "="
                    Whitespace@479..480 " "
                    Literal@480..483
                        Number@480..483 "2.5"
                Semicolon@483..484 ";"
            Whitespace@484..486 "\n\t"
            ExprStmt@486..507
                CallExpr@486..506
                    NameRef@486..492
                        Identifier@486..492 "assert"
                    ArgList@492..506
                        LeftParen@492..493 "("
                        BinaryExpr@493..505
                            NameRef@493..498
                                Identifier@493..498 "fTest"
                            Whitespace@498..499 " "
                            EqEq@499..501 "=="
                            Whitespace@501..502 " "
                            Literal@502..505
                                Number@502..505 "2.5"
                        RightParen@505..506 ")"
                Semicolon@506..507 ";"
            Whitespace@507..511 "\n\t\n\t"
            Comment@511..554 "// Ensure rounding down works for integers\n"
            Whitespace@554..555 "\t"
            ExprStmt@555..567
                BinaryExpr@555..566
                    NameRef@555..560
                        Identifier@555..560 "iTest"
                    Whitespace@560..561 " "
                    Eq@561..562 "="
                    Whitespace@562..563 " "
                    Literal@563..566
                        Number@563..566 "2.5"
                Semicolon@566..567 ";"
            Whitespace@567..569 "\n\t"
            ExprStmt@569..588
                CallExpr@569..587
                    NameRef@569..575
                        Identifier@569..575 "assert"
                    ArgList@575..587
                        LeftParen@575..576 "("
                        BinaryExpr@576..586
                            NameRef@576..581
                                Identifier@576..581 "iTest"
                            Whitespace@581..582 " "
                            EqEq@582..584 "=="
                            Whitespace@584..585 " "
                            Literal@585..586
                                Number@585..586 "2"
                        RightParen@586..587 ")"
                Semicolon@587..588 ";"
            Whitespace@588..592 "\n\t\n\t"
            Comment@592..631 "// try setting to Ambiguous-type value\n"
            Whitespace@631..632 "\t"
            ExprStmt@632..648
                BinaryExpr@632..647
                    NameRef@632..637
                        Identifier@632..637 "iTest"
                    Whitespace@637..638 " "
                    Eq@638..639 "="
                    Whitespace@639..640 " "
                    UnaryExpr@640..647
                        Star@640..641 "*"
                        LeftParen@641..642 "("
                        UnaryExpr@642..646
                            BitwiseAnd@642..643 "&"
                            LeftParen@643..644 "("
                            Literal@644..645
                                Number@644..645 "1"
                            RightParen@645..646 ")"
                        RightParen@646..647 ")"
                Semicolon@647..648 ";"
            Whitespace@648..650 "\n\t"
            ExprStmt@650..669
                CallExpr@650..668
                    NameRef@650..656
                        Identifier@650..656 "assert"
                    ArgList@656..668
                        LeftParen@656..657 "("
                        BinaryExpr@657..667
                            NameRef@657..662
                                Identifier@657..662 "iTest"
                            Whitespace@662..663 " "
                            EqEq@663..665 "=="
                            Whitespace@665..666 " "
                            Literal@666..667
                                Number@666..667 "1"
                        RightParen@667..668 ")"
                Semicolon@668..669 ";"
            Whitespace@669..673 "\n\t\n\t"
            Comment@673..697 "// Try on array element\n"
            Whitespace@697..698 "\t"
            ExprStmt@698..720
                BinaryExpr@698..719
                    NameRef@698..703
                        Identifier@698..703 "aTest"
                    Whitespace@703..704 " "
                    Eq@704..705 "="
                    Whitespace@705..706 " "
                    CallExpr@706..719
                        NameRef@706..713
                            Identifier@706..713 "ar_List"
                        ArgList@713..719
                            LeftParen@713..714 "("
                            Literal@714..715
                                Number@714..715 "1"
                            Comma@715..716 ","
                            Whitespace@716..717 " "
                            Literal@717..718
                                Number@717..718 "2"
                            RightParen@718..719 ")"
                Semicolon@719..720 ";"
            Whitespace@720..722 "\n\t"
            ExprStmt@722..735
                BinaryExpr@722..734
                    SubscriptExpr@722..730
                        NameRef@722..727
                            Identifier@722..727 "aTest"
                        LeftBracket@727..728 "["
                        Literal@728..729
                            Number@728..729 "1"
                        RightBracket@729..730 "]"
                    Whitespace@730..731 " "
                    Eq@731..732 "="
                    Whitespace@732..733 " "
                    Literal@733..734
                        Number@733..734 "4"
                Semicolon@734..735 ";"
            Whitespace@735..737 "\n\t"
            ExprStmt@737..770
                CallExpr@737..769
                    NameRef@737..743
                        Identifier@737..743 "assert"
                    ArgList@743..769
                        LeftParen@743..744 "("
                        BinaryExpr@744..768
                            NameRef@744..749
                                Identifier@744..749 "aTest"
                            Whitespace@749..750 " "
                            EqEq@750..752 "=="
                            Whitespace@752..753 " "
                            LeftParen@753..754 "("
                            CallExpr@754..767
                                NameRef@754..761
                                    Identifier@754..761 "ar_List"
                                ArgList@761..767
                                    LeftParen@761..762 "("
                                    Literal@762..763
                                        Number@762..763 "1"
                                    Comma@763..764 ","
                                    Whitespace@764..765 " "
                                    Literal@765..766
                                        Number@765..766 "4"
                                    RightParen@766..767 ")"
                            RightParen@767..768 ")"
                        RightParen@768..769 ")"
                Semicolon@769..770 ";"
            Whitespace@770..773 "\n\t\n"
            Comment@773..790 "// \"+=\" operator\n"
            Whitespace@790..791 "\t"
            ExprStmt@791..801
                BinaryExpr@791..800
                    NameRef@791..796
                        Identifier@791..796 "iTest"
                    Whitespace@796..797 " "
                    Eq@797..798 "="
                    Whitespace@798..799 " "
                    Literal@799..800
                        Number@799..800 "0"
                Semicolon@800..801 ";"
            Whitespace@801..803 "\n\t"
            ExprStmt@803..816
                BinaryExpr@803..815
                    NameRef@803..808
                        Identifier@803..808 "iTest"
                    Whitespace@808..809 " "
                    PlusEq@809..811 "+="
                    Whitespace@811..812 " "
                    Literal@812..815
                        Number@812..815 "2.5"
                Semicolon@815..816 ";"
            Whitespace@816..818 "\n\t"
            ExprStmt@818..837
                CallExpr@818..836
                    NameRef@818..824
                        Identifier@818..824 "assert"
                    ArgList@824..836
                        LeftParen@824..825 "("
                        BinaryExpr@825..835
                            NameRef@825..830
                                Identifier@825..830 "iTest"
                            Whitespace@830..831 " "
                            EqEq@831..833 "=="
                            Whitespace@833..834 " "
                            Literal@834..835
                                Number@834..835 "2"
                        RightParen@835..836 ")"
                Semicolon@836..837 ";"
            Whitespace@837..841 "\n\t\n\t"
            ExprStmt@841..863
                BinaryExpr@841..862
                    NameRef@841..846
                        Identifier@841..846 "aTest"
                    Whitespace@846..847 " "
                    Eq@847..848 "="
                    Whitespace@848..849 " "
                    CallExpr@849..862
                        NameRef@849..856
                            Identifier@849..856 "ar_List"
                        ArgList@856..862
                            LeftParen@856..857 "("
                            Literal@857..858
                                Number@857..858 "1"
                            Comma@858..859 ","
                            Whitespace@859..860 " "
                            Literal@860..861
                                Number@860..861 "2"
                            RightParen@861..862 ")"
                Semicolon@862..863 ";"
            Whitespace@863..865 "\n\t"
            ExprStmt@865..879
                BinaryExpr@865..878
                    SubscriptExpr@865..873
                        NameRef@865..870
                            Identifier@865..870 "aTest"
                        LeftBracket@870..871 "["
                        Literal@871..872
                            Number@871..872 "1"
                        RightBracket@872..873 "]"
                    Whitespace@873..874 " "
                    PlusEq@874..876 "+="
                    Whitespace@876..877 " "
                    Literal@877..878
                        Number@877..878 "4"
                Semicolon@878..879 ";"
            Whitespace@879..881 "\n\t"
            ExprStmt@881..914
                CallExpr@881..913
                    NameRef@881..887
                        Identifier@881..887 "assert"
                    ArgList@887..913
                        LeftParen@887..888 "("
                        BinaryExpr@888..912
                            NameRef@888..893
                                Identifier@888..893 "aTest"
                            Whitespace@893..894 " "
                            EqEq@894..896 "=="
                            Whitespace@896..897 " "
                            LeftParen@897..898 "("
                            CallExpr@898..911
                                NameRef@898..905
                                    Identifier@898..905 "ar_List"
                                ArgList@905..911
                                    LeftParen@905..906 "("
                                    Literal@906..907
                                        Number@906..907 "1"
                                    Comma@907..908 ","
                                    Whitespace@908..909 " "
                                    Literal@909..910
                                        Number@909..910 "6"
                                    RightParen@910..911 ")"
                            RightParen@911..912 ")"
                        RightParen@912..913 ")"
                Semicolon@913..914 ";"
            Whitespace@914..918 "\n\t\n\t"
            ExprStmt@918..933
                BinaryExpr@918..932
                    NameRef@918..923
                        Identifier@918..923 "sTest"
                    Whitespace@923..924 " "
                    Eq@924..925 "="
                    Whitespace@925..926 " "
                    StrExpr@926..932
                        QuoteDouble@926..927 "\""
                        StringShardLiteral@927..931
                            StringShard@927..931 "test"
                        QuoteDouble@931..932 "\""
                Semicolon@932..933 ";"
            Whitespace@933..935 "\n\t"
            ExprStmt@935..948
                BinaryExpr@935..947
                    NameRef@935..940
                        Identifier@935..940 "sTest"
                    Whitespace@940..941 " "
                    PlusEq@941..943 "+="
                    Whitespace@943..944 " "
                    StrExpr@944..947
                        QuoteDouble@944..945 "\""
                        StringShardLiteral@945..946
                            StringShard@945..946 "2"
                        QuoteDouble@946..947 "\""
                Semicolon@947..948 ";"
            Whitespace@948..950 "\n\t"
            ExprStmt@950..975
                CallExpr@950..974
                    NameRef@950..956
                        Identifier@950..956 "assert"
                    ArgList@956..974
                        LeftParen@956..957 "("
                        BinaryExpr@957..973
                            NameRef@957..962
                                Identifier@957..962 "sTest"
                            Whitespace@962..963 " "
                            EqEq@963..965 "=="
                            Whitespace@965..966 " "
                            StrExpr@966..973
                                QuoteDouble@966..967 "\""
                                StringShardLiteral@967..972
                                    StringShard@967..972 "test2"
                                QuoteDouble@972..973 "\""
                        RightParen@973..974 ")"
                Semicolon@974..975 ";"
            Whitespace@975..978 "\n\t\n"
            Comment@978..995 "// \"-=\" operator\n"
            Whitespace@995..996 "\t"
            ExprStmt@996..1006
                BinaryExpr@996..1005
                    NameRef@996..1001
                        Identifier@996..1001 "iTest"
                    Whitespace@1001..1002 " "
                    Eq@1002..1003 "="
                    Whitespace@1003..1004 " "
                    Literal@1004..1005
                        Number@1004..1005 "0"
                Semicolon@1005..1006 ";"
            Whitespace@1006..1008 "\n\t"
            ExprStmt@1008..1019
                BinaryExpr@1008..1018
                    NameRef@1008..1013
                        Identifier@1008..1013 "iTest"
                    Whitespace@1013..1014 " "
                    MinusEq@1014..1016 "-="
                    Whitespace@1016..1017 " "
                    Literal@1017..1018
                        Number@1017..1018 "2"
                Semicolon@1018..1019 ";"
            Whitespace@1019..1021 "\n\t"
            ExprStmt@1021..1041
                CallExpr@1021..1040
                    NameRef@1021..1027
                        Identifier@1021..1027 "assert"
                    ArgList@1027..1040
                        LeftParen@1027..1028 "("
                        BinaryExpr@1028..1039
                            NameRef@1028..1033
                                Identifier@1028..1033 "iTest"
                            Whitespace@1033..1034 " "
                            EqEq@1034..1036 "=="
                            Whitespace@1036..1037 " "
                            UnaryExpr@1037..1039
                                Minus@1037..1038 "-"
                                Literal@1038..1039
                                    Number@1038..1039 "2"
                        RightParen@1039..1040 ")"
                Semicolon@1040..1041 ";"
            Whitespace@1041..1045 "\n\t\n\t"
            ExprStmt@1045..1067
                BinaryExpr@1045..1066
                    NameRef@1045..1050
                        Identifier@1045..1050 "aTest"
                    Whitespace@1050..1051 " "
                    Eq@1051..1052 "="
                    Whitespace@1052..1053 " "
                    CallExpr@1053..1066
                        NameRef@1053..1060
                            Identifier@1053..1060 "ar_List"
                        ArgList@1060..1066
                            LeftParen@1060..1061 "("
                            Literal@1061..1062
                                Number@1061..1062 "1"
                            Comma@1062..1063 ","
                            Whitespace@1063..1064 " "
                            Literal@1064..1065
                                Number@1064..1065 "2"
                            RightParen@1065..1066 ")"
                Semicolon@1066..1067 ";"
            Whitespace@1067..1069 "\n\t"
            ExprStmt@1069..1083
                BinaryExpr@1069..1082
                    SubscriptExpr@1069..1077
                        NameRef@1069..1074
                            Identifier@1069..1074 "aTest"
                        LeftBracket@1074..1075 "["
                        Literal@1075..1076
                            Number@1075..1076 "1"
                        RightBracket@1076..1077 "]"
                    Whitespace@1077..1078 " "
                    MinusEq@1078..1080 "-="
                    Whitespace@1080..1081 " "
                    Literal@1081..1082
                        Number@1081..1082 "4"
                Semicolon@1082..1083 ";"
            Whitespace@1083..1085 "\n\t"
            ExprStmt@1085..1119
                CallExpr@1085..1118
                    NameRef@1085..1091
                        Identifier@1085..1091 "assert"
                    ArgList@1091..1118
                        LeftParen@1091..1092 "("
                        BinaryExpr@1092..1117
                            NameRef@1092..1097
                                Identifier@1092..1097 "aTest"
                            Whitespace@1097..1098 " "
                            EqEq@1098..1100 "=="
                            Whitespace@1100..1101 " "
                            LeftParen@1101..1102 "("
                            CallExpr@1102..1116
                                NameRef@1102..1109
                                    Identifier@1102..1109 "ar_List"
                                ArgList@1109..1116
                                    LeftParen@1109..1110 "("
                                    Literal@1110..1111
                                        Number@1110..1111 "1"
                                    Comma@1111..1112 ","
                                    Whitespace@1112..1113 " "
                                    UnaryExpr@1113..1115
                                        Minus@1113..1114 "-"
                                        Literal@1114..1115
                                            Number@1114..1115 "2"
                                    RightParen@1115..1116 ")"
                            RightParen@1116..1117 ")"
                        RightParen@1117..1118 ")"
                Semicolon@1118..1119 ";"
            Whitespace@1119..1122 "\n\t\n"
            Comment@1122..1139 "// \"*=\" operator\n"
            Whitespace@1139..1140 "\t"
            ExprStmt@1140..1150
                BinaryExpr@1140..1149
                    NameRef@1140..1145
                        Identifier@1140..1145 "iTest"
                    Whitespace@1145..1146 " "
                    Eq@1146..1147 "="
                    Whitespace@1147..1148 " "
                    Literal@1148..1149
                        Number@1148..1149 "1"
                Semicolon@1149..1150 ";"
            Whitespace@1150..1152 "\n\t"
            ExprStmt@1152..1163
                BinaryExpr@1152..1162
                    NameRef@1152..1157
                        Identifier@1152..1157 "iTest"
                    Whitespace@1157..1158 " "
                    StarEq@1158..1160 "*="
                    Whitespace@1160..1161 " "
                    Literal@1161..1162
                        Number@1161..1162 "2"
                Semicolon@1162..1163 ";"
            Whitespace@1163..1165 "\n\t"
            ExprStmt@1165..1184
                CallExpr@1165..1183
                    NameRef@1165..1171
                        Identifier@1165..1171 "assert"
                    ArgList@1171..1183
                        LeftParen@1171..1172 "("
                        BinaryExpr@1172..1182
                            NameRef@1172..1177
                                Identifier@1172..1177 "iTest"
                            Whitespace@1177..1178 " "
                            EqEq@1178..1180 "=="
                            Whitespace@1180..1181 " "
                            Literal@1181..1182
                                Number@1181..1182 "2"
                        RightParen@1182..1183 ")"
                Semicolon@1183..1184 ";"
            Whitespace@1184..1188 "\n\t\n\t"
            ExprStmt@1188..1210
                BinaryExpr@1188..1209
                    NameRef@1188..1193
                        Identifier@1188..1193 "aTest"
                    Whitespace@1193..1194 " "
                    Eq@1194..1195 "="
                    Whitespace@1195..1196 " "
                    CallExpr@1196..1209
                        NameRef@1196..1203
                            Identifier@1196..1203 "ar_List"
                        ArgList@1203..1209
                            LeftParen@1203..1204 "("
                            Literal@1204..1205
                                Number@1204..1205 "1"
                            Comma@1205..1206 ","
                            Whitespace@1206..1207 " "
                            Literal@1207..1208
                                Number@1207..1208 "2"
                            RightParen@1208..1209 ")"
                Semicolon@1209..1210 ";"
            Whitespace@1210..1212 "\n\t"
            ExprStmt@1212..1226
                BinaryExpr@1212..1225
                    SubscriptExpr@1212..1220
                        NameRef@1212..1217
                            Identifier@1212..1217 "aTest"
                        LeftBracket@1217..1218 "["
                        Literal@1218..1219
                            Number@1218..1219 "1"
                        RightBracket@1219..1220 "]"
                    Whitespace@1220..1221 " "
                    StarEq@1221..1223 "*="
                    Whitespace@1223..1224 " "
                    Literal@1224..1225
                        Number@1224..1225 "4"
                Semicolon@1225..1226 ";"
            Whitespace@1226..1228 "\n\t"
            ExprStmt@1228..1261
                CallExpr@1228..1260
                    NameRef@1228..1234
                        Identifier@1228..1234 "assert"
                    ArgList@1234..1260
                        LeftParen@1234..1235 "("
                        BinaryExpr@1235..1259
                            NameRef@1235..1240
                                Identifier@1235..1240 "aTest"
                            Whitespace@1240..1241 " "
                            EqEq@1241..1243 "=="
                            Whitespace@1243..1244 " "
                            LeftParen@1244..1245 "("
                            CallExpr@1245..1258
                                NameRef@1245..1252
                                    Identifier@1245..1252 "ar_List"
                                ArgList@1252..1258
                                    LeftParen@1252..1253 "("
                                    Literal@1253..1254
                                        Number@1253..1254 "1"
                                    Comma@1254..1255 ","
                                    Whitespace@1255..1256 " "
                                    Literal@1256..1257
                                        Number@1256..1257 "8"
                                    RightParen@1257..1258 ")"
                            RightParen@1258..1259 ")"
                        RightParen@1259..1260 ")"
                Semicolon@1260..1261 ";"
            Whitespace@1261..1264 "\n\t\n"
            Comment@1264..1281 "// \"/=\" operator\n"
            Whitespace@1281..1282 "\t"
            ExprStmt@1282..1292
                BinaryExpr@1282..1291
                    NameRef@1282..1287
                        Identifier@1282..1287 "iTest"
                    Whitespace@1287..1288 " "
                    Eq@1288..1289 "="
                    Whitespace@1289..1290 " "
                    Literal@1290..1291
                        Number@1290..1291 "1"
                Semicolon@1291..1292 ";"
            Whitespace@1292..1294 "\n\t"
            ExprStmt@1294..1305
                BinaryExpr@1294..1304
                    NameRef@1294..1299
                        Identifier@1294..1299 "iTest"
                    Whitespace@1299..1300 " "
                    SlashEq@1300..1302 "/="
                    Whitespace@1302..1303 " "
                    Literal@1303..1304
                        Number@1303..1304 "2"
                Semicolon@1304..1305 ";"
            Whitespace@1305..1307 "\n\t"
            ExprStmt@1307..1326
                CallExpr@1307..1325
                    NameRef@1307..1313
                        Identifier@1307..1313 "assert"
                    ArgList@1313..1325
                        LeftParen@1313..1314 "("
                        BinaryExpr@1314..1324
                            NameRef@1314..1319
                                Identifier@1314..1319 "iTest"
                            Whitespace@1319..1320 " "
                            EqEq@1320..1322 "=="
                            Whitespace@1322..1323 " "
                            Literal@1323..1324
                                Number@1323..1324 "0"
                        RightParen@1324..1325 ")"
                Semicolon@1325..1326 ";"
            Whitespace@1326..1330 "\n\t\n\t"
            ExprStmt@1330..1352
                BinaryExpr@1330..1351
                    NameRef@1330..1335
                        Identifier@1330..1335 "aTest"
                    Whitespace@1335..1336 " "
                    Eq@1336..1337 "="
                    Whitespace@1337..1338 " "
                    CallExpr@1338..1351
                        NameRef@1338..1345
                            Identifier@1338..1345 "ar_List"
                        ArgList@1345..1351
                            LeftParen@1345..1346 "("
                            Literal@1346..1347
                                Number@1346..1347 "1"
                            Comma@1347..1348 ","
                            Whitespace@1348..1349 " "
                            Literal@1349..1350
                                Number@1349..1350 "2"
                            RightParen@1350..1351 ")"
                Semicolon@1351..1352 ";"
            Whitespace@1352..1354 "\n\t"
            ExprStmt@1354..1368
                BinaryExpr@1354..1367
                    SubscriptExpr@1354..1362
                        NameRef@1354..1359
                            Identifier@1354..1359 "aTest"
                        LeftBracket@1359..1360 "["
                        Literal@1360..1361
                            Number@1360..1361 "1"
                        RightBracket@1361..1362 "]"
                    Whitespace@1362..1363 " "
                    SlashEq@1363..1365 "/="
                    Whitespace@1365..1366 " "
                    Literal@1366..1367
                        Number@1366..1367 "1"
                Semicolon@1367..1368 ";"
            Whitespace@1368..1370 "\n\t"
            ExprStmt@1370..1403
                CallExpr@1370..1402
                    NameRef@1370..1376
                        Identifier@1370..1376 "assert"
                    ArgList@1376..1402
                        LeftParen@1376..1377 "("
                        BinaryExpr@1377..1401
                            NameRef@1377..1382
                                Identifier@1377..1382 "aTest"
                            Whitespace@1382..1383 " "
                            EqEq@1383..1385 "=="
                            Whitespace@1385..1386 " "
                            LeftParen@1386..1387 "("
                            CallExpr@1387..1400
                                NameRef@1387..1394
                                    Identifier@1387..1394 "ar_List"
                                ArgList@1394..1400
                                    LeftParen@1394..1395 "("
                                    Literal@1395..1396
                                        Number@1395..1396 "1"
                                    Comma@1396..1397 ","
                                    Whitespace@1397..1398 " "
                                    Literal@1398..1399
                                        Number@1398..1399 "2"
                                    RightParen@1399..1400 ")"
                            RightParen@1400..1401 ")"
                        RightParen@1401..1402 ")"
                Semicolon@1402..1403 ";"
            Whitespace@1403..1406 "\n\t\n"
            Comment@1406..1423 "// \"^=\" operator\n"
            Whitespace@1423..1424 "\t"
            ExprStmt@1424..1434
                BinaryExpr@1424..1433
                    NameRef@1424..1429
                        Identifier@1424..1429 "iTest"
                    Whitespace@1429..1430 " "
                    Eq@1430..1431 "="
                    Whitespace@1431..1432 " "
                    Literal@1432..1433
                        Number@1432..1433 "2"
                Semicolon@1433..1434 ";"
            Whitespace@1434..1436 "\n\t"
            ExprStmt@1436..1447
                BinaryExpr@1436..1446
                    NameRef@1436..1441
                        Identifier@1436..1441 "iTest"
                    Whitespace@1441..1442 " "
                    PowEq@1442..1444 "^="
                    Whitespace@1444..1445 " "
                    Literal@1445..1446
                        Number@1445..1446 "2"
                Semicolon@1446..1447 ";"
            Whitespace@1447..1449 "\n\t"
            ExprStmt@1449..1468
                CallExpr@1449..1467
                    NameRef@1449..1455
                        Identifier@1449..1455 "assert"
                    ArgList@1455..1467
                        LeftParen@1455..1456 "("
                        BinaryExpr@1456..1466
                            NameRef@1456..1461
                                Identifier@1456..1461 "iTest"
                            Whitespace@1461..1462 " "
                            EqEq@1462..1464 "=="
                            Whitespace@1464..1465 " "
                            Literal@1465..1466
                                Number@1465..1466 "4"
                        RightParen@1466..1467 ")"
                Semicolon@1467..1468 ";"
            Whitespace@1468..1472 "\n\t\n\t"
            ExprStmt@1472..1494
                BinaryExpr@1472..1493
                    NameRef@1472..1477
                        Identifier@1472..1477 "aTest"
                    Whitespace@1477..1478 " "
                    Eq@1478..1479 "="
                    Whitespace@1479..1480 " "
                    CallExpr@1480..1493
                        NameRef@1480..1487
                            Identifier@1480..1487 "ar_List"
                        ArgList@1487..1493
                            LeftParen@1487..1488 "("
                            Literal@1488..1489
                                Number@1488..1489 "1"
                            Comma@1489..1490 ","
                            Whitespace@1490..1491 " "
                            Literal@1491..1492
                                Number@1491..1492 "2"
                            RightParen@1492..1493 ")"
                Semicolon@1493..1494 ";"
            Whitespace@1494..1496 "\n\t"
            ExprStmt@1496..1510
                BinaryExpr@1496..1509
                    SubscriptExpr@1496..1504
                        NameRef@1496..1501
                            Identifier@1496..1501 "aTest"
                        LeftBracket@1501..1502 "["
                        Literal@1502..1503
                            Number@1502..1503 "1"
                        RightBracket@1503..1504 "]"
                    Whitespace@1504..1505 " "
                    PowEq@1505..1507 "^="
                    Whitespace@1507..1508 " "
                    Literal@1508..1509
                        Number@1508..1509 "2"
                Semicolon@1509..1510 ";"
            Whitespace@1510..1512 "\n\t"
            ExprStmt@1512..1545
                CallExpr@1512..1544
                    NameRef@1512..1518
                        Identifier@1512..1518 "assert"
                    ArgList@1518..1544
                        LeftParen@1518..1519 "("
                        BinaryExpr@1519..1543
                            NameRef@1519..1524
                                Identifier@1519..1524 "aTest"
                            Whitespace@1524..1525 " "
                            EqEq@1525..1527 "=="
                            Whitespace@1527..1528 " "
                            LeftParen@1528..1529 "("
                            CallExpr@1529..1542
                                NameRef@1529..1536
                                    Identifier@1529..1536 "ar_List"
                                ArgList@1536..1542
                                    LeftParen@1536..1537 "("
                                    Literal@1537..1538
                                        Number@1537..1538 "1"
                                    Comma@1538..1539 ","
                                    Whitespace@1539..1540 " "
                                    Literal@1540..1541
                                        Number@1540..1541 "4"
                                    RightParen@1541..1542 ")"
                            RightParen@1542..1543 ")"
                        RightParen@1543..1544 ")"
                Semicolon@1544..1545 ";"
            Whitespace@1545..1548 "\n\t\n"
            Comment@1548..1565 "// \"%=\" operator\n"
            Whitespace@1565..1566 "\t"
            ExprStmt@1566..1576
                BinaryExpr@1566..1575
                    NameRef@1566..1571
                        Identifier@1566..1571 "iTest"
                    Whitespace@1571..1572 " "
                    Eq@1572..1573 "="
                    Whitespace@1573..1574 " "
                    Literal@1574..1575
                        Number@1574..1575 "2"
                Semicolon@1575..1576 ";"
            Whitespace@1576..1578 "\n\t"
            ExprStmt@1578..1589
                BinaryExpr@1578..1588
                    NameRef@1578..1583
                        Identifier@1578..1583 "iTest"
                    Whitespace@1583..1584 " "
                    ModEq@1584..1586 "%="
                    Whitespace@1586..1587 " "
                    Literal@1587..1588
                        Number@1587..1588 "2"
                Semicolon@1588..1589 ";"
            Whitespace@1589..1591 "\n\t"
            ExprStmt@1591..1610
                CallExpr@1591..1609
                    NameRef@1591..1597
                        Identifier@1591..1597 "assert"
                    ArgList@1597..1609
                        LeftParen@1597..1598 "("
                        BinaryExpr@1598..1608
                            NameRef@1598..1603
                                Identifier@1598..1603 "iTest"
                            Whitespace@1603..1604 " "
                            EqEq@1604..1606 "=="
                            Whitespace@1606..1607 " "
                            Literal@1607..1608
                                Number@1607..1608 "0"
                        RightParen@1608..1609 ")"
                Semicolon@1609..1610 ";"
            Whitespace@1610..1614 "\n\t\n\t"
            ExprStmt@1614..1636
                BinaryExpr@1614..1635
                    NameRef@1614..1619
                        Identifier@1614..1619 "aTest"
                    Whitespace@1619..1620 " "
                    Eq@1620..1621 "="
                    Whitespace@1621..1622 " "
                    CallExpr@1622..1635
                        NameRef@1622..1629
                            Identifier@1622..1629 "ar_List"
                        ArgList@1629..1635
                            LeftParen@1629..1630 "("
                            Literal@1630..1631
                                Number@1630..1631 "1"
                            Comma@1631..1632 ","
                            Whitespace@1632..1633 " "
                            Literal@1633..1634
                                Number@1633..1634 "2"
                            RightParen@1634..1635 ")"
                Semicolon@1635..1636 ";"
            Whitespace@1636..1638 "\n\t"
            ExprStmt@1638..1652
                BinaryExpr@1638..1651
                    SubscriptExpr@1638..1646
                        NameRef@1638..1643
                            Identifier@1638..1643 "aTest"
                        LeftBracket@1643..1644 "["
                        Literal@1644..1645
                            Number@1644..1645 "1"
                        RightBracket@1645..1646 "]"
                    Whitespace@1646..1647 " "
                    ModEq@1647..1649 "%="
                    Whitespace@1649..1650 " "
                    Literal@1650..1651
                        Number@1650..1651 "2"
                Semicolon@1651..1652 ";"
            Whitespace@1652..1654 "\n\t"
            ExprStmt@1654..1687
                CallExpr@1654..1686
                    NameRef@1654..1660
                        Identifier@1654..1660 "assert"
                    ArgList@1660..1686
                        LeftParen@1660..1661 "("
                        BinaryExpr@1661..1685
                            NameRef@1661..1666
                                Identifier@1661..1666 "aTest"
                            Whitespace@1666..1667 " "
                            EqEq@1667..1669 "=="
                            Whitespace@1669..1670 " "
                            LeftParen@1670..1671 "("
                            CallExpr@1671..1684
                                NameRef@1671..1678
                                    Identifier@1671..1678 "ar_List"
                                ArgList@1678..1684
                                    LeftParen@1678..1679 "("
                                    Literal@1679..1680
                                        Number@1679..1680 "1"
                                    Comma@1680..1681 ","
                                    Whitespace@1681..1682 " "
                                    Literal@1682..1683
                                        Number@1682..1683 "0"
                                    RightParen@1683..1684 ")"
                            RightParen@1684..1685 ")"
                        RightParen@1685..1686 ")"
                Semicolon@1686..1687 ";"
            Whitespace@1687..1690 "\n\t\n"
            Comment@1690..1707 "// \"&=\" operator\n"
            Whitespace@1707..1708 "\t"
            ExprStmt@1708..1718
                BinaryExpr@1708..1717
                    NameRef@1708..1713
                        Identifier@1708..1713 "iTest"
                    Whitespace@1713..1714 " "
                    Eq@1714..1715 "="
                    Whitespace@1715..1716 " "
                    Literal@1716..1717
                        Number@1716..1717 "2"
                Semicolon@1717..1718 ";"
            Whitespace@1718..1720 "\n\t"
            ExprStmt@1720..1731
                BinaryExpr@1720..1730
                    NameRef@1720..1725
                        Identifier@1720..1725 "iTest"
                    Whitespace@1725..1726 " "
                    BitwiseAndEq@1726..1728 "&="
                    Whitespace@1728..1729 " "
                    Literal@1729..1730
                        Number@1729..1730 "2"
                Semicolon@1730..1731 ";"
            Whitespace@1731..1733 "\n\t"
            ExprStmt@1733..1752
                CallExpr@1733..1751
                    NameRef@1733..1739
                        Identifier@1733..1739 "assert"
                    ArgList@1739..1751
                        LeftParen@1739..1740 "("
                        BinaryExpr@1740..1750
                            NameRef@1740..1745
                                Identifier@1740..1745 "iTest"
                            Whitespace@1745..1746 " "
                            EqEq@1746..1748 "=="
                            Whitespace@1748..1749 " "
                            Literal@1749..1750
                                Number@1749..1750 "2"
                        RightParen@1750..1751 ")"
                Semicolon@1751..1752 ";"
            Whitespace@1752..1756 "\n\t\n\t"
            ExprStmt@1756..1778
                BinaryExpr@1756..1777
                    NameRef@1756..1761
                        Identifier@1756..1761 "aTest"
                    Whitespace@1761..1762 " "
                    Eq@1762..1763 "="
                    Whitespace@1763..1764 " "
                    CallExpr@1764..1777
                        NameRef@1764..1771
                            Identifier@1764..1771 "ar_List"
                        ArgList@1771..1777
                            LeftParen@1771..1772 "("
                            Literal@1772..1773
                                Number@1772..1773 "1"
                            Comma@1773..1774 ","
                            Whitespace@1774..1775 " "
                            Literal@1775..1776
                                Number@1775..1776 "4"
                            RightParen@1776..1777 ")"
                Semicolon@1777..1778 ";"
            Whitespace@1778..1780 "\n\t"
            ExprStmt@1780..1794
                BinaryExpr@1780..1793
                    SubscriptExpr@1780..1788
                        NameRef@1780..1785
                            Identifier@1780..1785 "aTest"
                        LeftBracket@1785..1786 "["
                        Literal@1786..1787
                            Number@1786..1787 "1"
                        RightBracket@1787..1788 "]"
                    Whitespace@1788..1789 " "
                    BitwiseAndEq@1789..1791 "&="
                    Whitespace@1791..1792 " "
                    Literal@1792..1793
                        Number@1792..1793 "2"
                Semicolon@1793..1794 ";"
            Whitespace@1794..1796 "\n\t"
            ExprStmt@1796..1829
                CallExpr@1796..1828
                    NameRef@1796..1802
                        Identifier@1796..1802 "assert"
                    ArgList@1802..1828
                        LeftParen@1802..1803 "("
                        BinaryExpr@1803..1827
                            NameRef@1803..1808
                                Identifier@1803..1808 "aTest"
                            Whitespace@1808..1809 " "
                            EqEq@1809..1811 "=="
                            Whitespace@1811..1812 " "
                            LeftParen@1812..1813 "("
                            CallExpr@1813..1826
                                NameRef@1813..1820
                                    Identifier@1813..1820 "ar_List"
                                ArgList@1820..1826
                                    LeftParen@1820..1821 "("
                                    Literal@1821..1822
                                        Number@1821..1822 "1"
                                    Comma@1822..1823 ","
                                    Whitespace@1823..1824 " "
                                    Literal@1824..1825
                                        Number@1824..1825 "0"
                                    RightParen@1825..1826 ")"
                            RightParen@1826..1827 ")"
                        RightParen@1827..1828 ")"
                Semicolon@1828..1829 ";"
            Whitespace@1829..1832 "\n\t\n"
            Comment@1832..1849 "// \"|=\" operator\n"
            Whitespace@1849..1850 "\t"
            ExprStmt@1850..1860
                BinaryExpr@1850..1859
                    NameRef@1850..1855
                        Identifier@1850..1855 "iTest"
                    Whitespace@1855..1856 " "
                    Eq@1856..1857 "="
                    Whitespace@1857..1858 " "
                    Literal@1858..1859
                        Number@1858..1859 "2"
                Semicolon@1859..1860 ";"
            Whitespace@1860..1862 "\n\t"
            ExprStmt@1862..1873
                BinaryExpr@1862..1872
                    NameRef@1862..1867
                        Identifier@1862..1867 "iTest"
                    Whitespace@1867..1868 " "
                    BitwiseOrEq@1868..1870 "|="
                    Whitespace@1870..1871 " "
                    Literal@1871..1872
                        Number@1871..1872 "4"
                Semicolon@1872..1873 ";"
            Whitespace@1873..1875 "\n\t"
            ExprStmt@1875..1894
                CallExpr@1875..1893
                    NameRef@1875..1881
                        Identifier@1875..1881 "assert"
                    ArgList@1881..1893
                        LeftParen@1881..1882 "("
                        BinaryExpr@1882..1892
                            NameRef@1882..1887
                                Identifier@1882..1887 "iTest"
                            Whitespace@1887..1888 " "
                            EqEq@1888..1890 "=="
                            Whitespace@1890..1891 " "
                            Literal@1891..1892
                                Number@1891..1892 "6"
                        RightParen@1892..1893 ")"
                Semicolon@1893..1894 ";"
            Whitespace@1894..1898 "\n\t\n\t"
            ExprStmt@1898..1920
                BinaryExpr@1898..1919
                    NameRef@1898..1903
                        Identifier@1898..1903 "aTest"
                    Whitespace@1903..1904 " "
                    Eq@1904..1905 "="
                    Whitespace@1905..1906 " "
                    CallExpr@1906..1919
                        NameRef@1906..1913
                            Identifier@1906..1913 "ar_List"
                        ArgList@1913..1919
                            LeftParen@1913..1914 "("
                            Literal@1914..1915
                                Number@1914..1915 "1"
                            Comma@1915..1916 ","
                            Whitespace@1916..1917 " "
                            Literal@1917..1918
                                Number@1917..1918 "2"
                            RightParen@1918..1919 ")"
                Semicolon@1919..1920 ";"
            Whitespace@1920..1922 "\n\t"
            ExprStmt@1922..1936
                BinaryExpr@1922..1935
                    SubscriptExpr@1922..1930
                        NameRef@1922..1927
                            Identifier@1922..1927 "aTest"
                        LeftBracket@1927..1928 "["
                        Literal@1928..1929
                            Number@1928..1929 "1"
                        RightBracket@1929..1930 "]"
                    Whitespace@1930..1931 " "
                    BitwiseOrEq@1931..1933 "|="
                    Whitespace@1933..1934 " "
                    Literal@1934..1935
                        Number@1934..1935 "4"
                Semicolon@1935..1936 ";"
            Whitespace@1936..1938 "\n\t"
            ExprStmt@1938..1971
                CallExpr@1938..1970
                    NameRef@1938..1944
                        Identifier@1938..1944 "assert"
                    ArgList@1944..1970
                        LeftParen@1944..1945 "("
                        BinaryExpr@1945..1969
                            NameRef@1945..1950
                                Identifier@1945..1950 "aTest"
                            Whitespace@1950..1951 " "
                            EqEq@1951..1953 "=="
                            Whitespace@1953..1954 " "
                            LeftParen@1954..1955 "("
                            CallExpr@1955..1968
                                NameRef@1955..1962
                                    Identifier@1955..1962 "ar_List"
                                ArgList@1962..1968
                                    LeftParen@1962..1963 "("
                                    Literal@1963..1964
                                        Number@1963..1964 "1"
                                    Comma@1964..1965 ","
                                    Whitespace@1965..1966 " "
                                    Literal@1966..1967
                                        Number@1966..1967 "6"
                                    RightParen@1967..1968 ")"
                            RightParen@1968..1969 ")"
                        RightParen@1969..1970 ")"
                Semicolon@1970..1971 ";"
            Whitespace@1971..1974 "\n\t\n"
            Comment@1974..1997 "//== Logical operators\n"
            Whitespace@1997..1998 "\n"
            Comment@1998..2015 "// \"&&\" operator\n"
            Whitespace@2015..2016 "\t"
            ExprStmt@2016..2037
                CallExpr@2016..2036
                    NameRef@2016..2022
                        Identifier@2016..2022 "assert"
                    ArgList@2022..2036
                        LeftParen@2022..2023 "("
                        BinaryExpr@2023..2035
                            Literal@2023..2027
                                Bool@2023..2027 "true"
                            Whitespace@2027..2028 " "
                            LogicAnd@2028..2030 "&&"
                            Whitespace@2030..2031 " "
                            Literal@2031..2035
                                Bool@2031..2035 "true"
                        RightParen@2035..2036 ")"
                Semicolon@2036..2037 ";"
            Whitespace@2037..2039 "\n\n"
            Comment@2039..2056 "// \"||\" operator\n"
            Whitespace@2056..2057 "\t"
            ExprStmt@2057..2079
                CallExpr@2057..2078
                    NameRef@2057..2063
                        Identifier@2057..2063 "assert"
                    ArgList@2063..2078
                        LeftParen@2063..2064 "("
                        BinaryExpr@2064..2077
                            Literal@2064..2069
                                Bool@2064..2069 "false"
                            Whitespace@2069..2070 " "
                            LogicOr@2070..2072 "||"
                            Whitespace@2072..2073 " "
                            Literal@2073..2077
                                Bool@2073..2077 "true"
                        RightParen@2077..2078 ")"
                Semicolon@2078..2079 ";"
            Whitespace@2079..2082 "\n\t\n"
            Comment@2082..2102 "//== Slice and pair\n"
            Whitespace@2102..2103 "\t"
            Comment@2103..2112 "// Slice\n"
            Whitespace@2112..2113 "\t"
            ExprStmt@2113..2141
                BinaryExpr@2113..2140
                    NameRef@2113..2118
                        Identifier@2113..2118 "sTest"
                    Whitespace@2118..2119 " "
                    Eq@2119..2120 "="
                    Whitespace@2120..2121 " "
                    StrExpr@2121..2140
                        QuoteDouble@2121..2122 "\""
                        StringShardLiteral@2122..2139
                            StringShard@2122..2139 "This is my string"
                        QuoteDouble@2139..2140 "\""
                Semicolon@2140..2141 ";"
            Whitespace@2141..2143 "\n\t"
            VarDeclStmt@2143..2176
                VarDecl@2143..2175
                    StringType@2143..2149 "string"
                    Whitespace@2149..2150 " "
                    Name@2150..2162
                        Identifier@2150..2162 "my_substring"
                    Whitespace@2162..2163 " "
                    Eq@2163..2164 "="
                    Whitespace@2164..2165 " "
                    SubscriptExpr@2165..2175
                        NameRef@2165..2170
                            Identifier@2165..2170 "sTest"
                        LeftBracket@2170..2171 "["
                        BinaryExpr@2171..2174
                            Literal@2171..2172
                                Number@2171..2172 "0"
                            Colon@2172..2173 ":"
                            Literal@2173..2174
                                Number@2173..2174 "3"
                        RightBracket@2174..2175 "]"
                Semicolon@2175..2176 ";"
            Whitespace@2176..2177 " "
            Comment@2177..2250 "// returns \"This\" the easy way (the first four characters in the string)\n"
            Whitespace@2250..2251 "\t"
            ExprStmt@2251..2282
                CallExpr@2251..2281
                    NameRef@2251..2257
                        Identifier@2251..2257 "assert"
                    ArgList@2257..2281
                        LeftParen@2257..2258 "("
                        BinaryExpr@2258..2280
                            NameRef@2258..2270
                                Identifier@2258..2270 "my_substring"
                            Whitespace@2270..2271 " "
                            EqEq@2271..2273 "=="
                            Whitespace@2273..2274 " "
                            StrExpr@2274..2280
                                QuoteDouble@2274..2275 "\""
                                StringShardLiteral@2275..2279
                                    StringShard@2275..2279 "This"
                                QuoteDouble@2279..2280 "\""
                        RightParen@2280..2281 ")"
                Semicolon@2281..2282 ";"
            Whitespace@2282..2285 "\n\n\t"
            Comment@2285..2293 "// Pair\n"
            Whitespace@2293..2294 "\t"
            ExprStmt@2294..2321
                BinaryExpr@2294..2320
                    NameRef@2294..2299
                        Identifier@2294..2299 "aTest"
                    Whitespace@2299..2300 " "
                    Eq@2300..2301 "="
                    Whitespace@2301..2302 " "
                    CallExpr@2302..2320
                        NameRef@2302..2308
                            Identifier@2302..2308 "ar_Map"
                        ArgList@2308..2320
                            LeftParen@2308..2309 "("
                            BinaryExpr@2309..2313
                                Literal@2309..2310
                                    Number@2309..2310 "1"
                                Colon2@2310..2312 "::"
                                Literal@2312..2313
                                    Number@2312..2313 "2"
                            Comma@2313..2314 ","
                            Whitespace@2314..2315 " "
                            BinaryExpr@2315..2319
                                Literal@2315..2316
                                    Number@2315..2316 "2"
                                Colon2@2316..2318 "::"
                                Literal@2318..2319
                                    Number@2318..2319 "3"
                            RightParen@2319..2320 ")"
                Semicolon@2320..2321 ";"
            Whitespace@2321..2323 "\n\t"
            ExprStmt@2323..2361
                CallExpr@2323..2360
                    NameRef@2323..2329
                        Identifier@2323..2329 "assert"
                    ArgList@2329..2360
                        LeftParen@2329..2330 "("
                        BinaryExpr@2330..2359
                            NameRef@2330..2335
                                Identifier@2330..2335 "aTest"
                            Whitespace@2335..2336 " "
                            EqEq@2336..2338 "=="
                            Whitespace@2338..2339 " "
                            LeftParen@2339..2340 "("
                            CallExpr@2340..2358
                                NameRef@2340..2346
                                    Identifier@2340..2346 "ar_Map"
                                ArgList@2346..2358
                                    LeftParen@2346..2347 "("
                                    BinaryExpr@2347..2351
                                        Literal@2347..2348
                                            Number@2347..2348 "1"
                                        Colon2@2348..2350 "::"
                                        Literal@2350..2351
                                            Number@2350..2351 "2"
                                    Comma@2351..2352 ","
                                    Whitespace@2352..2353 " "
                                    BinaryExpr@2353..2357
                                        Literal@2353..2354
                                            Number@2353..2354 "2"
                                        Colon2@2354..2356 "::"
                                        Literal@2356..2357
                                            Number@2356..2357 "3"
                                    RightParen@2357..2358 ")"
                            RightParen@2358..2359 ")"
                        RightParen@2359..2360 ")"
                Semicolon@2360..2361 ";"
            Whitespace@2361..2364 "\n\t\n"
            Comment@2364..2387 "//== Other Comparators\n"
            Whitespace@2387..2388 "\t"
            ExprStmt@2388..2400
                BinaryExpr@2388..2399
                    NameRef@2388..2393
                        Identifier@2388..2393 "fTest"
                    Whitespace@2393..2394 " "
                    Eq@2394..2395 "="
                    Whitespace@2395..2396 " "
                    Literal@2396..2399
                        Number@2396..2399 "2.5"
                Semicolon@2399..2400 ";"
            Whitespace@2400..2402 "\n\t"
            ExprStmt@2402..2420
                CallExpr@2402..2419
                    NameRef@2402..2408
                        Identifier@2402..2408 "assert"
                    ArgList@2408..2419
                        LeftParen@2408..2409 "("
                        BinaryExpr@2409..2418
                            NameRef@2409..2414
                                Identifier@2409..2414 "fTest"
                            Whitespace@2414..2415 " "
                            Greater@2415..2416 ">"
                            Whitespace@2416..2417 " "
                            Literal@2417..2418
                                Number@2417..2418 "2"
                        RightParen@2418..2419 ")"
                Semicolon@2419..2420 ";"
            Whitespace@2420..2422 "\n\t"
            ExprStmt@2422..2442
                CallExpr@2422..2441
                    NameRef@2422..2428
                        Identifier@2422..2428 "assert"
                    ArgList@2428..2441
                        LeftParen@2428..2429 "("
                        BinaryExpr@2429..2440
                            NameRef@2429..2434
                                Identifier@2429..2434 "fTest"
                            Whitespace@2434..2435 " "
                            Less@2435..2436 "<"
                            Whitespace@2436..2437 " "
                            Literal@2437..2440
                                Number@2437..2440 "2.6"
                        RightParen@2440..2441 ")"
                Semicolon@2441..2442 ";"
            Whitespace@2442..2444 "\n\t"
            ExprStmt@2444..2465
                CallExpr@2444..2464
                    NameRef@2444..2450
                        Identifier@2444..2450 "assert"
                    ArgList@2450..2464
                        LeftParen@2450..2451 "("
                        BinaryExpr@2451..2463
                            NameRef@2451..2456
                                Identifier@2451..2456 "fTest"
                            Whitespace@2456..2457 " "
                            GreaterEq@2457..2459 ">="
                            Whitespace@2459..2460 " "
                            Literal@2460..2463
                                Number@2460..2463 "2.5"
                        RightParen@2463..2464 ")"
                Semicolon@2464..2465 ";"
            Whitespace@2465..2467 "\n\t"
            ExprStmt@2467..2488
                CallExpr@2467..2487
                    NameRef@2467..2473
                        Identifier@2467..2473 "assert"
                    ArgList@2473..2487
                        LeftParen@2473..2474 "("
                        BinaryExpr@2474..2486
                            NameRef@2474..2479
                                Identifier@2474..2479 "fTest"
                            Whitespace@2479..2480 " "
                            LessEq@2480..2482 "<="
                            Whitespace@2482..2483 " "
                            Literal@2483..2486
                                Number@2483..2486 "2.5"
                        RightParen@2486..2487 ")"
                Semicolon@2487..2488 ";"
            Whitespace@2488..2491 "\n\t\n"
            Comment@2491..2512 "//== Other operators\n"
            Whitespace@2512..2514 "\t\n"
            Comment@2514..2530 "// \"+\" operator\n"
            Whitespace@2530..2531 "\t"
            ExprStmt@2531..2541
                BinaryExpr@2531..2540
                    NameRef@2531..2536
                        Identifier@2531..2536 "iTest"
                    Whitespace@2536..2537 " "
                    Eq@2537..2538 "="
                    Whitespace@2538..2539 " "
                    Literal@2539..2540
                        Number@2539..2540 "0"
                Semicolon@2540..2541 ";"
            Whitespace@2541..2543 "\n\t"
            ExprStmt@2543..2563
                BinaryExpr@2543..2562
                    NameRef@2543..2548
                        Identifier@2543..2548 "iTest"
                    Whitespace@2548..2549 " "
                    Eq@2549..2550 "="
                    Whitespace@2550..2551 " "
                    BinaryExpr@2551..2562
                        NameRef@2551..2556
                            Identifier@2551..2556 "iTest"
                        Whitespace@2556..2557 " "
                        Plus@2557..2558 "+"
                        Whitespace@2558..2559 " "
                        Literal@2559..2562
                            Number@2559..2562 "2.5"
                Semicolon@2562..2563 ";"
            Whitespace@2563..2565 "\n\t"
            ExprStmt@2565..2584
                CallExpr@2565..2583
                    NameRef@2565..2571
                        Identifier@2565..2571 "assert"
                    ArgList@2571..2583
                        LeftParen@2571..2572 "("
                        BinaryExpr@2572..2582
                            NameRef@2572..2577
                                Identifier@2572..2577 "iTest"
                            Whitespace@2577..2578 " "
                            EqEq@2578..2580 "=="
                            Whitespace@2580..2581 " "
                            Literal@2581..2582
                                Number@2581..2582 "2"
                        RightParen@2582..2583 ")"
                Semicolon@2583..2584 ";"
            Whitespace@2584..2588 "\n\t\n\t"
            ExprStmt@2588..2610
                BinaryExpr@2588..2609
                    NameRef@2588..2593
                        Identifier@2588..2593 "aTest"
                    Whitespace@2593..2594 " "
                    Eq@2594..2595 "="
                    Whitespace@2595..2596 " "
                    CallExpr@2596..2609
                        NameRef@2596..2603
                            Identifier@2596..2603 "ar_List"
                        ArgList@2603..2609
                            LeftParen@2603..2604 "("
                            Literal@2604..2605
                                Number@2604..2605 "1"
                            Comma@2605..2606 ","
                            Whitespace@2606..2607 " "
                            Literal@2607..2608
                                Number@2607..2608 "2"
                            RightParen@2608..2609 ")"
                Semicolon@2609..2610 ";"
            Whitespace@2610..2612 "\n\t"
            ExprStmt@2612..2636
                BinaryExpr@2612..2635
                    SubscriptExpr@2612..2620
                        NameRef@2612..2617
                            Identifier@2612..2617 "aTest"
                        LeftBracket@2617..2618 "["
                        Literal@2618..2619
                            Number@2618..2619 "1"
                        RightBracket@2619..2620 "]"
                    Whitespace@2620..2621 " "
                    Eq@2621..2622 "="
                    Whitespace@2622..2623 " "
                    BinaryExpr@2623..2635
                        SubscriptExpr@2623..2631
                            NameRef@2623..2628
                                Identifier@2623..2628 "aTest"
                            LeftBracket@2628..2629 "["
                            Literal@2629..2630
                                Number@2629..2630 "1"
                            RightBracket@2630..2631 "]"
                        Whitespace@2631..2632 " "
                        Plus@2632..2633 "+"
                        Whitespace@2633..2634 " "
                        Literal@2634..2635
                            Number@2634..2635 "4"
                Semicolon@2635..2636 ";"
            Whitespace@2636..2638 "\n\t"
            ExprStmt@2638..2671
                CallExpr@2638..2670
                    NameRef@2638..2644
                        Identifier@2638..2644 "assert"
                    ArgList@2644..2670
                        LeftParen@2644..2645 "("
                        BinaryExpr@2645..2669
                            NameRef@2645..2650
                                Identifier@2645..2650 "aTest"
                            Whitespace@2650..2651 " "
                            EqEq@2651..2653 "=="
                            Whitespace@2653..2654 " "
                            LeftParen@2654..2655 "("
                            CallExpr@2655..2668
                                NameRef@2655..2662
                                    Identifier@2655..2662 "ar_List"
                                ArgList@2662..2668
                                    LeftParen@2662..2663 "("
                                    Literal@2663..2664
                                        Number@2663..2664 "1"
                                    Comma@2664..2665 ","
                                    Whitespace@2665..2666 " "
                                    Literal@2666..2667
                                        Number@2666..2667 "6"
                                    RightParen@2667..2668 ")"
                            RightParen@2668..2669 ")"
                        RightParen@2669..2670 ")"
                Semicolon@2670..2671 ";"
            Whitespace@2671..2675 "\n\t\n\t"
            ExprStmt@2675..2690
                BinaryExpr@2675..2689
                    NameRef@2675..2680
                        Identifier@2675..2680 "sTest"
                    Whitespace@2680..2681 " "
                    Eq@2681..2682 "="
                    Whitespace@2682..2683 " "
                    StrExpr@2683..2689
                        QuoteDouble@2683..2684 "\""
                        StringShardLiteral@2684..2688
                            StringShard@2684..2688 "test"
                        QuoteDouble@2688..2689 "\""
                Semicolon@2689..2690 ";"
            Whitespace@2690..2692 "\n\t"
            ExprStmt@2692..2712
                BinaryExpr@2692..2711
                    NameRef@2692..2697
                        Identifier@2692..2697 "sTest"
                    Whitespace@2697..2698 " "
                    Eq@2698..2699 "="
                    Whitespace@2699..2700 " "
                    BinaryExpr@2700..2711
                        NameRef@2700..2705
                            Identifier@2700..2705 "sTest"
                        Whitespace@2705..2706 " "
                        Plus@2706..2707 "+"
                        Whitespace@2707..2708 " "
                        StrExpr@2708..2711
                            QuoteDouble@2708..2709 "\""
                            StringShardLiteral@2709..2710
                                StringShard@2709..2710 "2"
                            QuoteDouble@2710..2711 "\""
                Semicolon@2711..2712 ";"
            Whitespace@2712..2714 "\n\t"
            ExprStmt@2714..2739
                CallExpr@2714..2738
                    NameRef@2714..2720
                        Identifier@2714..2720 "assert"
                    ArgList@2720..2738
                        LeftParen@2720..2721 "("
                        BinaryExpr@2721..2737
                            NameRef@2721..2726
                                Identifier@2721..2726 "sTest"
                            Whitespace@2726..2727 " "
                            EqEq@2727..2729 "=="
                            Whitespace@2729..2730 " "
                            StrExpr@2730..2737
                                QuoteDouble@2730..2731 "\""
                                StringShardLiteral@2731..2736
                                    StringShard@2731..2736 "test2"
                                QuoteDouble@2736..2737 "\""
                        RightParen@2737..2738 ")"
                Semicolon@2738..2739 ";"
            Whitespace@2739..2742 "\n\t\n"
            Comment@2742..2758 "// \"-\" operator\n"
            Whitespace@2758..2759 "\t"
            ExprStmt@2759..2769
                BinaryExpr@2759..2768
                    NameRef@2759..2764
                        Identifier@2759..2764 "iTest"
                    Whitespace@2764..2765 " "
                    Eq@2765..2766 "="
                    Whitespace@2766..2767 " "
                    Literal@2767..2768
                        Number@2767..2768 "0"
                Semicolon@2768..2769 ";"
            Whitespace@2769..2771 "\n\t"
            ExprStmt@2771..2789
                BinaryExpr@2771..2788
                    NameRef@2771..2776
                        Identifier@2771..2776 "iTest"
                    Whitespace@2776..2777 " "
                    Eq@2777..2778 "="
                    Whitespace@2778..2779 " "
                    BinaryExpr@2779..2788
                        NameRef@2779..2784
                            Identifier@2779..2784 "iTest"
                        Whitespace@2784..2785 " "
                        Minus@2785..2786 "-"
                        Whitespace@2786..2787 " "
                        Literal@2787..2788
                            Number@2787..2788 "2"
                Semicolon@2788..2789 ";"
            Whitespace@2789..2791 "\n\t"
            ExprStmt@2791..2811
                CallExpr@2791..2810
                    NameRef@2791..2797
                        Identifier@2791..2797 "assert"
                    ArgList@2797..2810
                        LeftParen@2797..2798 "("
                        BinaryExpr@2798..2809
                            NameRef@2798..2803
                                Identifier@2798..2803 "iTest"
                            Whitespace@2803..2804 " "
                            EqEq@2804..2806 "=="
                            Whitespace@2806..2807 " "
                            UnaryExpr@2807..2809
                                Minus@2807..2808 "-"
                                Literal@2808..2809
                                    Number@2808..2809 "2"
                        RightParen@2809..2810 ")"
                Semicolon@2810..2811 ";"
            Whitespace@2811..2815 "\n\t\n\t"
            ExprStmt@2815..2837
                BinaryExpr@2815..2836
                    NameRef@2815..2820
                        Identifier@2815..2820 "aTest"
                    Whitespace@2820..2821 " "
                    Eq@2821..2822 "="
                    Whitespace@2822..2823 " "
                    CallExpr@2823..2836
                        NameRef@2823..2830
                            Identifier@2823..2830 "ar_List"
                        ArgList@2830..2836
                            LeftParen@2830..2831 "("
                            Literal@2831..2832
                                Number@2831..2832 "1"
                            Comma@2832..2833 ","
                            Whitespace@2833..2834 " "
                            Literal@2834..2835
                                Number@2834..2835 "2"
                            RightParen@2835..2836 ")"
                Semicolon@2836..2837 ";"
            Whitespace@2837..2839 "\n\t"
            ExprStmt@2839..2863
                BinaryExpr@2839..2862
                    SubscriptExpr@2839..2847
                        NameRef@2839..2844
                            Identifier@2839..2844 "aTest"
                        LeftBracket@2844..2845 "["
                        Literal@2845..2846
                            Number@2845..2846 "1"
                        RightBracket@2846..2847 "]"
                    Whitespace@2847..2848 " "
                    Eq@2848..2849 "="
                    Whitespace@2849..2850 " "
                    BinaryExpr@2850..2862
                        SubscriptExpr@2850..2858
                            NameRef@2850..2855
                                Identifier@2850..2855 "aTest"
                            LeftBracket@2855..2856 "["
                            Literal@2856..2857
                                Number@2856..2857 "1"
                            RightBracket@2857..2858 "]"
                        Whitespace@2858..2859 " "
                        Minus@2859..2860 "-"
                        Whitespace@2860..2861 " "
                        Literal@2861..2862
                            Number@2861..2862 "4"
                Semicolon@2862..2863 ";"
            Whitespace@2863..2865 "\n\t"
            ExprStmt@2865..2899
                CallExpr@2865..2898
                    NameRef@2865..2871
                        Identifier@2865..2871 "assert"
                    ArgList@2871..2898
                        LeftParen@2871..2872 "("
                        BinaryExpr@2872..2897
                            NameRef@2872..2877
                                Identifier@2872..2877 "aTest"
                            Whitespace@2877..2878 " "
                            EqEq@2878..2880 "=="
                            Whitespace@2880..2881 " "
                            LeftParen@2881..2882 "("
                            CallExpr@2882..2896
                                NameRef@2882..2889
                                    Identifier@2882..2889 "ar_List"
                                ArgList@2889..2896
                                    LeftParen@2889..2890 "("
                                    Literal@2890..2891
                                        Number@2890..2891 "1"
                                    Comma@2891..2892 ","
                                    Whitespace@2892..2893 " "
                                    UnaryExpr@2893..2895
                                        Minus@2893..2894 "-"
                                        Literal@2894..2895
                                            Number@2894..2895 "2"
                                    RightParen@2895..2896 ")"
                            RightParen@2896..2897 ")"
                        RightParen@2897..2898 ")"
                Semicolon@2898..2899 ";"
            Whitespace@2899..2902 "\n\t\n"
            Comment@2902..2918 "// \"*\" operator\n"
            Whitespace@2918..2919 "\t"
            ExprStmt@2919..2929
                BinaryExpr@2919..2928
                    NameRef@2919..2924
                        Identifier@2919..2924 "iTest"
                    Whitespace@2924..2925 " "
                    Eq@2925..2926 "="
                    Whitespace@2926..2927 " "
                    Literal@2927..2928
                        Number@2927..2928 "1"
                Semicolon@2928..2929 ";"
            Whitespace@2929..2931 "\n\t"
            ExprStmt@2931..2949
                BinaryExpr@2931..2948
                    NameRef@2931..2936
                        Identifier@2931..2936 "iTest"
                    Whitespace@2936..2937 " "
                    Eq@2937..2938 "="
                    Whitespace@2938..2939 " "
                    BinaryExpr@2939..2948
                        NameRef@2939..2944
                            Identifier@2939..2944 "iTest"
                        Whitespace@2944..2945 " "
                        Star@2945..2946 "*"
                        Whitespace@2946..2947 " "
                        Literal@2947..2948
                            Number@2947..2948 "2"
                Semicolon@2948..2949 ";"
            Whitespace@2949..2951 "\n\t"
            ExprStmt@2951..2970
                CallExpr@2951..2969
                    NameRef@2951..2957
                        Identifier@2951..2957 "assert"
                    ArgList@2957..2969
                        LeftParen@2957..2958 "("
                        BinaryExpr@2958..2968
                            NameRef@2958..2963
                                Identifier@2958..2963 "iTest"
                            Whitespace@2963..2964 " "
                            EqEq@2964..2966 "=="
                            Whitespace@2966..2967 " "
                            Literal@2967..2968
                                Number@2967..2968 "2"
                        RightParen@2968..2969 ")"
                Semicolon@2969..2970 ";"
            Whitespace@2970..2974 "\n\t\n\t"
            ExprStmt@2974..2996
                BinaryExpr@2974..2995
                    NameRef@2974..2979
                        Identifier@2974..2979 "aTest"
                    Whitespace@2979..2980 " "
                    Eq@2980..2981 "="
                    Whitespace@2981..2982 " "
                    CallExpr@2982..2995
                        NameRef@2982..2989
                            Identifier@2982..2989 "ar_List"
                        ArgList@2989..2995
                            LeftParen@2989..2990 "("
                            Literal@2990..2991
                                Number@2990..2991 "1"
                            Comma@2991..2992 ","
                            Whitespace@2992..2993 " "
                            Literal@2993..2994
                                Number@2993..2994 "2"
                            RightParen@2994..2995 ")"
                Semicolon@2995..2996 ";"
            Whitespace@2996..2998 "\n\t"
            ExprStmt@2998..3022
                BinaryExpr@2998..3021
                    SubscriptExpr@2998..3006
                        NameRef@2998..3003
                            Identifier@2998..3003 "aTest"
                        LeftBracket@3003..3004 "["
                        Literal@3004..3005
                            Number@3004..3005 "1"
                        RightBracket@3005..3006 "]"
                    Whitespace@3006..3007 " "
                    Eq@3007..3008 "="
                    Whitespace@3008..3009 " "
                    BinaryExpr@3009..3021
                        SubscriptExpr@3009..3017
                            NameRef@3009..3014
                                Identifier@3009..3014 "aTest"
                            LeftBracket@3014..3015 "["
                            Literal@3015..3016
                                Number@3015..3016 "1"
                            RightBracket@3016..3017 "]"
                        Whitespace@3017..3018 " "
                        Star@3018..3019 "*"
                        Whitespace@3019..3020 " "
                        Literal@3020..3021
                            Number@3020..3021 "4"
                Semicolon@3021..3022 ";"
            Whitespace@3022..3024 "\n\t"
            ExprStmt@3024..3057
                CallExpr@3024..3056
                    NameRef@3024..3030
                        Identifier@3024..3030 "assert"
                    ArgList@3030..3056
                        LeftParen@3030..3031 "("
                        BinaryExpr@3031..3055
                            NameRef@3031..3036
                                Identifier@3031..3036 "aTest"
                            Whitespace@3036..3037 " "
                            EqEq@3037..3039 "=="
                            Whitespace@3039..3040 " "
                            LeftParen@3040..3041 "("
                            CallExpr@3041..3054
                                NameRef@3041..3048
                                    Identifier@3041..3048 "ar_List"
                                ArgList@3048..3054
                                    LeftParen@3048..3049 "("
                                    Literal@3049..3050
                                        Number@3049..3050 "1"
                                    Comma@3050..3051 ","
                                    Whitespace@3051..3052 " "
                                    Literal@3052..3053
                                        Number@3052..3053 "8"
                                    RightParen@3053..3054 ")"
                            RightParen@3054..3055 ")"
                        RightParen@3055..3056 ")"
                Semicolon@3056..3057 ";"
            Whitespace@3057..3060 "\n\t\n"
            Comment@3060..3076 "// \"/\" operator\n"
            Whitespace@3076..3077 "\t"
            ExprStmt@3077..3087
                BinaryExpr@3077..3086
                    NameRef@3077..3082
                        Identifier@3077..3082 "iTest"
                    Whitespace@3082..3083 " "
                    Eq@3083..3084 "="
                    Whitespace@3084..3085 " "
                    Literal@3085..3086
                        Number@3085..3086 "1"
                Semicolon@3086..3087 ";"
            Whitespace@3087..3089 "\n\t"
            ExprStmt@3089..3107
                BinaryExpr@3089..3106
                    NameRef@3089..3094
                        Identifier@3089..3094 "iTest"
                    Whitespace@3094..3095 " "
                    Eq@3095..3096 "="
                    Whitespace@3096..3097 " "
                    BinaryExpr@3097..3106
                        NameRef@3097..3102
                            Identifier@3097..3102 "iTest"
                        Whitespace@3102..3103 " "
                        Slash@3103..3104 "/"
                        Whitespace@3104..3105 " "
                        Literal@3105..3106
                            Number@3105..3106 "2"
                Semicolon@3106..3107 ";"
            Whitespace@3107..3109 "\n\t"
            ExprStmt@3109..3128
                CallExpr@3109..3127
                    NameRef@3109..3115
                        Identifier@3109..3115 "assert"
                    ArgList@3115..3127
                        LeftParen@3115..3116 "("
                        BinaryExpr@3116..3126
                            NameRef@3116..3121
                                Identifier@3116..3121 "iTest"
                            Whitespace@3121..3122 " "
                            EqEq@3122..3124 "=="
                            Whitespace@3124..3125 " "
                            Literal@3125..3126
                                Number@3125..3126 "0"
                        RightParen@3126..3127 ")"
                Semicolon@3127..3128 ";"
            Whitespace@3128..3132 "\n\t\n\t"
            ExprStmt@3132..3154
                BinaryExpr@3132..3153
                    NameRef@3132..3137
                        Identifier@3132..3137 "aTest"
                    Whitespace@3137..3138 " "
                    Eq@3138..3139 "="
                    Whitespace@3139..3140 " "
                    CallExpr@3140..3153
                        NameRef@3140..3147
                            Identifier@3140..3147 "ar_List"
                        ArgList@3147..3153
                            LeftParen@3147..3148 "("
                            Literal@3148..3149
                                Number@3148..3149 "1"
                            Comma@3149..3150 ","
                            Whitespace@3150..3151 " "
                            Literal@3151..3152
                                Number@3151..3152 "2"
                            RightParen@3152..3153 ")"
                Semicolon@3153..3154 ";"
            Whitespace@3154..3156 "\n\t"
            ExprStmt@3156..3180
                BinaryExpr@3156..3179
                    SubscriptExpr@3156..3164
                        NameRef@3156..3161
                            Identifier@3156..3161 "aTest"
                        LeftBracket@3161..3162 "["
                        Literal@3162..3163
                            Number@3162..3163 "1"
                        RightBracket@3163..3164 "]"
                    Whitespace@3164..3165 " "
                    Eq@3165..3166 "="
                    Whitespace@3166..3167 " "
                    BinaryExpr@3167..3179
                        SubscriptExpr@3167..3175
                            NameRef@3167..3172
                                Identifier@3167..3172 "aTest"
                            LeftBracket@3172..3173 "["
                            Literal@3173..3174
                                Number@3173..3174 "1"
                            RightBracket@3174..3175 "]"
                        Whitespace@3175..3176 " "
                        Slash@3176..3177 "/"
                        Whitespace@3177..3178 " "
                        Literal@3178..3179
                            Number@3178..3179 "1"
                Semicolon@3179..3180 ";"
            Whitespace@3180..3182 "\n\t"
            ExprStmt@3182..3215
                CallExpr@3182..3214
                    NameRef@3182..3188
                        Identifier@3182..3188 "assert"
                    ArgList@3188..3214
                        LeftParen@3188..3189 "("
                        BinaryExpr@3189..3213
                            NameRef@3189..3194
                                Identifier@3189..3194 "aTest"
                            Whitespace@3194..3195 " "
                            EqEq@3195..3197 "=="
                            Whitespace@3197..3198 " "
                            LeftParen@3198..3199 "("
                            CallExpr@3199..3212
                                NameRef@3199..3206
                                    Identifier@3199..3206 "ar_List"
                                ArgList@3206..3212
                                    LeftParen@3206..3207 "("
                                    Literal@3207..3208
                                        Number@3207..3208 "1"
                                    Comma@3208..3209 ","
                                    Whitespace@3209..3210 " "
                                    Literal@3210..3211
                                        Number@3210..3211 "2"
                                    RightParen@3211..3212 ")"
                            RightParen@3212..3213 ")"
                        RightParen@3213..3214 ")"
                Semicolon@3214..3215 ";"
            Whitespace@3215..3218 "\n\t\n"
            Comment@3218..3234 "// \"^\" operator\n"
            Whitespace@3234..3235 "\t"
            ExprStmt@3235..3245
                BinaryExpr@3235..3244
                    NameRef@3235..3240
                        Identifier@3235..3240 "iTest"
                    Whitespace@3240..3241 " "
                    Eq@3241..3242 "="
                    Whitespace@3242..3243 " "
                    Literal@3243..3244
                        Number@3243..3244 "2"
                Semicolon@3244..3245 ";"
            Whitespace@3245..3247 "\n\t"
            ExprStmt@3247..3265
                BinaryExpr@3247..3264
                    NameRef@3247..3252
                        Identifier@3247..3252 "iTest"
                    Whitespace@3252..3253 " "
                    Eq@3253..3254 "="
                    Whitespace@3254..3255 " "
                    BinaryExpr@3255..3264
                        NameRef@3255..3260
                            Identifier@3255..3260 "iTest"
                        Whitespace@3260..3261 " "
                        Pow@3261..3262 "^"
                        Whitespace@3262..3263 " "
                        Literal@3263..3264
                            Number@3263..3264 "2"
                Semicolon@3264..3265 ";"
            Whitespace@3265..3267 "\n\t"
            ExprStmt@3267..3286
                CallExpr@3267..3285
                    NameRef@3267..3273
                        Identifier@3267..3273 "assert"
                    ArgList@3273..3285
                        LeftParen@3273..3274 "("
                        BinaryExpr@3274..3284
                            NameRef@3274..3279
                                Identifier@3274..3279 "iTest"
                            Whitespace@3279..3280 " "
                            EqEq@3280..3282 "=="
                            Whitespace@3282..3283 " "
                            Literal@3283..3284
                                Number@3283..3284 "4"
                        RightParen@3284..3285 ")"
                Semicolon@3285..3286 ";"
            Whitespace@3286..3290 "\n\t\n\t"
            ExprStmt@3290..3312
                BinaryExpr@3290..3311
                    NameRef@3290..3295
                        Identifier@3290..3295 "aTest"
                    Whitespace@3295..3296 " "
                    Eq@3296..3297 "="
                    Whitespace@3297..3298 " "
                    CallExpr@3298..3311
                        NameRef@3298..3305
                            Identifier@3298..3305 "ar_List"
                        ArgList@3305..3311
                            LeftParen@3305..3306 "("
                            Literal@3306..3307
                                Number@3306..3307 "1"
                            Comma@3307..3308 ","
                            Whitespace@3308..3309 " "
                            Literal@3309..3310
                                Number@3309..3310 "2"
                            RightParen@3310..3311 ")"
                Semicolon@3311..3312 ";"
            Whitespace@3312..3314 "\n\t"
            ExprStmt@3314..3338
                BinaryExpr@3314..3337
                    SubscriptExpr@3314..3322
                        NameRef@3314..3319
                            Identifier@3314..3319 "aTest"
                        LeftBracket@3319..3320 "["
                        Literal@3320..3321
                            Number@3320..3321 "1"
                        RightBracket@3321..3322 "]"
                    Whitespace@3322..3323 " "
                    Eq@3323..3324 "="
                    Whitespace@3324..3325 " "
                    BinaryExpr@3325..3337
                        SubscriptExpr@3325..3333
                            NameRef@3325..3330
                                Identifier@3325..3330 "aTest"
                            LeftBracket@3330..3331 "["
                            Literal@3331..3332
                                Number@3331..3332 "1"
                            RightBracket@3332..3333 "]"
                        Whitespace@3333..3334 " "
                        Pow@3334..3335 "^"
                        Whitespace@3335..3336 " "
                        Literal@3336..3337
                            Number@3336..3337 "2"
                Semicolon@3337..3338 ";"
            Whitespace@3338..3340 "\n\t"
            ExprStmt@3340..3373
                CallExpr@3340..3372
                    NameRef@3340..3346
                        Identifier@3340..3346 "assert"
                    ArgList@3346..3372
                        LeftParen@3346..3347 "("
                        BinaryExpr@3347..3371
                            NameRef@3347..3352
                                Identifier@3347..3352 "aTest"
                            Whitespace@3352..3353 " "
                            EqEq@3353..3355 "=="
                            Whitespace@3355..3356 " "
                            LeftParen@3356..3357 "("
                            CallExpr@3357..3370
                                NameRef@3357..3364
                                    Identifier@3357..3364 "ar_List"
                                ArgList@3364..3370
                                    LeftParen@3364..3365 "("
                                    Literal@3365..3366
                                        Number@3365..3366 "1"
                                    Comma@3366..3367 ","
                                    Whitespace@3367..3368 " "
                                    Literal@3368..3369
                                        Number@3368..3369 "4"
                                    RightParen@3369..3370 ")"
                            RightParen@3370..3371 ")"
                        RightParen@3371..3372 ")"
                Semicolon@3372..3373 ";"
            Whitespace@3373..3376 "\n\t\n"
            Comment@3376..3392 "// \"%\" operator\n"
            Whitespace@3392..3393 "\t"
            ExprStmt@3393..3403
                BinaryExpr@3393..3402
                    NameRef@3393..3398
                        Identifier@3393..3398 "iTest"
                    Whitespace@3398..3399 " "
                    Eq@3399..3400 "="
                    Whitespace@3400..3401 " "
                    Literal@3401..3402
                        Number@3401..3402 "2"
                Semicolon@3402..3403 ";"
            Whitespace@3403..3405 "\n\t"
            ExprStmt@3405..3423
                BinaryExpr@3405..3422
                    NameRef@3405..3410
                        Identifier@3405..3410 "iTest"
                    Whitespace@3410..3411 " "
                    Eq@3411..3412 "="
                    Whitespace@3412..3413 " "
                    BinaryExpr@3413..3422
                        NameRef@3413..3418
                            Identifier@3413..3418 "iTest"
                        Whitespace@3418..3419 " "
                        Mod@3419..3420 "%"
                        Whitespace@3420..3421 " "
                        Literal@3421..3422
                            Number@3421..3422 "2"
                Semicolon@3422..3423 ";"
            Whitespace@3423..3425 "\n\t"
            ExprStmt@3425..3444
                CallExpr@3425..3443
                    NameRef@3425..3431
                        Identifier@3425..3431 "assert"
                    ArgList@3431..3443
                        LeftParen@3431..3432 "("
                        BinaryExpr@3432..3442
                            NameRef@3432..3437
                                Identifier@3432..3437 "iTest"
                            Whitespace@3437..3438 " "
                            EqEq@3438..3440 "=="
                            Whitespace@3440..3441 " "
                            Literal@3441..3442
                                Number@3441..3442 "0"
                        RightParen@3442..3443 ")"
                Semicolon@3443..3444 ";"
            Whitespace@3444..3448 "\n\t\n\t"
            ExprStmt@3448..3470
                BinaryExpr@3448..3469
                    NameRef@3448..3453
                        Identifier@3448..3453 "aTest"
                    Whitespace@3453..3454 " "
                    Eq@3454..3455 "="
                    Whitespace@3455..3456 " "
                    CallExpr@3456..3469
                        NameRef@3456..3463
                            Identifier@3456..3463 "ar_List"
                        ArgList@3463..3469
                            LeftParen@3463..3464 "("
                            Literal@3464..3465
                                Number@3464..3465 "1"
                            Comma@3465..3466 ","
                            Whitespace@3466..3467 " "
                            Literal@3467..3468
                                Number@3467..3468 "2"
                            RightParen@3468..3469 ")"
                Semicolon@3469..3470 ";"
            Whitespace@3470..3472 "\n\t"
            ExprStmt@3472..3496
                BinaryExpr@3472..3495
                    SubscriptExpr@3472..3480
                        NameRef@3472..3477
                            Identifier@3472..3477 "aTest"
                        LeftBracket@3477..3478 "["
                        Literal@3478..3479
                            Number@3478..3479 "1"
                        RightBracket@3479..3480 "]"
                    Whitespace@3480..3481 " "
                    Eq@3481..3482 "="
                    Whitespace@3482..3483 " "
                    BinaryExpr@3483..3495
                        SubscriptExpr@3483..3491
                            NameRef@3483..3488
                                Identifier@3483..3488 "aTest"
                            LeftBracket@3488..3489 "["
                            Literal@3489..3490
                                Number@3489..3490 "1"
                            RightBracket@3490..3491 "]"
                        Whitespace@3491..3492 " "
                        Mod@3492..3493 "%"
                        Whitespace@3493..3494 " "
                        Literal@3494..3495
                            Number@3494..3495 "2"
                Semicolon@3495..3496 ";"
            Whitespace@3496..3498 "\n\t"
            ExprStmt@3498..3531
                CallExpr@3498..3530
                    NameRef@3498..3504
                        Identifier@3498..3504 "assert"
                    ArgList@3504..3530
                        LeftParen@3504..3505 "("
                        BinaryExpr@3505..3529
                            NameRef@3505..3510
                                Identifier@3505..3510 "aTest"
                            Whitespace@3510..3511 " "
                            EqEq@3511..3513 "=="
                            Whitespace@3513..3514 " "
                            LeftParen@3514..3515 "("
                            CallExpr@3515..3528
                                NameRef@3515..3522
                                    Identifier@3515..3522 "ar_List"
                                ArgList@3522..3528
                                    LeftParen@3522..3523 "("
                                    Literal@3523..3524
                                        Number@3523..3524 "1"
                                    Comma@3524..3525 ","
                                    Whitespace@3525..3526 " "
                                    Literal@3526..3527
                                        Number@3526..3527 "0"
                                    RightParen@3527..3528 ")"
                            RightParen@3528..3529 ")"
                        RightParen@3529..3530 ")"
                Semicolon@3530..3531 ";"
            Whitespace@3531..3534 "\n\t\n"
            Comment@3534..3550 "// \"&\" operator\n"
            Whitespace@3550..3551 "\t"
            ExprStmt@3551..3561
                BinaryExpr@3551..3560
                    NameRef@3551..3556
                        Identifier@3551..3556 "iTest"
                    Whitespace@3556..3557 " "
                    Eq@3557..3558 "="
                    Whitespace@3558..3559 " "
                    Literal@3559..3560
                        Number@3559..3560 "2"
                Semicolon@3560..3561 ";"
            Whitespace@3561..3563 "\n\t"
            ExprStmt@3563..3581
                BinaryExpr@3563..3580
                    NameRef@3563..3568
                        Identifier@3563..3568 "iTest"
                    Whitespace@3568..3569 " "
                    Eq@3569..3570 "="
                    Whitespace@3570..3571 " "
                    BinaryExpr@3571..3580
                        NameRef@3571..3576
                            Identifier@3571..3576 "iTest"
                        Whitespace@3576..3577 " "
                        BitwiseAnd@3577..3578 "&"
                        Whitespace@3578..3579 " "
                        Literal@3579..3580
                            Number@3579..3580 "2"
                Semicolon@3580..3581 ";"
            Whitespace@3581..3583 "\n\t"
            ExprStmt@3583..3602
                CallExpr@3583..3601
                    NameRef@3583..3589
                        Identifier@3583..3589 "assert"
                    ArgList@3589..3601
                        LeftParen@3589..3590 "("
                        BinaryExpr@3590..3600
                            NameRef@3590..3595
                                Identifier@3590..3595 "iTest"
                            Whitespace@3595..3596 " "
                            EqEq@3596..3598 "=="
                            Whitespace@3598..3599 " "
                            Literal@3599..3600
                                Number@3599..3600 "2"
                        RightParen@3600..3601 ")"
                Semicolon@3601..3602 ";"
            Whitespace@3602..3606 "\n\t\n\t"
            ExprStmt@3606..3628
                BinaryExpr@3606..3627
                    NameRef@3606..3611
                        Identifier@3606..3611 "aTest"
                    Whitespace@3611..3612 " "
                    Eq@3612..3613 "="
                    Whitespace@3613..3614 " "
                    CallExpr@3614..3627
                        NameRef@3614..3621
                            Identifier@3614..3621 "ar_List"
                        ArgList@3621..3627
                            LeftParen@3621..3622 "("
                            Literal@3622..3623
                                Number@3622..3623 "1"
                            Comma@3623..3624 ","
                            Whitespace@3624..3625 " "
                            Literal@3625..3626
                                Number@3625..3626 "4"
                            RightParen@3626..3627 ")"
                Semicolon@3627..3628 ";"
            Whitespace@3628..3630 "\n\t"
            ExprStmt@3630..3654
                BinaryExpr@3630..3653
                    SubscriptExpr@3630..3638
                        NameRef@3630..3635
                            Identifier@3630..3635 "aTest"
                        LeftBracket@3635..3636 "["
                        Literal@3636..3637
                            Number@3636..3637 "1"
                        RightBracket@3637..3638 "]"
                    Whitespace@3638..3639 " "
                    Eq@3639..3640 "="
                    Whitespace@3640..3641 " "
                    BinaryExpr@3641..3653
                        SubscriptExpr@3641..3649
                            NameRef@3641..3646
                                Identifier@3641..3646 "aTest"
                            LeftBracket@3646..3647 "["
                            Literal@3647..3648
                                Number@3647..3648 "1"
                            RightBracket@3648..3649 "]"
                        Whitespace@3649..3650 " "
                        BitwiseAnd@3650..3651 "&"
                        Whitespace@3651..3652 " "
                        Literal@3652..3653
                            Number@3652..3653 "2"
                Semicolon@3653..3654 ";"
            Whitespace@3654..3656 "\n\t"
            ExprStmt@3656..3689
                CallExpr@3656..3688
                    NameRef@3656..3662
                        Identifier@3656..3662 "assert"
                    ArgList@3662..3688
                        LeftParen@3662..3663 "("
                        BinaryExpr@3663..3687
                            NameRef@3663..3668
                                Identifier@3663..3668 "aTest"
                            Whitespace@3668..3669 " "
                            EqEq@3669..3671 "=="
                            Whitespace@3671..3672 " "
                            LeftParen@3672..3673 "("
                            CallExpr@3673..3686
                                NameRef@3673..3680
                                    Identifier@3673..3680 "ar_List"
                                ArgList@3680..3686
                                    LeftParen@3680..3681 "("
                                    Literal@3681..3682
                                        Number@3681..3682 "1"
                                    Comma@3682..3683 ","
                                    Whitespace@3683..3684 " "
                                    Literal@3684..3685
                                        Number@3684..3685 "0"
                                    RightParen@3685..3686 ")"
                            RightParen@3686..3687 ")"
                        RightParen@3687..3688 ")"
                Semicolon@3688..3689 ";"
            Whitespace@3689..3692 "\n\t\n"
            Comment@3692..3708 "// \"|\" operator\n"
            Whitespace@3708..3709 "\t"
            ExprStmt@3709..3719
                BinaryExpr@3709..3718
                    NameRef@3709..3714
                        Identifier@3709..3714 "iTest"
                    Whitespace@3714..3715 " "
                    Eq@3715..3716 "="
                    Whitespace@3716..3717 " "
                    Literal@3717..3718
                        Number@3717..3718 "2"
                Semicolon@3718..3719 ";"
            Whitespace@3719..3721 "\n\t"
            ExprStmt@3721..3739
                BinaryExpr@3721..3738
                    NameRef@3721..3726
                        Identifier@3721..3726 "iTest"
                    Whitespace@3726..3727 " "
                    Eq@3727..3728 "="
                    Whitespace@3728..3729 " "
                    BinaryExpr@3729..3738
                        NameRef@3729..3734
                            Identifier@3729..3734 "iTest"
                        Whitespace@3734..3735 " "
                        BitwiseOr@3735..3736 "|"
                        Whitespace@3736..3737 " "
                        Literal@3737..3738
                            Number@3737..3738 "4"
                Semicolon@3738..3739 ";"
            Whitespace@3739..3741 "\n\t"
            ExprStmt@3741..3760
                CallExpr@3741..3759
                    NameRef@3741..3747
                        Identifier@3741..3747 "assert"
                    ArgList@3747..3759
                        LeftParen@3747..3748 "("
                        BinaryExpr@3748..3758
                            NameRef@3748..3753
                                Identifier@3748..3753 "iTest"
                            Whitespace@3753..3754 " "
                            EqEq@3754..3756 "=="
                            Whitespace@3756..3757 " "
                            Literal@3757..3758
                                Number@3757..3758 "6"
                        RightParen@3758..3759 ")"
                Semicolon@3759..3760 ";"
            Whitespace@3760..3764 "\n\t\n\t"
            ExprStmt@3764..3786
                BinaryExpr@3764..3785
                    NameRef@3764..3769
                        Identifier@3764..3769 "aTest"
                    Whitespace@3769..3770 " "
                    Eq@3770..3771 "="
                    Whitespace@3771..3772 " "
                    CallExpr@3772..3785
                        NameRef@3772..3779
                            Identifier@3772..3779 "ar_List"
                        ArgList@3779..3785
                            LeftParen@3779..3780 "("
                            Literal@3780..3781
                                Number@3780..3781 "1"
                            Comma@3781..3782 ","
                            Whitespace@3782..3783 " "
                            Literal@3783..3784
                                Number@3783..3784 "2"
                            RightParen@3784..3785 ")"
                Semicolon@3785..3786 ";"
            Whitespace@3786..3788 "\n\t"
            ExprStmt@3788..3812
                BinaryExpr@3788..3811
                    SubscriptExpr@3788..3796
                        NameRef@3788..3793
                            Identifier@3788..3793 "aTest"
                        LeftBracket@3793..3794 "["
                        Literal@3794..3795
                            Number@3794..3795 "1"
                        RightBracket@3795..3796 "]"
                    Whitespace@3796..3797 " "
                    Eq@3797..3798 "="
                    Whitespace@3798..3799 " "
                    BinaryExpr@3799..3811
                        SubscriptExpr@3799..3807
                            NameRef@3799..3804
                                Identifier@3799..3804 "aTest"
                            LeftBracket@3804..3805 "["
                            Literal@3805..3806
                                Number@3805..3806 "1"
                            RightBracket@3806..3807 "]"
                        Whitespace@3807..3808 " "
                        BitwiseOr@3808..3809 "|"
                        Whitespace@3809..3810 " "
                        Literal@3810..3811
                            Number@3810..3811 "4"
                Semicolon@3811..3812 ";"
            Whitespace@3812..3814 "\n\t"
            ExprStmt@3814..3847
                CallExpr@3814..3846
                    NameRef@3814..3820
                        Identifier@3814..3820 "assert"
                    ArgList@3820..3846
                        LeftParen@3820..3821 "("
                        BinaryExpr@3821..3845
                            NameRef@3821..3826
                                Identifier@3821..3826 "aTest"
                            Whitespace@3826..3827 " "
                            EqEq@3827..3829 "=="
                            Whitespace@3829..3830 " "
                            LeftParen@3830..3831 "("
                            CallExpr@3831..3844
                                NameRef@3831..3838
                                    Identifier@3831..3838 "ar_List"
                                ArgList@3838..3844
                                    LeftParen@3838..3839 "("
                                    Literal@3839..3840
                                        Number@3839..3840 "1"
                                    Comma@3840..3841 ","
                                    Whitespace@3841..3842 " "
                                    Literal@3842..3843
                                        Number@3842..3843 "6"
                                    RightParen@3843..3844 ")"
                            RightParen@3844..3845 ")"
                        RightParen@3845..3846 ")"
                Semicolon@3846..3847 ";"
            Whitespace@3847..3850 "\n\t\n"
            Comment@3850..3878 "//== Binary shift operators\n"
            Whitespace@3878..3880 "\n\t"
            ExprStmt@3880..3902
                CallExpr@3880..3901
                    NameRef@3880..3886
                        Identifier@3880..3886 "assert"
                    ArgList@3886..3901
                        LeftParen@3886..3887 "("
                        LeftParen@3887..3888 "("
                        BinaryExpr@3888..3900
                            BinaryExpr@3888..3894
                                Literal@3888..3889
                                    Number@3888..3889 "1"
                                Whitespace@3889..3890 " "
                                Lt2@3890..3892 "<<"
                                Whitespace@3892..3893 " "
                                Literal@3893..3894
                                    Number@3893..3894 "2"
                            RightParen@3894..3895 ")"
                            Whitespace@3895..3896 " "
                            EqEq@3896..3898 "=="
                            Whitespace@3898..3899 " "
                            Literal@3899..3900
                                Number@3899..3900 "4"
                        RightParen@3900..3901 ")"
                Semicolon@3901..3902 ";"
            Whitespace@3902..3904 "\n\t"
            ExprStmt@3904..3926
                CallExpr@3904..3925
                    NameRef@3904..3910
                        Identifier@3904..3910 "assert"
                    ArgList@3910..3925
                        LeftParen@3910..3911 "("
                        LeftParen@3911..3912 "("
                        BinaryExpr@3912..3924
                            BinaryExpr@3912..3918
                                Literal@3912..3913
                                    Number@3912..3913 "4"
                                Whitespace@3913..3914 " "
                                Gt2@3914..3916 ">>"
                                Whitespace@3916..3917 " "
                                Literal@3917..3918
                                    Number@3917..3918 "2"
                            RightParen@3918..3919 ")"
                            Whitespace@3919..3920 " "
                            EqEq@3920..3922 "=="
                            Whitespace@3922..3923 " "
                            Literal@3923..3924
                                Number@3923..3924 "1"
                        RightParen@3924..3925 ")"
                Semicolon@3925..3926 ";"
            Whitespace@3926..3930 "\n\t\n\t"
            ExprStmt@3930..3993
                CallExpr@3930..3992
                    NameRef@3930..3935
                        Identifier@3930..3935 "print"
                    ArgList@3935..3992
                        LeftParen@3935..3936 "("
                        LeftParen@3936..3937 "("
                        BinaryExpr@3937..3990
                            BinaryExpr@3937..3973
                                StrExpr@3937..3962
                                    QuoteDouble@3937..3938 "\""
                                    StringShardLiteral@3938..3961
                                        StringShard@3938..3961 "Finished running xNVSE "
                                    QuoteDouble@3961..3962 "\""
                                Whitespace@3962..3963 " "
                                Plus@3963..3964 "+"
                                Whitespace@3964..3965 " "
                                NameRef@3965..3973
                                    Identifier@3965..3973 "testName"
                            Whitespace@3973..3974 " "
                            Plus@3974..3975 "+"
                            Whitespace@3975..3976 " "
                            StrExpr@3976..3990
                                QuoteDouble@3976..3977 "\""
                                StringShardLiteral@3977..3989
                                    StringShard@3977..3989 " unit tests."
                                QuoteDouble@3989..3990 "\""
                        RightParen@3990..3991 ")"
                        RightParen@3991..3992 ")"
                Semicolon@3992..3993 ";"
            Whitespace@3993..3994 "\n"
            RightBrace@3994..3995 "}"
