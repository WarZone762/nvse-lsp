SCRIPT@0..3995
    NAME_KW@0..4 "name"
    WHITESPACE@4..5 " "
    NAME@5..11
        IDENT@5..11 "binary"
    SEMICOLON@11..12 ";"
    WHITESPACE@12..14 "\n\n"
    FN_DECL_ITEM@14..3995
        FN_KW@14..16 "fn"
        WHITESPACE@16..17 " "
        PARAM_LIST@17..19
            LPAREN@17..18 "("
            RPAREN@18..19 ")"
        WHITESPACE@19..20 " "
        BLOCK_STMT@20..3995
            LBRACK@20..21 "{"
            WHITESPACE@21..23 "\n\t"
            VAR_DECL_STMT@23..61
                VAR_DECL@23..60
                    STRING_TY@23..29 "string"
                    WHITESPACE@29..30 " "
                    NAME@30..38
                        IDENT@30..38 "testName"
                    WHITESPACE@38..39 " "
                    EQ@39..40 "="
                    WHITESPACE@40..41 " "
                    STR_EXPR@41..60
                        QUOTE_DOUBLE@41..42 "\""
                        STR_SHARD_LITERAL@42..59
                            STR_SHARD@42..59 "Binary Operations"
                        QUOTE_DOUBLE@59..60 "\""
                SEMICOLON@60..61 ";"
            WHITESPACE@61..63 "\n\t"
            EXPR_STMT@63..125
                CALL_EXPR@63..124
                    NAME_REF@63..68
                        IDENT@63..68 "print"
                    ARG_LIST@68..124
                        LPAREN@68..69 "("
                        PAREN_EXPR@69..123
                            LPAREN@69..70 "("
                            BIN_EXPR@70..122
                                BIN_EXPR@70..105
                                    STR_EXPR@70..94
                                        QUOTE_DOUBLE@70..71 "\""
                                        STR_SHARD_LITERAL@71..93
                                            STR_SHARD@71..93 "Started running xNVSE "
                                        QUOTE_DOUBLE@93..94 "\""
                                    WHITESPACE@94..95 " "
                                    PLUS@95..96 "+"
                                    WHITESPACE@96..97 " "
                                    NAME_REF@97..105
                                        IDENT@97..105 "testName"
                                WHITESPACE@105..106 " "
                                PLUS@106..107 "+"
                                WHITESPACE@107..108 " "
                                STR_EXPR@108..122
                                    QUOTE_DOUBLE@108..109 "\""
                                    STR_SHARD_LITERAL@109..121
                                        STR_SHARD@109..121 " unit tests."
                                    QUOTE_DOUBLE@121..122 "\""
                            RPAREN@122..123 ")"
                        RPAREN@123..124 ")"
                SEMICOLON@124..125 ";"
            WHITESPACE@125..128 "\n\t\n"
            COMMENT@128..153 "//== Assignment operators"
            WHITESPACE@153..155 "\n\n"
            COMMENT@155..170 "// \"=\" operator"
            WHITESPACE@170..172 "\n\t"
            VAR_DECL_STMT@172..186
                VAR_DECL@172..185
                    INT_TY@172..175 "int"
                    WHITESPACE@175..176 " "
                    NAME@176..181
                        IDENT@176..181 "iTest"
                    WHITESPACE@181..182 " "
                    EQ@182..183 "="
                    WHITESPACE@183..184 " "
                    LITERAL@184..185
                        NUMBER@184..185 "1"
                SEMICOLON@185..186 ";"
            WHITESPACE@186..188 "\n\t"
            EXPR_STMT@188..207
                CALL_EXPR@188..206
                    NAME_REF@188..194
                        IDENT@188..194 "assert"
                    ARG_LIST@194..206
                        LPAREN@194..195 "("
                        BIN_EXPR@195..205
                            NAME_REF@195..200
                                IDENT@195..200 "iTest"
                            WHITESPACE@200..201 " "
                            EQ_2@201..203 "=="
                            WHITESPACE@203..204 " "
                            LITERAL@204..205
                                NUMBER@204..205 "1"
                        RPAREN@205..206 ")"
                SEMICOLON@206..207 ";"
            WHITESPACE@207..208 " "
            COMMENT@208..239 "// also tests equality operator"
            WHITESPACE@239..243 "\n\t\n\t"
            VAR_DECL_STMT@243..271
                VAR_DECL@243..270
                    ARRAY_TY@243..248 "array"
                    WHITESPACE@248..249 " "
                    NAME@249..254
                        IDENT@249..254 "aTest"
                    WHITESPACE@254..255 " "
                    EQ@255..256 "="
                    WHITESPACE@256..257 " "
                    CALL_EXPR@257..270
                        NAME_REF@257..264
                            IDENT@257..264 "ar_list"
                        ARG_LIST@264..270
                            LPAREN@264..265 "("
                            LITERAL@265..266
                                NUMBER@265..266 "1"
                            COMMA@266..267 ","
                            WHITESPACE@267..268 " "
                            LITERAL@268..269
                                NUMBER@268..269 "2"
                            RPAREN@269..270 ")"
                SEMICOLON@270..271 ";"
            WHITESPACE@271..273 "\n\t"
            EXPR_STMT@273..306
                CALL_EXPR@273..305
                    NAME_REF@273..279
                        IDENT@273..279 "assert"
                    ARG_LIST@279..305
                        LPAREN@279..280 "("
                        BIN_EXPR@280..304
                            NAME_REF@280..285
                                IDENT@280..285 "aTest"
                            WHITESPACE@285..286 " "
                            EQ_2@286..288 "=="
                            WHITESPACE@288..289 " "
                            PAREN_EXPR@289..304
                                LPAREN@289..290 "("
                                CALL_EXPR@290..303
                                    NAME_REF@290..297
                                        IDENT@290..297 "ar_List"
                                    ARG_LIST@297..303
                                        LPAREN@297..298 "("
                                        LITERAL@298..299
                                            NUMBER@298..299 "1"
                                        COMMA@299..300 ","
                                        WHITESPACE@300..301 " "
                                        LITERAL@301..302
                                            NUMBER@301..302 "2"
                                        RPAREN@302..303 ")"
                                RPAREN@303..304 ")"
                        RPAREN@304..305 ")"
                SEMICOLON@305..306 ";"
            WHITESPACE@306..308 "\n\t"
            EXPR_STMT@308..341
                CALL_EXPR@308..340
                    NAME_REF@308..314
                        IDENT@308..314 "assert"
                    ARG_LIST@314..340
                        LPAREN@314..315 "("
                        BIN_EXPR@315..339
                            NAME_REF@315..320
                                IDENT@315..320 "aTest"
                            WHITESPACE@320..321 " "
                            EXCLAMATION_EQ@321..323 "!="
                            WHITESPACE@323..324 " "
                            PAREN_EXPR@324..339
                                LPAREN@324..325 "("
                                CALL_EXPR@325..338
                                    NAME_REF@325..332
                                        IDENT@325..332 "ar_List"
                                    ARG_LIST@332..338
                                        LPAREN@332..333 "("
                                        LITERAL@333..334
                                            NUMBER@333..334 "1"
                                        COMMA@334..335 ","
                                        WHITESPACE@335..336 " "
                                        LITERAL@336..337
                                            NUMBER@336..337 "3"
                                        RPAREN@337..338 ")"
                                RPAREN@338..339 ")"
                        RPAREN@339..340 ")"
                SEMICOLON@340..341 ";"
            WHITESPACE@341..342 " "
            COMMENT@342..360 "// test inequality"
            WHITESPACE@360..364 "\n\t\n\t"
            VAR_DECL_STMT@364..383
                VAR_DECL@364..382
                    REF_TY@364..367 "ref"
                    WHITESPACE@367..368 " "
                    NAME@368..373
                        IDENT@368..373 "rTest"
                    WHITESPACE@373..374 " "
                    EQ@374..375 "="
                    WHITESPACE@375..376 " "
                    NAME_REF@376..382
                        IDENT@376..382 "Player"
                SEMICOLON@382..383 ";"
            WHITESPACE@383..385 "\n\t"
            EXPR_STMT@385..409
                CALL_EXPR@385..408
                    NAME_REF@385..391
                        IDENT@385..391 "assert"
                    ARG_LIST@391..408
                        LPAREN@391..392 "("
                        BIN_EXPR@392..407
                            NAME_REF@392..397
                                IDENT@392..397 "rTest"
                            WHITESPACE@397..398 " "
                            EQ_2@398..400 "=="
                            WHITESPACE@400..401 " "
                            NAME_REF@401..407
                                IDENT@401..407 "Player"
                        RPAREN@407..408 ")"
                SEMICOLON@408..409 ";"
            WHITESPACE@409..413 "\n\t\n\t"
            VAR_DECL_STMT@413..435
                VAR_DECL@413..434
                    STRING_TY@413..419 "string"
                    WHITESPACE@419..420 " "
                    NAME@420..425
                        IDENT@420..425 "sTest"
                    WHITESPACE@425..426 " "
                    EQ@426..427 "="
                    WHITESPACE@427..428 " "
                    STR_EXPR@428..434
                        QUOTE_DOUBLE@428..429 "\""
                        STR_SHARD_LITERAL@429..433
                            STR_SHARD@429..433 "test"
                        QUOTE_DOUBLE@433..434 "\""
                SEMICOLON@434..435 ";"
            WHITESPACE@435..437 "\n\t"
            EXPR_STMT@437..461
                CALL_EXPR@437..460
                    NAME_REF@437..443
                        IDENT@437..443 "assert"
                    ARG_LIST@443..460
                        LPAREN@443..444 "("
                        BIN_EXPR@444..459
                            NAME_REF@444..449
                                IDENT@444..449 "sTest"
                            WHITESPACE@449..450 " "
                            EQ_2@450..452 "=="
                            WHITESPACE@452..453 " "
                            STR_EXPR@453..459
                                QUOTE_DOUBLE@453..454 "\""
                                STR_SHARD_LITERAL@454..458
                                    STR_SHARD@454..458 "test"
                                QUOTE_DOUBLE@458..459 "\""
                        RPAREN@459..460 ")"
                SEMICOLON@460..461 ";"
            WHITESPACE@461..465 "\n\t\n\t"
            VAR_DECL_STMT@465..484
                VAR_DECL@465..483
                    DOUBLE_TY@465..471 "double"
                    WHITESPACE@471..472 " "
                    NAME@472..477
                        IDENT@472..477 "fTest"
                    WHITESPACE@477..478 " "
                    EQ@478..479 "="
                    WHITESPACE@479..480 " "
                    LITERAL@480..483
                        NUMBER@480..483 "2.5"
                SEMICOLON@483..484 ";"
            WHITESPACE@484..486 "\n\t"
            EXPR_STMT@486..507
                CALL_EXPR@486..506
                    NAME_REF@486..492
                        IDENT@486..492 "assert"
                    ARG_LIST@492..506
                        LPAREN@492..493 "("
                        BIN_EXPR@493..505
                            NAME_REF@493..498
                                IDENT@493..498 "fTest"
                            WHITESPACE@498..499 " "
                            EQ_2@499..501 "=="
                            WHITESPACE@501..502 " "
                            LITERAL@502..505
                                NUMBER@502..505 "2.5"
                        RPAREN@505..506 ")"
                SEMICOLON@506..507 ";"
            WHITESPACE@507..511 "\n\t\n\t"
            COMMENT@511..553 "// Ensure rounding down works for integers"
            WHITESPACE@553..555 "\n\t"
            EXPR_STMT@555..567
                BIN_EXPR@555..566
                    NAME_REF@555..560
                        IDENT@555..560 "iTest"
                    WHITESPACE@560..561 " "
                    EQ@561..562 "="
                    WHITESPACE@562..563 " "
                    LITERAL@563..566
                        NUMBER@563..566 "2.5"
                SEMICOLON@566..567 ";"
            WHITESPACE@567..569 "\n\t"
            EXPR_STMT@569..588
                CALL_EXPR@569..587
                    NAME_REF@569..575
                        IDENT@569..575 "assert"
                    ARG_LIST@575..587
                        LPAREN@575..576 "("
                        BIN_EXPR@576..586
                            NAME_REF@576..581
                                IDENT@576..581 "iTest"
                            WHITESPACE@581..582 " "
                            EQ_2@582..584 "=="
                            WHITESPACE@584..585 " "
                            LITERAL@585..586
                                NUMBER@585..586 "2"
                        RPAREN@586..587 ")"
                SEMICOLON@587..588 ";"
            WHITESPACE@588..592 "\n\t\n\t"
            COMMENT@592..630 "// try setting to Ambiguous-type value"
            WHITESPACE@630..632 "\n\t"
            EXPR_STMT@632..648
                BIN_EXPR@632..647
                    NAME_REF@632..637
                        IDENT@632..637 "iTest"
                    WHITESPACE@637..638 " "
                    EQ@638..639 "="
                    WHITESPACE@639..640 " "
                    UNARY_EXPR@640..647
                        ASTERISK@640..641 "*"
                        PAREN_EXPR@641..647
                            LPAREN@641..642 "("
                            UNARY_EXPR@642..646
                                AMPERSAND@642..643 "&"
                                PAREN_EXPR@643..646
                                    LPAREN@643..644 "("
                                    LITERAL@644..645
                                        NUMBER@644..645 "1"
                                    RPAREN@645..646 ")"
                            RPAREN@646..647 ")"
                SEMICOLON@647..648 ";"
            WHITESPACE@648..650 "\n\t"
            EXPR_STMT@650..669
                CALL_EXPR@650..668
                    NAME_REF@650..656
                        IDENT@650..656 "assert"
                    ARG_LIST@656..668
                        LPAREN@656..657 "("
                        BIN_EXPR@657..667
                            NAME_REF@657..662
                                IDENT@657..662 "iTest"
                            WHITESPACE@662..663 " "
                            EQ_2@663..665 "=="
                            WHITESPACE@665..666 " "
                            LITERAL@666..667
                                NUMBER@666..667 "1"
                        RPAREN@667..668 ")"
                SEMICOLON@668..669 ";"
            WHITESPACE@669..673 "\n\t\n\t"
            COMMENT@673..696 "// Try on array element"
            WHITESPACE@696..698 "\n\t"
            EXPR_STMT@698..720
                BIN_EXPR@698..719
                    NAME_REF@698..703
                        IDENT@698..703 "aTest"
                    WHITESPACE@703..704 " "
                    EQ@704..705 "="
                    WHITESPACE@705..706 " "
                    CALL_EXPR@706..719
                        NAME_REF@706..713
                            IDENT@706..713 "ar_List"
                        ARG_LIST@713..719
                            LPAREN@713..714 "("
                            LITERAL@714..715
                                NUMBER@714..715 "1"
                            COMMA@715..716 ","
                            WHITESPACE@716..717 " "
                            LITERAL@717..718
                                NUMBER@717..718 "2"
                            RPAREN@718..719 ")"
                SEMICOLON@719..720 ";"
            WHITESPACE@720..722 "\n\t"
            EXPR_STMT@722..735
                BIN_EXPR@722..734
                    SUBSCRIPT_EXPR@722..730
                        NAME_REF@722..727
                            IDENT@722..727 "aTest"
                        LSQ_BRACK@727..728 "["
                        LITERAL@728..729
                            NUMBER@728..729 "1"
                        RSQ_BRACK@729..730 "]"
                    WHITESPACE@730..731 " "
                    EQ@731..732 "="
                    WHITESPACE@732..733 " "
                    LITERAL@733..734
                        NUMBER@733..734 "4"
                SEMICOLON@734..735 ";"
            WHITESPACE@735..737 "\n\t"
            EXPR_STMT@737..770
                CALL_EXPR@737..769
                    NAME_REF@737..743
                        IDENT@737..743 "assert"
                    ARG_LIST@743..769
                        LPAREN@743..744 "("
                        BIN_EXPR@744..768
                            NAME_REF@744..749
                                IDENT@744..749 "aTest"
                            WHITESPACE@749..750 " "
                            EQ_2@750..752 "=="
                            WHITESPACE@752..753 " "
                            PAREN_EXPR@753..768
                                LPAREN@753..754 "("
                                CALL_EXPR@754..767
                                    NAME_REF@754..761
                                        IDENT@754..761 "ar_List"
                                    ARG_LIST@761..767
                                        LPAREN@761..762 "("
                                        LITERAL@762..763
                                            NUMBER@762..763 "1"
                                        COMMA@763..764 ","
                                        WHITESPACE@764..765 " "
                                        LITERAL@765..766
                                            NUMBER@765..766 "4"
                                        RPAREN@766..767 ")"
                                RPAREN@767..768 ")"
                        RPAREN@768..769 ")"
                SEMICOLON@769..770 ";"
            WHITESPACE@770..773 "\n\t\n"
            COMMENT@773..789 "// \"+=\" operator"
            WHITESPACE@789..791 "\n\t"
            EXPR_STMT@791..801
                BIN_EXPR@791..800
                    NAME_REF@791..796
                        IDENT@791..796 "iTest"
                    WHITESPACE@796..797 " "
                    EQ@797..798 "="
                    WHITESPACE@798..799 " "
                    LITERAL@799..800
                        NUMBER@799..800 "0"
                SEMICOLON@800..801 ";"
            WHITESPACE@801..803 "\n\t"
            EXPR_STMT@803..816
                BIN_EXPR@803..815
                    NAME_REF@803..808
                        IDENT@803..808 "iTest"
                    WHITESPACE@808..809 " "
                    PLUS_EQ@809..811 "+="
                    WHITESPACE@811..812 " "
                    LITERAL@812..815
                        NUMBER@812..815 "2.5"
                SEMICOLON@815..816 ";"
            WHITESPACE@816..818 "\n\t"
            EXPR_STMT@818..837
                CALL_EXPR@818..836
                    NAME_REF@818..824
                        IDENT@818..824 "assert"
                    ARG_LIST@824..836
                        LPAREN@824..825 "("
                        BIN_EXPR@825..835
                            NAME_REF@825..830
                                IDENT@825..830 "iTest"
                            WHITESPACE@830..831 " "
                            EQ_2@831..833 "=="
                            WHITESPACE@833..834 " "
                            LITERAL@834..835
                                NUMBER@834..835 "2"
                        RPAREN@835..836 ")"
                SEMICOLON@836..837 ";"
            WHITESPACE@837..841 "\n\t\n\t"
            EXPR_STMT@841..863
                BIN_EXPR@841..862
                    NAME_REF@841..846
                        IDENT@841..846 "aTest"
                    WHITESPACE@846..847 " "
                    EQ@847..848 "="
                    WHITESPACE@848..849 " "
                    CALL_EXPR@849..862
                        NAME_REF@849..856
                            IDENT@849..856 "ar_List"
                        ARG_LIST@856..862
                            LPAREN@856..857 "("
                            LITERAL@857..858
                                NUMBER@857..858 "1"
                            COMMA@858..859 ","
                            WHITESPACE@859..860 " "
                            LITERAL@860..861
                                NUMBER@860..861 "2"
                            RPAREN@861..862 ")"
                SEMICOLON@862..863 ";"
            WHITESPACE@863..865 "\n\t"
            EXPR_STMT@865..879
                BIN_EXPR@865..878
                    SUBSCRIPT_EXPR@865..873
                        NAME_REF@865..870
                            IDENT@865..870 "aTest"
                        LSQ_BRACK@870..871 "["
                        LITERAL@871..872
                            NUMBER@871..872 "1"
                        RSQ_BRACK@872..873 "]"
                    WHITESPACE@873..874 " "
                    PLUS_EQ@874..876 "+="
                    WHITESPACE@876..877 " "
                    LITERAL@877..878
                        NUMBER@877..878 "4"
                SEMICOLON@878..879 ";"
            WHITESPACE@879..881 "\n\t"
            EXPR_STMT@881..914
                CALL_EXPR@881..913
                    NAME_REF@881..887
                        IDENT@881..887 "assert"
                    ARG_LIST@887..913
                        LPAREN@887..888 "("
                        BIN_EXPR@888..912
                            NAME_REF@888..893
                                IDENT@888..893 "aTest"
                            WHITESPACE@893..894 " "
                            EQ_2@894..896 "=="
                            WHITESPACE@896..897 " "
                            PAREN_EXPR@897..912
                                LPAREN@897..898 "("
                                CALL_EXPR@898..911
                                    NAME_REF@898..905
                                        IDENT@898..905 "ar_List"
                                    ARG_LIST@905..911
                                        LPAREN@905..906 "("
                                        LITERAL@906..907
                                            NUMBER@906..907 "1"
                                        COMMA@907..908 ","
                                        WHITESPACE@908..909 " "
                                        LITERAL@909..910
                                            NUMBER@909..910 "6"
                                        RPAREN@910..911 ")"
                                RPAREN@911..912 ")"
                        RPAREN@912..913 ")"
                SEMICOLON@913..914 ";"
            WHITESPACE@914..918 "\n\t\n\t"
            EXPR_STMT@918..933
                BIN_EXPR@918..932
                    NAME_REF@918..923
                        IDENT@918..923 "sTest"
                    WHITESPACE@923..924 " "
                    EQ@924..925 "="
                    WHITESPACE@925..926 " "
                    STR_EXPR@926..932
                        QUOTE_DOUBLE@926..927 "\""
                        STR_SHARD_LITERAL@927..931
                            STR_SHARD@927..931 "test"
                        QUOTE_DOUBLE@931..932 "\""
                SEMICOLON@932..933 ";"
            WHITESPACE@933..935 "\n\t"
            EXPR_STMT@935..948
                BIN_EXPR@935..947
                    NAME_REF@935..940
                        IDENT@935..940 "sTest"
                    WHITESPACE@940..941 " "
                    PLUS_EQ@941..943 "+="
                    WHITESPACE@943..944 " "
                    STR_EXPR@944..947
                        QUOTE_DOUBLE@944..945 "\""
                        STR_SHARD_LITERAL@945..946
                            STR_SHARD@945..946 "2"
                        QUOTE_DOUBLE@946..947 "\""
                SEMICOLON@947..948 ";"
            WHITESPACE@948..950 "\n\t"
            EXPR_STMT@950..975
                CALL_EXPR@950..974
                    NAME_REF@950..956
                        IDENT@950..956 "assert"
                    ARG_LIST@956..974
                        LPAREN@956..957 "("
                        BIN_EXPR@957..973
                            NAME_REF@957..962
                                IDENT@957..962 "sTest"
                            WHITESPACE@962..963 " "
                            EQ_2@963..965 "=="
                            WHITESPACE@965..966 " "
                            STR_EXPR@966..973
                                QUOTE_DOUBLE@966..967 "\""
                                STR_SHARD_LITERAL@967..972
                                    STR_SHARD@967..972 "test2"
                                QUOTE_DOUBLE@972..973 "\""
                        RPAREN@973..974 ")"
                SEMICOLON@974..975 ";"
            WHITESPACE@975..978 "\n\t\n"
            COMMENT@978..994 "// \"-=\" operator"
            WHITESPACE@994..996 "\n\t"
            EXPR_STMT@996..1006
                BIN_EXPR@996..1005
                    NAME_REF@996..1001
                        IDENT@996..1001 "iTest"
                    WHITESPACE@1001..1002 " "
                    EQ@1002..1003 "="
                    WHITESPACE@1003..1004 " "
                    LITERAL@1004..1005
                        NUMBER@1004..1005 "0"
                SEMICOLON@1005..1006 ";"
            WHITESPACE@1006..1008 "\n\t"
            EXPR_STMT@1008..1019
                BIN_EXPR@1008..1018
                    NAME_REF@1008..1013
                        IDENT@1008..1013 "iTest"
                    WHITESPACE@1013..1014 " "
                    MINUS_EQ@1014..1016 "-="
                    WHITESPACE@1016..1017 " "
                    LITERAL@1017..1018
                        NUMBER@1017..1018 "2"
                SEMICOLON@1018..1019 ";"
            WHITESPACE@1019..1021 "\n\t"
            EXPR_STMT@1021..1041
                CALL_EXPR@1021..1040
                    NAME_REF@1021..1027
                        IDENT@1021..1027 "assert"
                    ARG_LIST@1027..1040
                        LPAREN@1027..1028 "("
                        BIN_EXPR@1028..1039
                            NAME_REF@1028..1033
                                IDENT@1028..1033 "iTest"
                            WHITESPACE@1033..1034 " "
                            EQ_2@1034..1036 "=="
                            WHITESPACE@1036..1037 " "
                            UNARY_EXPR@1037..1039
                                MINUS@1037..1038 "-"
                                LITERAL@1038..1039
                                    NUMBER@1038..1039 "2"
                        RPAREN@1039..1040 ")"
                SEMICOLON@1040..1041 ";"
            WHITESPACE@1041..1045 "\n\t\n\t"
            EXPR_STMT@1045..1067
                BIN_EXPR@1045..1066
                    NAME_REF@1045..1050
                        IDENT@1045..1050 "aTest"
                    WHITESPACE@1050..1051 " "
                    EQ@1051..1052 "="
                    WHITESPACE@1052..1053 " "
                    CALL_EXPR@1053..1066
                        NAME_REF@1053..1060
                            IDENT@1053..1060 "ar_List"
                        ARG_LIST@1060..1066
                            LPAREN@1060..1061 "("
                            LITERAL@1061..1062
                                NUMBER@1061..1062 "1"
                            COMMA@1062..1063 ","
                            WHITESPACE@1063..1064 " "
                            LITERAL@1064..1065
                                NUMBER@1064..1065 "2"
                            RPAREN@1065..1066 ")"
                SEMICOLON@1066..1067 ";"
            WHITESPACE@1067..1069 "\n\t"
            EXPR_STMT@1069..1083
                BIN_EXPR@1069..1082
                    SUBSCRIPT_EXPR@1069..1077
                        NAME_REF@1069..1074
                            IDENT@1069..1074 "aTest"
                        LSQ_BRACK@1074..1075 "["
                        LITERAL@1075..1076
                            NUMBER@1075..1076 "1"
                        RSQ_BRACK@1076..1077 "]"
                    WHITESPACE@1077..1078 " "
                    MINUS_EQ@1078..1080 "-="
                    WHITESPACE@1080..1081 " "
                    LITERAL@1081..1082
                        NUMBER@1081..1082 "4"
                SEMICOLON@1082..1083 ";"
            WHITESPACE@1083..1085 "\n\t"
            EXPR_STMT@1085..1119
                CALL_EXPR@1085..1118
                    NAME_REF@1085..1091
                        IDENT@1085..1091 "assert"
                    ARG_LIST@1091..1118
                        LPAREN@1091..1092 "("
                        BIN_EXPR@1092..1117
                            NAME_REF@1092..1097
                                IDENT@1092..1097 "aTest"
                            WHITESPACE@1097..1098 " "
                            EQ_2@1098..1100 "=="
                            WHITESPACE@1100..1101 " "
                            PAREN_EXPR@1101..1117
                                LPAREN@1101..1102 "("
                                CALL_EXPR@1102..1116
                                    NAME_REF@1102..1109
                                        IDENT@1102..1109 "ar_List"
                                    ARG_LIST@1109..1116
                                        LPAREN@1109..1110 "("
                                        LITERAL@1110..1111
                                            NUMBER@1110..1111 "1"
                                        COMMA@1111..1112 ","
                                        WHITESPACE@1112..1113 " "
                                        UNARY_EXPR@1113..1115
                                            MINUS@1113..1114 "-"
                                            LITERAL@1114..1115
                                                NUMBER@1114..1115 "2"
                                        RPAREN@1115..1116 ")"
                                RPAREN@1116..1117 ")"
                        RPAREN@1117..1118 ")"
                SEMICOLON@1118..1119 ";"
            WHITESPACE@1119..1122 "\n\t\n"
            COMMENT@1122..1138 "// \"*=\" operator"
            WHITESPACE@1138..1140 "\n\t"
            EXPR_STMT@1140..1150
                BIN_EXPR@1140..1149
                    NAME_REF@1140..1145
                        IDENT@1140..1145 "iTest"
                    WHITESPACE@1145..1146 " "
                    EQ@1146..1147 "="
                    WHITESPACE@1147..1148 " "
                    LITERAL@1148..1149
                        NUMBER@1148..1149 "1"
                SEMICOLON@1149..1150 ";"
            WHITESPACE@1150..1152 "\n\t"
            EXPR_STMT@1152..1163
                BIN_EXPR@1152..1162
                    NAME_REF@1152..1157
                        IDENT@1152..1157 "iTest"
                    WHITESPACE@1157..1158 " "
                    ASTERISK_EQ@1158..1160 "*="
                    WHITESPACE@1160..1161 " "
                    LITERAL@1161..1162
                        NUMBER@1161..1162 "2"
                SEMICOLON@1162..1163 ";"
            WHITESPACE@1163..1165 "\n\t"
            EXPR_STMT@1165..1184
                CALL_EXPR@1165..1183
                    NAME_REF@1165..1171
                        IDENT@1165..1171 "assert"
                    ARG_LIST@1171..1183
                        LPAREN@1171..1172 "("
                        BIN_EXPR@1172..1182
                            NAME_REF@1172..1177
                                IDENT@1172..1177 "iTest"
                            WHITESPACE@1177..1178 " "
                            EQ_2@1178..1180 "=="
                            WHITESPACE@1180..1181 " "
                            LITERAL@1181..1182
                                NUMBER@1181..1182 "2"
                        RPAREN@1182..1183 ")"
                SEMICOLON@1183..1184 ";"
            WHITESPACE@1184..1188 "\n\t\n\t"
            EXPR_STMT@1188..1210
                BIN_EXPR@1188..1209
                    NAME_REF@1188..1193
                        IDENT@1188..1193 "aTest"
                    WHITESPACE@1193..1194 " "
                    EQ@1194..1195 "="
                    WHITESPACE@1195..1196 " "
                    CALL_EXPR@1196..1209
                        NAME_REF@1196..1203
                            IDENT@1196..1203 "ar_List"
                        ARG_LIST@1203..1209
                            LPAREN@1203..1204 "("
                            LITERAL@1204..1205
                                NUMBER@1204..1205 "1"
                            COMMA@1205..1206 ","
                            WHITESPACE@1206..1207 " "
                            LITERAL@1207..1208
                                NUMBER@1207..1208 "2"
                            RPAREN@1208..1209 ")"
                SEMICOLON@1209..1210 ";"
            WHITESPACE@1210..1212 "\n\t"
            EXPR_STMT@1212..1226
                BIN_EXPR@1212..1225
                    SUBSCRIPT_EXPR@1212..1220
                        NAME_REF@1212..1217
                            IDENT@1212..1217 "aTest"
                        LSQ_BRACK@1217..1218 "["
                        LITERAL@1218..1219
                            NUMBER@1218..1219 "1"
                        RSQ_BRACK@1219..1220 "]"
                    WHITESPACE@1220..1221 " "
                    ASTERISK_EQ@1221..1223 "*="
                    WHITESPACE@1223..1224 " "
                    LITERAL@1224..1225
                        NUMBER@1224..1225 "4"
                SEMICOLON@1225..1226 ";"
            WHITESPACE@1226..1228 "\n\t"
            EXPR_STMT@1228..1261
                CALL_EXPR@1228..1260
                    NAME_REF@1228..1234
                        IDENT@1228..1234 "assert"
                    ARG_LIST@1234..1260
                        LPAREN@1234..1235 "("
                        BIN_EXPR@1235..1259
                            NAME_REF@1235..1240
                                IDENT@1235..1240 "aTest"
                            WHITESPACE@1240..1241 " "
                            EQ_2@1241..1243 "=="
                            WHITESPACE@1243..1244 " "
                            PAREN_EXPR@1244..1259
                                LPAREN@1244..1245 "("
                                CALL_EXPR@1245..1258
                                    NAME_REF@1245..1252
                                        IDENT@1245..1252 "ar_List"
                                    ARG_LIST@1252..1258
                                        LPAREN@1252..1253 "("
                                        LITERAL@1253..1254
                                            NUMBER@1253..1254 "1"
                                        COMMA@1254..1255 ","
                                        WHITESPACE@1255..1256 " "
                                        LITERAL@1256..1257
                                            NUMBER@1256..1257 "8"
                                        RPAREN@1257..1258 ")"
                                RPAREN@1258..1259 ")"
                        RPAREN@1259..1260 ")"
                SEMICOLON@1260..1261 ";"
            WHITESPACE@1261..1264 "\n\t\n"
            COMMENT@1264..1280 "// \"/=\" operator"
            WHITESPACE@1280..1282 "\n\t"
            EXPR_STMT@1282..1292
                BIN_EXPR@1282..1291
                    NAME_REF@1282..1287
                        IDENT@1282..1287 "iTest"
                    WHITESPACE@1287..1288 " "
                    EQ@1288..1289 "="
                    WHITESPACE@1289..1290 " "
                    LITERAL@1290..1291
                        NUMBER@1290..1291 "1"
                SEMICOLON@1291..1292 ";"
            WHITESPACE@1292..1294 "\n\t"
            EXPR_STMT@1294..1305
                BIN_EXPR@1294..1304
                    NAME_REF@1294..1299
                        IDENT@1294..1299 "iTest"
                    WHITESPACE@1299..1300 " "
                    SLASH_EQ@1300..1302 "/="
                    WHITESPACE@1302..1303 " "
                    LITERAL@1303..1304
                        NUMBER@1303..1304 "2"
                SEMICOLON@1304..1305 ";"
            WHITESPACE@1305..1307 "\n\t"
            EXPR_STMT@1307..1326
                CALL_EXPR@1307..1325
                    NAME_REF@1307..1313
                        IDENT@1307..1313 "assert"
                    ARG_LIST@1313..1325
                        LPAREN@1313..1314 "("
                        BIN_EXPR@1314..1324
                            NAME_REF@1314..1319
                                IDENT@1314..1319 "iTest"
                            WHITESPACE@1319..1320 " "
                            EQ_2@1320..1322 "=="
                            WHITESPACE@1322..1323 " "
                            LITERAL@1323..1324
                                NUMBER@1323..1324 "0"
                        RPAREN@1324..1325 ")"
                SEMICOLON@1325..1326 ";"
            WHITESPACE@1326..1330 "\n\t\n\t"
            EXPR_STMT@1330..1352
                BIN_EXPR@1330..1351
                    NAME_REF@1330..1335
                        IDENT@1330..1335 "aTest"
                    WHITESPACE@1335..1336 " "
                    EQ@1336..1337 "="
                    WHITESPACE@1337..1338 " "
                    CALL_EXPR@1338..1351
                        NAME_REF@1338..1345
                            IDENT@1338..1345 "ar_List"
                        ARG_LIST@1345..1351
                            LPAREN@1345..1346 "("
                            LITERAL@1346..1347
                                NUMBER@1346..1347 "1"
                            COMMA@1347..1348 ","
                            WHITESPACE@1348..1349 " "
                            LITERAL@1349..1350
                                NUMBER@1349..1350 "2"
                            RPAREN@1350..1351 ")"
                SEMICOLON@1351..1352 ";"
            WHITESPACE@1352..1354 "\n\t"
            EXPR_STMT@1354..1368
                BIN_EXPR@1354..1367
                    SUBSCRIPT_EXPR@1354..1362
                        NAME_REF@1354..1359
                            IDENT@1354..1359 "aTest"
                        LSQ_BRACK@1359..1360 "["
                        LITERAL@1360..1361
                            NUMBER@1360..1361 "1"
                        RSQ_BRACK@1361..1362 "]"
                    WHITESPACE@1362..1363 " "
                    SLASH_EQ@1363..1365 "/="
                    WHITESPACE@1365..1366 " "
                    LITERAL@1366..1367
                        NUMBER@1366..1367 "1"
                SEMICOLON@1367..1368 ";"
            WHITESPACE@1368..1370 "\n\t"
            EXPR_STMT@1370..1403
                CALL_EXPR@1370..1402
                    NAME_REF@1370..1376
                        IDENT@1370..1376 "assert"
                    ARG_LIST@1376..1402
                        LPAREN@1376..1377 "("
                        BIN_EXPR@1377..1401
                            NAME_REF@1377..1382
                                IDENT@1377..1382 "aTest"
                            WHITESPACE@1382..1383 " "
                            EQ_2@1383..1385 "=="
                            WHITESPACE@1385..1386 " "
                            PAREN_EXPR@1386..1401
                                LPAREN@1386..1387 "("
                                CALL_EXPR@1387..1400
                                    NAME_REF@1387..1394
                                        IDENT@1387..1394 "ar_List"
                                    ARG_LIST@1394..1400
                                        LPAREN@1394..1395 "("
                                        LITERAL@1395..1396
                                            NUMBER@1395..1396 "1"
                                        COMMA@1396..1397 ","
                                        WHITESPACE@1397..1398 " "
                                        LITERAL@1398..1399
                                            NUMBER@1398..1399 "2"
                                        RPAREN@1399..1400 ")"
                                RPAREN@1400..1401 ")"
                        RPAREN@1401..1402 ")"
                SEMICOLON@1402..1403 ";"
            WHITESPACE@1403..1406 "\n\t\n"
            COMMENT@1406..1422 "// \"^=\" operator"
            WHITESPACE@1422..1424 "\n\t"
            EXPR_STMT@1424..1434
                BIN_EXPR@1424..1433
                    NAME_REF@1424..1429
                        IDENT@1424..1429 "iTest"
                    WHITESPACE@1429..1430 " "
                    EQ@1430..1431 "="
                    WHITESPACE@1431..1432 " "
                    LITERAL@1432..1433
                        NUMBER@1432..1433 "2"
                SEMICOLON@1433..1434 ";"
            WHITESPACE@1434..1436 "\n\t"
            EXPR_STMT@1436..1447
                BIN_EXPR@1436..1446
                    NAME_REF@1436..1441
                        IDENT@1436..1441 "iTest"
                    WHITESPACE@1441..1442 " "
                    CIRCUMFLEX_EQ@1442..1444 "^="
                    WHITESPACE@1444..1445 " "
                    LITERAL@1445..1446
                        NUMBER@1445..1446 "2"
                SEMICOLON@1446..1447 ";"
            WHITESPACE@1447..1449 "\n\t"
            EXPR_STMT@1449..1468
                CALL_EXPR@1449..1467
                    NAME_REF@1449..1455
                        IDENT@1449..1455 "assert"
                    ARG_LIST@1455..1467
                        LPAREN@1455..1456 "("
                        BIN_EXPR@1456..1466
                            NAME_REF@1456..1461
                                IDENT@1456..1461 "iTest"
                            WHITESPACE@1461..1462 " "
                            EQ_2@1462..1464 "=="
                            WHITESPACE@1464..1465 " "
                            LITERAL@1465..1466
                                NUMBER@1465..1466 "4"
                        RPAREN@1466..1467 ")"
                SEMICOLON@1467..1468 ";"
            WHITESPACE@1468..1472 "\n\t\n\t"
            EXPR_STMT@1472..1494
                BIN_EXPR@1472..1493
                    NAME_REF@1472..1477
                        IDENT@1472..1477 "aTest"
                    WHITESPACE@1477..1478 " "
                    EQ@1478..1479 "="
                    WHITESPACE@1479..1480 " "
                    CALL_EXPR@1480..1493
                        NAME_REF@1480..1487
                            IDENT@1480..1487 "ar_List"
                        ARG_LIST@1487..1493
                            LPAREN@1487..1488 "("
                            LITERAL@1488..1489
                                NUMBER@1488..1489 "1"
                            COMMA@1489..1490 ","
                            WHITESPACE@1490..1491 " "
                            LITERAL@1491..1492
                                NUMBER@1491..1492 "2"
                            RPAREN@1492..1493 ")"
                SEMICOLON@1493..1494 ";"
            WHITESPACE@1494..1496 "\n\t"
            EXPR_STMT@1496..1510
                BIN_EXPR@1496..1509
                    SUBSCRIPT_EXPR@1496..1504
                        NAME_REF@1496..1501
                            IDENT@1496..1501 "aTest"
                        LSQ_BRACK@1501..1502 "["
                        LITERAL@1502..1503
                            NUMBER@1502..1503 "1"
                        RSQ_BRACK@1503..1504 "]"
                    WHITESPACE@1504..1505 " "
                    CIRCUMFLEX_EQ@1505..1507 "^="
                    WHITESPACE@1507..1508 " "
                    LITERAL@1508..1509
                        NUMBER@1508..1509 "2"
                SEMICOLON@1509..1510 ";"
            WHITESPACE@1510..1512 "\n\t"
            EXPR_STMT@1512..1545
                CALL_EXPR@1512..1544
                    NAME_REF@1512..1518
                        IDENT@1512..1518 "assert"
                    ARG_LIST@1518..1544
                        LPAREN@1518..1519 "("
                        BIN_EXPR@1519..1543
                            NAME_REF@1519..1524
                                IDENT@1519..1524 "aTest"
                            WHITESPACE@1524..1525 " "
                            EQ_2@1525..1527 "=="
                            WHITESPACE@1527..1528 " "
                            PAREN_EXPR@1528..1543
                                LPAREN@1528..1529 "("
                                CALL_EXPR@1529..1542
                                    NAME_REF@1529..1536
                                        IDENT@1529..1536 "ar_List"
                                    ARG_LIST@1536..1542
                                        LPAREN@1536..1537 "("
                                        LITERAL@1537..1538
                                            NUMBER@1537..1538 "1"
                                        COMMA@1538..1539 ","
                                        WHITESPACE@1539..1540 " "
                                        LITERAL@1540..1541
                                            NUMBER@1540..1541 "4"
                                        RPAREN@1541..1542 ")"
                                RPAREN@1542..1543 ")"
                        RPAREN@1543..1544 ")"
                SEMICOLON@1544..1545 ";"
            WHITESPACE@1545..1548 "\n\t\n"
            COMMENT@1548..1564 "// \"%=\" operator"
            WHITESPACE@1564..1566 "\n\t"
            EXPR_STMT@1566..1576
                BIN_EXPR@1566..1575
                    NAME_REF@1566..1571
                        IDENT@1566..1571 "iTest"
                    WHITESPACE@1571..1572 " "
                    EQ@1572..1573 "="
                    WHITESPACE@1573..1574 " "
                    LITERAL@1574..1575
                        NUMBER@1574..1575 "2"
                SEMICOLON@1575..1576 ";"
            WHITESPACE@1576..1578 "\n\t"
            EXPR_STMT@1578..1589
                BIN_EXPR@1578..1588
                    NAME_REF@1578..1583
                        IDENT@1578..1583 "iTest"
                    WHITESPACE@1583..1584 " "
                    PERCENT_EQ@1584..1586 "%="
                    WHITESPACE@1586..1587 " "
                    LITERAL@1587..1588
                        NUMBER@1587..1588 "2"
                SEMICOLON@1588..1589 ";"
            WHITESPACE@1589..1591 "\n\t"
            EXPR_STMT@1591..1610
                CALL_EXPR@1591..1609
                    NAME_REF@1591..1597
                        IDENT@1591..1597 "assert"
                    ARG_LIST@1597..1609
                        LPAREN@1597..1598 "("
                        BIN_EXPR@1598..1608
                            NAME_REF@1598..1603
                                IDENT@1598..1603 "iTest"
                            WHITESPACE@1603..1604 " "
                            EQ_2@1604..1606 "=="
                            WHITESPACE@1606..1607 " "
                            LITERAL@1607..1608
                                NUMBER@1607..1608 "0"
                        RPAREN@1608..1609 ")"
                SEMICOLON@1609..1610 ";"
            WHITESPACE@1610..1614 "\n\t\n\t"
            EXPR_STMT@1614..1636
                BIN_EXPR@1614..1635
                    NAME_REF@1614..1619
                        IDENT@1614..1619 "aTest"
                    WHITESPACE@1619..1620 " "
                    EQ@1620..1621 "="
                    WHITESPACE@1621..1622 " "
                    CALL_EXPR@1622..1635
                        NAME_REF@1622..1629
                            IDENT@1622..1629 "ar_List"
                        ARG_LIST@1629..1635
                            LPAREN@1629..1630 "("
                            LITERAL@1630..1631
                                NUMBER@1630..1631 "1"
                            COMMA@1631..1632 ","
                            WHITESPACE@1632..1633 " "
                            LITERAL@1633..1634
                                NUMBER@1633..1634 "2"
                            RPAREN@1634..1635 ")"
                SEMICOLON@1635..1636 ";"
            WHITESPACE@1636..1638 "\n\t"
            EXPR_STMT@1638..1652
                BIN_EXPR@1638..1651
                    SUBSCRIPT_EXPR@1638..1646
                        NAME_REF@1638..1643
                            IDENT@1638..1643 "aTest"
                        LSQ_BRACK@1643..1644 "["
                        LITERAL@1644..1645
                            NUMBER@1644..1645 "1"
                        RSQ_BRACK@1645..1646 "]"
                    WHITESPACE@1646..1647 " "
                    PERCENT_EQ@1647..1649 "%="
                    WHITESPACE@1649..1650 " "
                    LITERAL@1650..1651
                        NUMBER@1650..1651 "2"
                SEMICOLON@1651..1652 ";"
            WHITESPACE@1652..1654 "\n\t"
            EXPR_STMT@1654..1687
                CALL_EXPR@1654..1686
                    NAME_REF@1654..1660
                        IDENT@1654..1660 "assert"
                    ARG_LIST@1660..1686
                        LPAREN@1660..1661 "("
                        BIN_EXPR@1661..1685
                            NAME_REF@1661..1666
                                IDENT@1661..1666 "aTest"
                            WHITESPACE@1666..1667 " "
                            EQ_2@1667..1669 "=="
                            WHITESPACE@1669..1670 " "
                            PAREN_EXPR@1670..1685
                                LPAREN@1670..1671 "("
                                CALL_EXPR@1671..1684
                                    NAME_REF@1671..1678
                                        IDENT@1671..1678 "ar_List"
                                    ARG_LIST@1678..1684
                                        LPAREN@1678..1679 "("
                                        LITERAL@1679..1680
                                            NUMBER@1679..1680 "1"
                                        COMMA@1680..1681 ","
                                        WHITESPACE@1681..1682 " "
                                        LITERAL@1682..1683
                                            NUMBER@1682..1683 "0"
                                        RPAREN@1683..1684 ")"
                                RPAREN@1684..1685 ")"
                        RPAREN@1685..1686 ")"
                SEMICOLON@1686..1687 ";"
            WHITESPACE@1687..1690 "\n\t\n"
            COMMENT@1690..1706 "// \"&=\" operator"
            WHITESPACE@1706..1708 "\n\t"
            EXPR_STMT@1708..1718
                BIN_EXPR@1708..1717
                    NAME_REF@1708..1713
                        IDENT@1708..1713 "iTest"
                    WHITESPACE@1713..1714 " "
                    EQ@1714..1715 "="
                    WHITESPACE@1715..1716 " "
                    LITERAL@1716..1717
                        NUMBER@1716..1717 "2"
                SEMICOLON@1717..1718 ";"
            WHITESPACE@1718..1720 "\n\t"
            EXPR_STMT@1720..1731
                BIN_EXPR@1720..1730
                    NAME_REF@1720..1725
                        IDENT@1720..1725 "iTest"
                    WHITESPACE@1725..1726 " "
                    AMPERSAND_EQ@1726..1728 "&="
                    WHITESPACE@1728..1729 " "
                    LITERAL@1729..1730
                        NUMBER@1729..1730 "2"
                SEMICOLON@1730..1731 ";"
            WHITESPACE@1731..1733 "\n\t"
            EXPR_STMT@1733..1752
                CALL_EXPR@1733..1751
                    NAME_REF@1733..1739
                        IDENT@1733..1739 "assert"
                    ARG_LIST@1739..1751
                        LPAREN@1739..1740 "("
                        BIN_EXPR@1740..1750
                            NAME_REF@1740..1745
                                IDENT@1740..1745 "iTest"
                            WHITESPACE@1745..1746 " "
                            EQ_2@1746..1748 "=="
                            WHITESPACE@1748..1749 " "
                            LITERAL@1749..1750
                                NUMBER@1749..1750 "2"
                        RPAREN@1750..1751 ")"
                SEMICOLON@1751..1752 ";"
            WHITESPACE@1752..1756 "\n\t\n\t"
            EXPR_STMT@1756..1778
                BIN_EXPR@1756..1777
                    NAME_REF@1756..1761
                        IDENT@1756..1761 "aTest"
                    WHITESPACE@1761..1762 " "
                    EQ@1762..1763 "="
                    WHITESPACE@1763..1764 " "
                    CALL_EXPR@1764..1777
                        NAME_REF@1764..1771
                            IDENT@1764..1771 "ar_List"
                        ARG_LIST@1771..1777
                            LPAREN@1771..1772 "("
                            LITERAL@1772..1773
                                NUMBER@1772..1773 "1"
                            COMMA@1773..1774 ","
                            WHITESPACE@1774..1775 " "
                            LITERAL@1775..1776
                                NUMBER@1775..1776 "4"
                            RPAREN@1776..1777 ")"
                SEMICOLON@1777..1778 ";"
            WHITESPACE@1778..1780 "\n\t"
            EXPR_STMT@1780..1794
                BIN_EXPR@1780..1793
                    SUBSCRIPT_EXPR@1780..1788
                        NAME_REF@1780..1785
                            IDENT@1780..1785 "aTest"
                        LSQ_BRACK@1785..1786 "["
                        LITERAL@1786..1787
                            NUMBER@1786..1787 "1"
                        RSQ_BRACK@1787..1788 "]"
                    WHITESPACE@1788..1789 " "
                    AMPERSAND_EQ@1789..1791 "&="
                    WHITESPACE@1791..1792 " "
                    LITERAL@1792..1793
                        NUMBER@1792..1793 "2"
                SEMICOLON@1793..1794 ";"
            WHITESPACE@1794..1796 "\n\t"
            EXPR_STMT@1796..1829
                CALL_EXPR@1796..1828
                    NAME_REF@1796..1802
                        IDENT@1796..1802 "assert"
                    ARG_LIST@1802..1828
                        LPAREN@1802..1803 "("
                        BIN_EXPR@1803..1827
                            NAME_REF@1803..1808
                                IDENT@1803..1808 "aTest"
                            WHITESPACE@1808..1809 " "
                            EQ_2@1809..1811 "=="
                            WHITESPACE@1811..1812 " "
                            PAREN_EXPR@1812..1827
                                LPAREN@1812..1813 "("
                                CALL_EXPR@1813..1826
                                    NAME_REF@1813..1820
                                        IDENT@1813..1820 "ar_List"
                                    ARG_LIST@1820..1826
                                        LPAREN@1820..1821 "("
                                        LITERAL@1821..1822
                                            NUMBER@1821..1822 "1"
                                        COMMA@1822..1823 ","
                                        WHITESPACE@1823..1824 " "
                                        LITERAL@1824..1825
                                            NUMBER@1824..1825 "0"
                                        RPAREN@1825..1826 ")"
                                RPAREN@1826..1827 ")"
                        RPAREN@1827..1828 ")"
                SEMICOLON@1828..1829 ";"
            WHITESPACE@1829..1832 "\n\t\n"
            COMMENT@1832..1848 "// \"|=\" operator"
            WHITESPACE@1848..1850 "\n\t"
            EXPR_STMT@1850..1860
                BIN_EXPR@1850..1859
                    NAME_REF@1850..1855
                        IDENT@1850..1855 "iTest"
                    WHITESPACE@1855..1856 " "
                    EQ@1856..1857 "="
                    WHITESPACE@1857..1858 " "
                    LITERAL@1858..1859
                        NUMBER@1858..1859 "2"
                SEMICOLON@1859..1860 ";"
            WHITESPACE@1860..1862 "\n\t"
            EXPR_STMT@1862..1873
                BIN_EXPR@1862..1872
                    NAME_REF@1862..1867
                        IDENT@1862..1867 "iTest"
                    WHITESPACE@1867..1868 " "
                    VBAR_EQ@1868..1870 "|="
                    WHITESPACE@1870..1871 " "
                    LITERAL@1871..1872
                        NUMBER@1871..1872 "4"
                SEMICOLON@1872..1873 ";"
            WHITESPACE@1873..1875 "\n\t"
            EXPR_STMT@1875..1894
                CALL_EXPR@1875..1893
                    NAME_REF@1875..1881
                        IDENT@1875..1881 "assert"
                    ARG_LIST@1881..1893
                        LPAREN@1881..1882 "("
                        BIN_EXPR@1882..1892
                            NAME_REF@1882..1887
                                IDENT@1882..1887 "iTest"
                            WHITESPACE@1887..1888 " "
                            EQ_2@1888..1890 "=="
                            WHITESPACE@1890..1891 " "
                            LITERAL@1891..1892
                                NUMBER@1891..1892 "6"
                        RPAREN@1892..1893 ")"
                SEMICOLON@1893..1894 ";"
            WHITESPACE@1894..1898 "\n\t\n\t"
            EXPR_STMT@1898..1920
                BIN_EXPR@1898..1919
                    NAME_REF@1898..1903
                        IDENT@1898..1903 "aTest"
                    WHITESPACE@1903..1904 " "
                    EQ@1904..1905 "="
                    WHITESPACE@1905..1906 " "
                    CALL_EXPR@1906..1919
                        NAME_REF@1906..1913
                            IDENT@1906..1913 "ar_List"
                        ARG_LIST@1913..1919
                            LPAREN@1913..1914 "("
                            LITERAL@1914..1915
                                NUMBER@1914..1915 "1"
                            COMMA@1915..1916 ","
                            WHITESPACE@1916..1917 " "
                            LITERAL@1917..1918
                                NUMBER@1917..1918 "2"
                            RPAREN@1918..1919 ")"
                SEMICOLON@1919..1920 ";"
            WHITESPACE@1920..1922 "\n\t"
            EXPR_STMT@1922..1936
                BIN_EXPR@1922..1935
                    SUBSCRIPT_EXPR@1922..1930
                        NAME_REF@1922..1927
                            IDENT@1922..1927 "aTest"
                        LSQ_BRACK@1927..1928 "["
                        LITERAL@1928..1929
                            NUMBER@1928..1929 "1"
                        RSQ_BRACK@1929..1930 "]"
                    WHITESPACE@1930..1931 " "
                    VBAR_EQ@1931..1933 "|="
                    WHITESPACE@1933..1934 " "
                    LITERAL@1934..1935
                        NUMBER@1934..1935 "4"
                SEMICOLON@1935..1936 ";"
            WHITESPACE@1936..1938 "\n\t"
            EXPR_STMT@1938..1971
                CALL_EXPR@1938..1970
                    NAME_REF@1938..1944
                        IDENT@1938..1944 "assert"
                    ARG_LIST@1944..1970
                        LPAREN@1944..1945 "("
                        BIN_EXPR@1945..1969
                            NAME_REF@1945..1950
                                IDENT@1945..1950 "aTest"
                            WHITESPACE@1950..1951 " "
                            EQ_2@1951..1953 "=="
                            WHITESPACE@1953..1954 " "
                            PAREN_EXPR@1954..1969
                                LPAREN@1954..1955 "("
                                CALL_EXPR@1955..1968
                                    NAME_REF@1955..1962
                                        IDENT@1955..1962 "ar_List"
                                    ARG_LIST@1962..1968
                                        LPAREN@1962..1963 "("
                                        LITERAL@1963..1964
                                            NUMBER@1963..1964 "1"
                                        COMMA@1964..1965 ","
                                        WHITESPACE@1965..1966 " "
                                        LITERAL@1966..1967
                                            NUMBER@1966..1967 "6"
                                        RPAREN@1967..1968 ")"
                                RPAREN@1968..1969 ")"
                        RPAREN@1969..1970 ")"
                SEMICOLON@1970..1971 ";"
            WHITESPACE@1971..1974 "\n\t\n"
            COMMENT@1974..1996 "//== Logical operators"
            WHITESPACE@1996..1998 "\n\n"
            COMMENT@1998..2014 "// \"&&\" operator"
            WHITESPACE@2014..2016 "\n\t"
            EXPR_STMT@2016..2037
                CALL_EXPR@2016..2036
                    NAME_REF@2016..2022
                        IDENT@2016..2022 "assert"
                    ARG_LIST@2022..2036
                        LPAREN@2022..2023 "("
                        BIN_EXPR@2023..2035
                            LITERAL@2023..2027
                                BOOL@2023..2027 "true"
                            WHITESPACE@2027..2028 " "
                            AMPERSAND_2@2028..2030 "&&"
                            WHITESPACE@2030..2031 " "
                            LITERAL@2031..2035
                                BOOL@2031..2035 "true"
                        RPAREN@2035..2036 ")"
                SEMICOLON@2036..2037 ";"
            WHITESPACE@2037..2039 "\n\n"
            COMMENT@2039..2055 "// \"||\" operator"
            WHITESPACE@2055..2057 "\n\t"
            EXPR_STMT@2057..2079
                CALL_EXPR@2057..2078
                    NAME_REF@2057..2063
                        IDENT@2057..2063 "assert"
                    ARG_LIST@2063..2078
                        LPAREN@2063..2064 "("
                        BIN_EXPR@2064..2077
                            LITERAL@2064..2069
                                BOOL@2064..2069 "false"
                            WHITESPACE@2069..2070 " "
                            VBAR_2@2070..2072 "||"
                            WHITESPACE@2072..2073 " "
                            LITERAL@2073..2077
                                BOOL@2073..2077 "true"
                        RPAREN@2077..2078 ")"
                SEMICOLON@2078..2079 ";"
            WHITESPACE@2079..2082 "\n\t\n"
            COMMENT@2082..2101 "//== Slice and pair"
            WHITESPACE@2101..2103 "\n\t"
            COMMENT@2103..2111 "// Slice"
            WHITESPACE@2111..2113 "\n\t"
            EXPR_STMT@2113..2141
                BIN_EXPR@2113..2140
                    NAME_REF@2113..2118
                        IDENT@2113..2118 "sTest"
                    WHITESPACE@2118..2119 " "
                    EQ@2119..2120 "="
                    WHITESPACE@2120..2121 " "
                    STR_EXPR@2121..2140
                        QUOTE_DOUBLE@2121..2122 "\""
                        STR_SHARD_LITERAL@2122..2139
                            STR_SHARD@2122..2139 "This is my string"
                        QUOTE_DOUBLE@2139..2140 "\""
                SEMICOLON@2140..2141 ";"
            WHITESPACE@2141..2143 "\n\t"
            VAR_DECL_STMT@2143..2176
                VAR_DECL@2143..2175
                    STRING_TY@2143..2149 "string"
                    WHITESPACE@2149..2150 " "
                    NAME@2150..2162
                        IDENT@2150..2162 "my_substring"
                    WHITESPACE@2162..2163 " "
                    EQ@2163..2164 "="
                    WHITESPACE@2164..2165 " "
                    SUBSCRIPT_EXPR@2165..2175
                        NAME_REF@2165..2170
                            IDENT@2165..2170 "sTest"
                        LSQ_BRACK@2170..2171 "["
                        BIN_EXPR@2171..2174
                            LITERAL@2171..2172
                                NUMBER@2171..2172 "0"
                            COLON@2172..2173 ":"
                            LITERAL@2173..2174
                                NUMBER@2173..2174 "3"
                        RSQ_BRACK@2174..2175 "]"
                SEMICOLON@2175..2176 ";"
            WHITESPACE@2176..2177 " "
            COMMENT@2177..2249 "// returns \"This\" the easy way (the first four characters in the string)"
            WHITESPACE@2249..2251 "\n\t"
            EXPR_STMT@2251..2282
                CALL_EXPR@2251..2281
                    NAME_REF@2251..2257
                        IDENT@2251..2257 "assert"
                    ARG_LIST@2257..2281
                        LPAREN@2257..2258 "("
                        BIN_EXPR@2258..2280
                            NAME_REF@2258..2270
                                IDENT@2258..2270 "my_substring"
                            WHITESPACE@2270..2271 " "
                            EQ_2@2271..2273 "=="
                            WHITESPACE@2273..2274 " "
                            STR_EXPR@2274..2280
                                QUOTE_DOUBLE@2274..2275 "\""
                                STR_SHARD_LITERAL@2275..2279
                                    STR_SHARD@2275..2279 "This"
                                QUOTE_DOUBLE@2279..2280 "\""
                        RPAREN@2280..2281 ")"
                SEMICOLON@2281..2282 ";"
            WHITESPACE@2282..2285 "\n\n\t"
            COMMENT@2285..2292 "// Pair"
            WHITESPACE@2292..2294 "\n\t"
            EXPR_STMT@2294..2321
                BIN_EXPR@2294..2320
                    NAME_REF@2294..2299
                        IDENT@2294..2299 "aTest"
                    WHITESPACE@2299..2300 " "
                    EQ@2300..2301 "="
                    WHITESPACE@2301..2302 " "
                    CALL_EXPR@2302..2320
                        NAME_REF@2302..2308
                            IDENT@2302..2308 "ar_Map"
                        ARG_LIST@2308..2320
                            LPAREN@2308..2309 "("
                            BIN_EXPR@2309..2313
                                LITERAL@2309..2310
                                    NUMBER@2309..2310 "1"
                                COLON_2@2310..2312 "::"
                                LITERAL@2312..2313
                                    NUMBER@2312..2313 "2"
                            COMMA@2313..2314 ","
                            WHITESPACE@2314..2315 " "
                            BIN_EXPR@2315..2319
                                LITERAL@2315..2316
                                    NUMBER@2315..2316 "2"
                                COLON_2@2316..2318 "::"
                                LITERAL@2318..2319
                                    NUMBER@2318..2319 "3"
                            RPAREN@2319..2320 ")"
                SEMICOLON@2320..2321 ";"
            WHITESPACE@2321..2323 "\n\t"
            EXPR_STMT@2323..2361
                CALL_EXPR@2323..2360
                    NAME_REF@2323..2329
                        IDENT@2323..2329 "assert"
                    ARG_LIST@2329..2360
                        LPAREN@2329..2330 "("
                        BIN_EXPR@2330..2359
                            NAME_REF@2330..2335
                                IDENT@2330..2335 "aTest"
                            WHITESPACE@2335..2336 " "
                            EQ_2@2336..2338 "=="
                            WHITESPACE@2338..2339 " "
                            PAREN_EXPR@2339..2359
                                LPAREN@2339..2340 "("
                                CALL_EXPR@2340..2358
                                    NAME_REF@2340..2346
                                        IDENT@2340..2346 "ar_Map"
                                    ARG_LIST@2346..2358
                                        LPAREN@2346..2347 "("
                                        BIN_EXPR@2347..2351
                                            LITERAL@2347..2348
                                                NUMBER@2347..2348 "1"
                                            COLON_2@2348..2350 "::"
                                            LITERAL@2350..2351
                                                NUMBER@2350..2351 "2"
                                        COMMA@2351..2352 ","
                                        WHITESPACE@2352..2353 " "
                                        BIN_EXPR@2353..2357
                                            LITERAL@2353..2354
                                                NUMBER@2353..2354 "2"
                                            COLON_2@2354..2356 "::"
                                            LITERAL@2356..2357
                                                NUMBER@2356..2357 "3"
                                        RPAREN@2357..2358 ")"
                                RPAREN@2358..2359 ")"
                        RPAREN@2359..2360 ")"
                SEMICOLON@2360..2361 ";"
            WHITESPACE@2361..2364 "\n\t\n"
            COMMENT@2364..2386 "//== Other Comparators"
            WHITESPACE@2386..2388 "\n\t"
            EXPR_STMT@2388..2400
                BIN_EXPR@2388..2399
                    NAME_REF@2388..2393
                        IDENT@2388..2393 "fTest"
                    WHITESPACE@2393..2394 " "
                    EQ@2394..2395 "="
                    WHITESPACE@2395..2396 " "
                    LITERAL@2396..2399
                        NUMBER@2396..2399 "2.5"
                SEMICOLON@2399..2400 ";"
            WHITESPACE@2400..2402 "\n\t"
            EXPR_STMT@2402..2420
                CALL_EXPR@2402..2419
                    NAME_REF@2402..2408
                        IDENT@2402..2408 "assert"
                    ARG_LIST@2408..2419
                        LPAREN@2408..2409 "("
                        BIN_EXPR@2409..2418
                            NAME_REF@2409..2414
                                IDENT@2409..2414 "fTest"
                            WHITESPACE@2414..2415 " "
                            GT@2415..2416 ">"
                            WHITESPACE@2416..2417 " "
                            LITERAL@2417..2418
                                NUMBER@2417..2418 "2"
                        RPAREN@2418..2419 ")"
                SEMICOLON@2419..2420 ";"
            WHITESPACE@2420..2422 "\n\t"
            EXPR_STMT@2422..2442
                CALL_EXPR@2422..2441
                    NAME_REF@2422..2428
                        IDENT@2422..2428 "assert"
                    ARG_LIST@2428..2441
                        LPAREN@2428..2429 "("
                        BIN_EXPR@2429..2440
                            NAME_REF@2429..2434
                                IDENT@2429..2434 "fTest"
                            WHITESPACE@2434..2435 " "
                            LT@2435..2436 "<"
                            WHITESPACE@2436..2437 " "
                            LITERAL@2437..2440
                                NUMBER@2437..2440 "2.6"
                        RPAREN@2440..2441 ")"
                SEMICOLON@2441..2442 ";"
            WHITESPACE@2442..2444 "\n\t"
            EXPR_STMT@2444..2465
                CALL_EXPR@2444..2464
                    NAME_REF@2444..2450
                        IDENT@2444..2450 "assert"
                    ARG_LIST@2450..2464
                        LPAREN@2450..2451 "("
                        BIN_EXPR@2451..2463
                            NAME_REF@2451..2456
                                IDENT@2451..2456 "fTest"
                            WHITESPACE@2456..2457 " "
                            GT_EQ@2457..2459 ">="
                            WHITESPACE@2459..2460 " "
                            LITERAL@2460..2463
                                NUMBER@2460..2463 "2.5"
                        RPAREN@2463..2464 ")"
                SEMICOLON@2464..2465 ";"
            WHITESPACE@2465..2467 "\n\t"
            EXPR_STMT@2467..2488
                CALL_EXPR@2467..2487
                    NAME_REF@2467..2473
                        IDENT@2467..2473 "assert"
                    ARG_LIST@2473..2487
                        LPAREN@2473..2474 "("
                        BIN_EXPR@2474..2486
                            NAME_REF@2474..2479
                                IDENT@2474..2479 "fTest"
                            WHITESPACE@2479..2480 " "
                            LT_EQ@2480..2482 "<="
                            WHITESPACE@2482..2483 " "
                            LITERAL@2483..2486
                                NUMBER@2483..2486 "2.5"
                        RPAREN@2486..2487 ")"
                SEMICOLON@2487..2488 ";"
            WHITESPACE@2488..2491 "\n\t\n"
            COMMENT@2491..2511 "//== Other operators"
            WHITESPACE@2511..2514 "\n\t\n"
            COMMENT@2514..2529 "// \"+\" operator"
            WHITESPACE@2529..2531 "\n\t"
            EXPR_STMT@2531..2541
                BIN_EXPR@2531..2540
                    NAME_REF@2531..2536
                        IDENT@2531..2536 "iTest"
                    WHITESPACE@2536..2537 " "
                    EQ@2537..2538 "="
                    WHITESPACE@2538..2539 " "
                    LITERAL@2539..2540
                        NUMBER@2539..2540 "0"
                SEMICOLON@2540..2541 ";"
            WHITESPACE@2541..2543 "\n\t"
            EXPR_STMT@2543..2563
                BIN_EXPR@2543..2562
                    NAME_REF@2543..2548
                        IDENT@2543..2548 "iTest"
                    WHITESPACE@2548..2549 " "
                    EQ@2549..2550 "="
                    WHITESPACE@2550..2551 " "
                    BIN_EXPR@2551..2562
                        NAME_REF@2551..2556
                            IDENT@2551..2556 "iTest"
                        WHITESPACE@2556..2557 " "
                        PLUS@2557..2558 "+"
                        WHITESPACE@2558..2559 " "
                        LITERAL@2559..2562
                            NUMBER@2559..2562 "2.5"
                SEMICOLON@2562..2563 ";"
            WHITESPACE@2563..2565 "\n\t"
            EXPR_STMT@2565..2584
                CALL_EXPR@2565..2583
                    NAME_REF@2565..2571
                        IDENT@2565..2571 "assert"
                    ARG_LIST@2571..2583
                        LPAREN@2571..2572 "("
                        BIN_EXPR@2572..2582
                            NAME_REF@2572..2577
                                IDENT@2572..2577 "iTest"
                            WHITESPACE@2577..2578 " "
                            EQ_2@2578..2580 "=="
                            WHITESPACE@2580..2581 " "
                            LITERAL@2581..2582
                                NUMBER@2581..2582 "2"
                        RPAREN@2582..2583 ")"
                SEMICOLON@2583..2584 ";"
            WHITESPACE@2584..2588 "\n\t\n\t"
            EXPR_STMT@2588..2610
                BIN_EXPR@2588..2609
                    NAME_REF@2588..2593
                        IDENT@2588..2593 "aTest"
                    WHITESPACE@2593..2594 " "
                    EQ@2594..2595 "="
                    WHITESPACE@2595..2596 " "
                    CALL_EXPR@2596..2609
                        NAME_REF@2596..2603
                            IDENT@2596..2603 "ar_List"
                        ARG_LIST@2603..2609
                            LPAREN@2603..2604 "("
                            LITERAL@2604..2605
                                NUMBER@2604..2605 "1"
                            COMMA@2605..2606 ","
                            WHITESPACE@2606..2607 " "
                            LITERAL@2607..2608
                                NUMBER@2607..2608 "2"
                            RPAREN@2608..2609 ")"
                SEMICOLON@2609..2610 ";"
            WHITESPACE@2610..2612 "\n\t"
            EXPR_STMT@2612..2636
                BIN_EXPR@2612..2635
                    SUBSCRIPT_EXPR@2612..2620
                        NAME_REF@2612..2617
                            IDENT@2612..2617 "aTest"
                        LSQ_BRACK@2617..2618 "["
                        LITERAL@2618..2619
                            NUMBER@2618..2619 "1"
                        RSQ_BRACK@2619..2620 "]"
                    WHITESPACE@2620..2621 " "
                    EQ@2621..2622 "="
                    WHITESPACE@2622..2623 " "
                    BIN_EXPR@2623..2635
                        SUBSCRIPT_EXPR@2623..2631
                            NAME_REF@2623..2628
                                IDENT@2623..2628 "aTest"
                            LSQ_BRACK@2628..2629 "["
                            LITERAL@2629..2630
                                NUMBER@2629..2630 "1"
                            RSQ_BRACK@2630..2631 "]"
                        WHITESPACE@2631..2632 " "
                        PLUS@2632..2633 "+"
                        WHITESPACE@2633..2634 " "
                        LITERAL@2634..2635
                            NUMBER@2634..2635 "4"
                SEMICOLON@2635..2636 ";"
            WHITESPACE@2636..2638 "\n\t"
            EXPR_STMT@2638..2671
                CALL_EXPR@2638..2670
                    NAME_REF@2638..2644
                        IDENT@2638..2644 "assert"
                    ARG_LIST@2644..2670
                        LPAREN@2644..2645 "("
                        BIN_EXPR@2645..2669
                            NAME_REF@2645..2650
                                IDENT@2645..2650 "aTest"
                            WHITESPACE@2650..2651 " "
                            EQ_2@2651..2653 "=="
                            WHITESPACE@2653..2654 " "
                            PAREN_EXPR@2654..2669
                                LPAREN@2654..2655 "("
                                CALL_EXPR@2655..2668
                                    NAME_REF@2655..2662
                                        IDENT@2655..2662 "ar_List"
                                    ARG_LIST@2662..2668
                                        LPAREN@2662..2663 "("
                                        LITERAL@2663..2664
                                            NUMBER@2663..2664 "1"
                                        COMMA@2664..2665 ","
                                        WHITESPACE@2665..2666 " "
                                        LITERAL@2666..2667
                                            NUMBER@2666..2667 "6"
                                        RPAREN@2667..2668 ")"
                                RPAREN@2668..2669 ")"
                        RPAREN@2669..2670 ")"
                SEMICOLON@2670..2671 ";"
            WHITESPACE@2671..2675 "\n\t\n\t"
            EXPR_STMT@2675..2690
                BIN_EXPR@2675..2689
                    NAME_REF@2675..2680
                        IDENT@2675..2680 "sTest"
                    WHITESPACE@2680..2681 " "
                    EQ@2681..2682 "="
                    WHITESPACE@2682..2683 " "
                    STR_EXPR@2683..2689
                        QUOTE_DOUBLE@2683..2684 "\""
                        STR_SHARD_LITERAL@2684..2688
                            STR_SHARD@2684..2688 "test"
                        QUOTE_DOUBLE@2688..2689 "\""
                SEMICOLON@2689..2690 ";"
            WHITESPACE@2690..2692 "\n\t"
            EXPR_STMT@2692..2712
                BIN_EXPR@2692..2711
                    NAME_REF@2692..2697
                        IDENT@2692..2697 "sTest"
                    WHITESPACE@2697..2698 " "
                    EQ@2698..2699 "="
                    WHITESPACE@2699..2700 " "
                    BIN_EXPR@2700..2711
                        NAME_REF@2700..2705
                            IDENT@2700..2705 "sTest"
                        WHITESPACE@2705..2706 " "
                        PLUS@2706..2707 "+"
                        WHITESPACE@2707..2708 " "
                        STR_EXPR@2708..2711
                            QUOTE_DOUBLE@2708..2709 "\""
                            STR_SHARD_LITERAL@2709..2710
                                STR_SHARD@2709..2710 "2"
                            QUOTE_DOUBLE@2710..2711 "\""
                SEMICOLON@2711..2712 ";"
            WHITESPACE@2712..2714 "\n\t"
            EXPR_STMT@2714..2739
                CALL_EXPR@2714..2738
                    NAME_REF@2714..2720
                        IDENT@2714..2720 "assert"
                    ARG_LIST@2720..2738
                        LPAREN@2720..2721 "("
                        BIN_EXPR@2721..2737
                            NAME_REF@2721..2726
                                IDENT@2721..2726 "sTest"
                            WHITESPACE@2726..2727 " "
                            EQ_2@2727..2729 "=="
                            WHITESPACE@2729..2730 " "
                            STR_EXPR@2730..2737
                                QUOTE_DOUBLE@2730..2731 "\""
                                STR_SHARD_LITERAL@2731..2736
                                    STR_SHARD@2731..2736 "test2"
                                QUOTE_DOUBLE@2736..2737 "\""
                        RPAREN@2737..2738 ")"
                SEMICOLON@2738..2739 ";"
            WHITESPACE@2739..2742 "\n\t\n"
            COMMENT@2742..2757 "// \"-\" operator"
            WHITESPACE@2757..2759 "\n\t"
            EXPR_STMT@2759..2769
                BIN_EXPR@2759..2768
                    NAME_REF@2759..2764
                        IDENT@2759..2764 "iTest"
                    WHITESPACE@2764..2765 " "
                    EQ@2765..2766 "="
                    WHITESPACE@2766..2767 " "
                    LITERAL@2767..2768
                        NUMBER@2767..2768 "0"
                SEMICOLON@2768..2769 ";"
            WHITESPACE@2769..2771 "\n\t"
            EXPR_STMT@2771..2789
                BIN_EXPR@2771..2788
                    NAME_REF@2771..2776
                        IDENT@2771..2776 "iTest"
                    WHITESPACE@2776..2777 " "
                    EQ@2777..2778 "="
                    WHITESPACE@2778..2779 " "
                    BIN_EXPR@2779..2788
                        NAME_REF@2779..2784
                            IDENT@2779..2784 "iTest"
                        WHITESPACE@2784..2785 " "
                        MINUS@2785..2786 "-"
                        WHITESPACE@2786..2787 " "
                        LITERAL@2787..2788
                            NUMBER@2787..2788 "2"
                SEMICOLON@2788..2789 ";"
            WHITESPACE@2789..2791 "\n\t"
            EXPR_STMT@2791..2811
                CALL_EXPR@2791..2810
                    NAME_REF@2791..2797
                        IDENT@2791..2797 "assert"
                    ARG_LIST@2797..2810
                        LPAREN@2797..2798 "("
                        BIN_EXPR@2798..2809
                            NAME_REF@2798..2803
                                IDENT@2798..2803 "iTest"
                            WHITESPACE@2803..2804 " "
                            EQ_2@2804..2806 "=="
                            WHITESPACE@2806..2807 " "
                            UNARY_EXPR@2807..2809
                                MINUS@2807..2808 "-"
                                LITERAL@2808..2809
                                    NUMBER@2808..2809 "2"
                        RPAREN@2809..2810 ")"
                SEMICOLON@2810..2811 ";"
            WHITESPACE@2811..2815 "\n\t\n\t"
            EXPR_STMT@2815..2837
                BIN_EXPR@2815..2836
                    NAME_REF@2815..2820
                        IDENT@2815..2820 "aTest"
                    WHITESPACE@2820..2821 " "
                    EQ@2821..2822 "="
                    WHITESPACE@2822..2823 " "
                    CALL_EXPR@2823..2836
                        NAME_REF@2823..2830
                            IDENT@2823..2830 "ar_List"
                        ARG_LIST@2830..2836
                            LPAREN@2830..2831 "("
                            LITERAL@2831..2832
                                NUMBER@2831..2832 "1"
                            COMMA@2832..2833 ","
                            WHITESPACE@2833..2834 " "
                            LITERAL@2834..2835
                                NUMBER@2834..2835 "2"
                            RPAREN@2835..2836 ")"
                SEMICOLON@2836..2837 ";"
            WHITESPACE@2837..2839 "\n\t"
            EXPR_STMT@2839..2863
                BIN_EXPR@2839..2862
                    SUBSCRIPT_EXPR@2839..2847
                        NAME_REF@2839..2844
                            IDENT@2839..2844 "aTest"
                        LSQ_BRACK@2844..2845 "["
                        LITERAL@2845..2846
                            NUMBER@2845..2846 "1"
                        RSQ_BRACK@2846..2847 "]"
                    WHITESPACE@2847..2848 " "
                    EQ@2848..2849 "="
                    WHITESPACE@2849..2850 " "
                    BIN_EXPR@2850..2862
                        SUBSCRIPT_EXPR@2850..2858
                            NAME_REF@2850..2855
                                IDENT@2850..2855 "aTest"
                            LSQ_BRACK@2855..2856 "["
                            LITERAL@2856..2857
                                NUMBER@2856..2857 "1"
                            RSQ_BRACK@2857..2858 "]"
                        WHITESPACE@2858..2859 " "
                        MINUS@2859..2860 "-"
                        WHITESPACE@2860..2861 " "
                        LITERAL@2861..2862
                            NUMBER@2861..2862 "4"
                SEMICOLON@2862..2863 ";"
            WHITESPACE@2863..2865 "\n\t"
            EXPR_STMT@2865..2899
                CALL_EXPR@2865..2898
                    NAME_REF@2865..2871
                        IDENT@2865..2871 "assert"
                    ARG_LIST@2871..2898
                        LPAREN@2871..2872 "("
                        BIN_EXPR@2872..2897
                            NAME_REF@2872..2877
                                IDENT@2872..2877 "aTest"
                            WHITESPACE@2877..2878 " "
                            EQ_2@2878..2880 "=="
                            WHITESPACE@2880..2881 " "
                            PAREN_EXPR@2881..2897
                                LPAREN@2881..2882 "("
                                CALL_EXPR@2882..2896
                                    NAME_REF@2882..2889
                                        IDENT@2882..2889 "ar_List"
                                    ARG_LIST@2889..2896
                                        LPAREN@2889..2890 "("
                                        LITERAL@2890..2891
                                            NUMBER@2890..2891 "1"
                                        COMMA@2891..2892 ","
                                        WHITESPACE@2892..2893 " "
                                        UNARY_EXPR@2893..2895
                                            MINUS@2893..2894 "-"
                                            LITERAL@2894..2895
                                                NUMBER@2894..2895 "2"
                                        RPAREN@2895..2896 ")"
                                RPAREN@2896..2897 ")"
                        RPAREN@2897..2898 ")"
                SEMICOLON@2898..2899 ";"
            WHITESPACE@2899..2902 "\n\t\n"
            COMMENT@2902..2917 "// \"*\" operator"
            WHITESPACE@2917..2919 "\n\t"
            EXPR_STMT@2919..2929
                BIN_EXPR@2919..2928
                    NAME_REF@2919..2924
                        IDENT@2919..2924 "iTest"
                    WHITESPACE@2924..2925 " "
                    EQ@2925..2926 "="
                    WHITESPACE@2926..2927 " "
                    LITERAL@2927..2928
                        NUMBER@2927..2928 "1"
                SEMICOLON@2928..2929 ";"
            WHITESPACE@2929..2931 "\n\t"
            EXPR_STMT@2931..2949
                BIN_EXPR@2931..2948
                    NAME_REF@2931..2936
                        IDENT@2931..2936 "iTest"
                    WHITESPACE@2936..2937 " "
                    EQ@2937..2938 "="
                    WHITESPACE@2938..2939 " "
                    BIN_EXPR@2939..2948
                        NAME_REF@2939..2944
                            IDENT@2939..2944 "iTest"
                        WHITESPACE@2944..2945 " "
                        ASTERISK@2945..2946 "*"
                        WHITESPACE@2946..2947 " "
                        LITERAL@2947..2948
                            NUMBER@2947..2948 "2"
                SEMICOLON@2948..2949 ";"
            WHITESPACE@2949..2951 "\n\t"
            EXPR_STMT@2951..2970
                CALL_EXPR@2951..2969
                    NAME_REF@2951..2957
                        IDENT@2951..2957 "assert"
                    ARG_LIST@2957..2969
                        LPAREN@2957..2958 "("
                        BIN_EXPR@2958..2968
                            NAME_REF@2958..2963
                                IDENT@2958..2963 "iTest"
                            WHITESPACE@2963..2964 " "
                            EQ_2@2964..2966 "=="
                            WHITESPACE@2966..2967 " "
                            LITERAL@2967..2968
                                NUMBER@2967..2968 "2"
                        RPAREN@2968..2969 ")"
                SEMICOLON@2969..2970 ";"
            WHITESPACE@2970..2974 "\n\t\n\t"
            EXPR_STMT@2974..2996
                BIN_EXPR@2974..2995
                    NAME_REF@2974..2979
                        IDENT@2974..2979 "aTest"
                    WHITESPACE@2979..2980 " "
                    EQ@2980..2981 "="
                    WHITESPACE@2981..2982 " "
                    CALL_EXPR@2982..2995
                        NAME_REF@2982..2989
                            IDENT@2982..2989 "ar_List"
                        ARG_LIST@2989..2995
                            LPAREN@2989..2990 "("
                            LITERAL@2990..2991
                                NUMBER@2990..2991 "1"
                            COMMA@2991..2992 ","
                            WHITESPACE@2992..2993 " "
                            LITERAL@2993..2994
                                NUMBER@2993..2994 "2"
                            RPAREN@2994..2995 ")"
                SEMICOLON@2995..2996 ";"
            WHITESPACE@2996..2998 "\n\t"
            EXPR_STMT@2998..3022
                BIN_EXPR@2998..3021
                    SUBSCRIPT_EXPR@2998..3006
                        NAME_REF@2998..3003
                            IDENT@2998..3003 "aTest"
                        LSQ_BRACK@3003..3004 "["
                        LITERAL@3004..3005
                            NUMBER@3004..3005 "1"
                        RSQ_BRACK@3005..3006 "]"
                    WHITESPACE@3006..3007 " "
                    EQ@3007..3008 "="
                    WHITESPACE@3008..3009 " "
                    BIN_EXPR@3009..3021
                        SUBSCRIPT_EXPR@3009..3017
                            NAME_REF@3009..3014
                                IDENT@3009..3014 "aTest"
                            LSQ_BRACK@3014..3015 "["
                            LITERAL@3015..3016
                                NUMBER@3015..3016 "1"
                            RSQ_BRACK@3016..3017 "]"
                        WHITESPACE@3017..3018 " "
                        ASTERISK@3018..3019 "*"
                        WHITESPACE@3019..3020 " "
                        LITERAL@3020..3021
                            NUMBER@3020..3021 "4"
                SEMICOLON@3021..3022 ";"
            WHITESPACE@3022..3024 "\n\t"
            EXPR_STMT@3024..3057
                CALL_EXPR@3024..3056
                    NAME_REF@3024..3030
                        IDENT@3024..3030 "assert"
                    ARG_LIST@3030..3056
                        LPAREN@3030..3031 "("
                        BIN_EXPR@3031..3055
                            NAME_REF@3031..3036
                                IDENT@3031..3036 "aTest"
                            WHITESPACE@3036..3037 " "
                            EQ_2@3037..3039 "=="
                            WHITESPACE@3039..3040 " "
                            PAREN_EXPR@3040..3055
                                LPAREN@3040..3041 "("
                                CALL_EXPR@3041..3054
                                    NAME_REF@3041..3048
                                        IDENT@3041..3048 "ar_List"
                                    ARG_LIST@3048..3054
                                        LPAREN@3048..3049 "("
                                        LITERAL@3049..3050
                                            NUMBER@3049..3050 "1"
                                        COMMA@3050..3051 ","
                                        WHITESPACE@3051..3052 " "
                                        LITERAL@3052..3053
                                            NUMBER@3052..3053 "8"
                                        RPAREN@3053..3054 ")"
                                RPAREN@3054..3055 ")"
                        RPAREN@3055..3056 ")"
                SEMICOLON@3056..3057 ";"
            WHITESPACE@3057..3060 "\n\t\n"
            COMMENT@3060..3075 "// \"/\" operator"
            WHITESPACE@3075..3077 "\n\t"
            EXPR_STMT@3077..3087
                BIN_EXPR@3077..3086
                    NAME_REF@3077..3082
                        IDENT@3077..3082 "iTest"
                    WHITESPACE@3082..3083 " "
                    EQ@3083..3084 "="
                    WHITESPACE@3084..3085 " "
                    LITERAL@3085..3086
                        NUMBER@3085..3086 "1"
                SEMICOLON@3086..3087 ";"
            WHITESPACE@3087..3089 "\n\t"
            EXPR_STMT@3089..3107
                BIN_EXPR@3089..3106
                    NAME_REF@3089..3094
                        IDENT@3089..3094 "iTest"
                    WHITESPACE@3094..3095 " "
                    EQ@3095..3096 "="
                    WHITESPACE@3096..3097 " "
                    BIN_EXPR@3097..3106
                        NAME_REF@3097..3102
                            IDENT@3097..3102 "iTest"
                        WHITESPACE@3102..3103 " "
                        SLASH@3103..3104 "/"
                        WHITESPACE@3104..3105 " "
                        LITERAL@3105..3106
                            NUMBER@3105..3106 "2"
                SEMICOLON@3106..3107 ";"
            WHITESPACE@3107..3109 "\n\t"
            EXPR_STMT@3109..3128
                CALL_EXPR@3109..3127
                    NAME_REF@3109..3115
                        IDENT@3109..3115 "assert"
                    ARG_LIST@3115..3127
                        LPAREN@3115..3116 "("
                        BIN_EXPR@3116..3126
                            NAME_REF@3116..3121
                                IDENT@3116..3121 "iTest"
                            WHITESPACE@3121..3122 " "
                            EQ_2@3122..3124 "=="
                            WHITESPACE@3124..3125 " "
                            LITERAL@3125..3126
                                NUMBER@3125..3126 "0"
                        RPAREN@3126..3127 ")"
                SEMICOLON@3127..3128 ";"
            WHITESPACE@3128..3132 "\n\t\n\t"
            EXPR_STMT@3132..3154
                BIN_EXPR@3132..3153
                    NAME_REF@3132..3137
                        IDENT@3132..3137 "aTest"
                    WHITESPACE@3137..3138 " "
                    EQ@3138..3139 "="
                    WHITESPACE@3139..3140 " "
                    CALL_EXPR@3140..3153
                        NAME_REF@3140..3147
                            IDENT@3140..3147 "ar_List"
                        ARG_LIST@3147..3153
                            LPAREN@3147..3148 "("
                            LITERAL@3148..3149
                                NUMBER@3148..3149 "1"
                            COMMA@3149..3150 ","
                            WHITESPACE@3150..3151 " "
                            LITERAL@3151..3152
                                NUMBER@3151..3152 "2"
                            RPAREN@3152..3153 ")"
                SEMICOLON@3153..3154 ";"
            WHITESPACE@3154..3156 "\n\t"
            EXPR_STMT@3156..3180
                BIN_EXPR@3156..3179
                    SUBSCRIPT_EXPR@3156..3164
                        NAME_REF@3156..3161
                            IDENT@3156..3161 "aTest"
                        LSQ_BRACK@3161..3162 "["
                        LITERAL@3162..3163
                            NUMBER@3162..3163 "1"
                        RSQ_BRACK@3163..3164 "]"
                    WHITESPACE@3164..3165 " "
                    EQ@3165..3166 "="
                    WHITESPACE@3166..3167 " "
                    BIN_EXPR@3167..3179
                        SUBSCRIPT_EXPR@3167..3175
                            NAME_REF@3167..3172
                                IDENT@3167..3172 "aTest"
                            LSQ_BRACK@3172..3173 "["
                            LITERAL@3173..3174
                                NUMBER@3173..3174 "1"
                            RSQ_BRACK@3174..3175 "]"
                        WHITESPACE@3175..3176 " "
                        SLASH@3176..3177 "/"
                        WHITESPACE@3177..3178 " "
                        LITERAL@3178..3179
                            NUMBER@3178..3179 "1"
                SEMICOLON@3179..3180 ";"
            WHITESPACE@3180..3182 "\n\t"
            EXPR_STMT@3182..3215
                CALL_EXPR@3182..3214
                    NAME_REF@3182..3188
                        IDENT@3182..3188 "assert"
                    ARG_LIST@3188..3214
                        LPAREN@3188..3189 "("
                        BIN_EXPR@3189..3213
                            NAME_REF@3189..3194
                                IDENT@3189..3194 "aTest"
                            WHITESPACE@3194..3195 " "
                            EQ_2@3195..3197 "=="
                            WHITESPACE@3197..3198 " "
                            PAREN_EXPR@3198..3213
                                LPAREN@3198..3199 "("
                                CALL_EXPR@3199..3212
                                    NAME_REF@3199..3206
                                        IDENT@3199..3206 "ar_List"
                                    ARG_LIST@3206..3212
                                        LPAREN@3206..3207 "("
                                        LITERAL@3207..3208
                                            NUMBER@3207..3208 "1"
                                        COMMA@3208..3209 ","
                                        WHITESPACE@3209..3210 " "
                                        LITERAL@3210..3211
                                            NUMBER@3210..3211 "2"
                                        RPAREN@3211..3212 ")"
                                RPAREN@3212..3213 ")"
                        RPAREN@3213..3214 ")"
                SEMICOLON@3214..3215 ";"
            WHITESPACE@3215..3218 "\n\t\n"
            COMMENT@3218..3233 "// \"^\" operator"
            WHITESPACE@3233..3235 "\n\t"
            EXPR_STMT@3235..3245
                BIN_EXPR@3235..3244
                    NAME_REF@3235..3240
                        IDENT@3235..3240 "iTest"
                    WHITESPACE@3240..3241 " "
                    EQ@3241..3242 "="
                    WHITESPACE@3242..3243 " "
                    LITERAL@3243..3244
                        NUMBER@3243..3244 "2"
                SEMICOLON@3244..3245 ";"
            WHITESPACE@3245..3247 "\n\t"
            EXPR_STMT@3247..3265
                BIN_EXPR@3247..3264
                    NAME_REF@3247..3252
                        IDENT@3247..3252 "iTest"
                    WHITESPACE@3252..3253 " "
                    EQ@3253..3254 "="
                    WHITESPACE@3254..3255 " "
                    BIN_EXPR@3255..3264
                        NAME_REF@3255..3260
                            IDENT@3255..3260 "iTest"
                        WHITESPACE@3260..3261 " "
                        CIRCUMFLEX@3261..3262 "^"
                        WHITESPACE@3262..3263 " "
                        LITERAL@3263..3264
                            NUMBER@3263..3264 "2"
                SEMICOLON@3264..3265 ";"
            WHITESPACE@3265..3267 "\n\t"
            EXPR_STMT@3267..3286
                CALL_EXPR@3267..3285
                    NAME_REF@3267..3273
                        IDENT@3267..3273 "assert"
                    ARG_LIST@3273..3285
                        LPAREN@3273..3274 "("
                        BIN_EXPR@3274..3284
                            NAME_REF@3274..3279
                                IDENT@3274..3279 "iTest"
                            WHITESPACE@3279..3280 " "
                            EQ_2@3280..3282 "=="
                            WHITESPACE@3282..3283 " "
                            LITERAL@3283..3284
                                NUMBER@3283..3284 "4"
                        RPAREN@3284..3285 ")"
                SEMICOLON@3285..3286 ";"
            WHITESPACE@3286..3290 "\n\t\n\t"
            EXPR_STMT@3290..3312
                BIN_EXPR@3290..3311
                    NAME_REF@3290..3295
                        IDENT@3290..3295 "aTest"
                    WHITESPACE@3295..3296 " "
                    EQ@3296..3297 "="
                    WHITESPACE@3297..3298 " "
                    CALL_EXPR@3298..3311
                        NAME_REF@3298..3305
                            IDENT@3298..3305 "ar_List"
                        ARG_LIST@3305..3311
                            LPAREN@3305..3306 "("
                            LITERAL@3306..3307
                                NUMBER@3306..3307 "1"
                            COMMA@3307..3308 ","
                            WHITESPACE@3308..3309 " "
                            LITERAL@3309..3310
                                NUMBER@3309..3310 "2"
                            RPAREN@3310..3311 ")"
                SEMICOLON@3311..3312 ";"
            WHITESPACE@3312..3314 "\n\t"
            EXPR_STMT@3314..3338
                BIN_EXPR@3314..3337
                    SUBSCRIPT_EXPR@3314..3322
                        NAME_REF@3314..3319
                            IDENT@3314..3319 "aTest"
                        LSQ_BRACK@3319..3320 "["
                        LITERAL@3320..3321
                            NUMBER@3320..3321 "1"
                        RSQ_BRACK@3321..3322 "]"
                    WHITESPACE@3322..3323 " "
                    EQ@3323..3324 "="
                    WHITESPACE@3324..3325 " "
                    BIN_EXPR@3325..3337
                        SUBSCRIPT_EXPR@3325..3333
                            NAME_REF@3325..3330
                                IDENT@3325..3330 "aTest"
                            LSQ_BRACK@3330..3331 "["
                            LITERAL@3331..3332
                                NUMBER@3331..3332 "1"
                            RSQ_BRACK@3332..3333 "]"
                        WHITESPACE@3333..3334 " "
                        CIRCUMFLEX@3334..3335 "^"
                        WHITESPACE@3335..3336 " "
                        LITERAL@3336..3337
                            NUMBER@3336..3337 "2"
                SEMICOLON@3337..3338 ";"
            WHITESPACE@3338..3340 "\n\t"
            EXPR_STMT@3340..3373
                CALL_EXPR@3340..3372
                    NAME_REF@3340..3346
                        IDENT@3340..3346 "assert"
                    ARG_LIST@3346..3372
                        LPAREN@3346..3347 "("
                        BIN_EXPR@3347..3371
                            NAME_REF@3347..3352
                                IDENT@3347..3352 "aTest"
                            WHITESPACE@3352..3353 " "
                            EQ_2@3353..3355 "=="
                            WHITESPACE@3355..3356 " "
                            PAREN_EXPR@3356..3371
                                LPAREN@3356..3357 "("
                                CALL_EXPR@3357..3370
                                    NAME_REF@3357..3364
                                        IDENT@3357..3364 "ar_List"
                                    ARG_LIST@3364..3370
                                        LPAREN@3364..3365 "("
                                        LITERAL@3365..3366
                                            NUMBER@3365..3366 "1"
                                        COMMA@3366..3367 ","
                                        WHITESPACE@3367..3368 " "
                                        LITERAL@3368..3369
                                            NUMBER@3368..3369 "4"
                                        RPAREN@3369..3370 ")"
                                RPAREN@3370..3371 ")"
                        RPAREN@3371..3372 ")"
                SEMICOLON@3372..3373 ";"
            WHITESPACE@3373..3376 "\n\t\n"
            COMMENT@3376..3391 "// \"%\" operator"
            WHITESPACE@3391..3393 "\n\t"
            EXPR_STMT@3393..3403
                BIN_EXPR@3393..3402
                    NAME_REF@3393..3398
                        IDENT@3393..3398 "iTest"
                    WHITESPACE@3398..3399 " "
                    EQ@3399..3400 "="
                    WHITESPACE@3400..3401 " "
                    LITERAL@3401..3402
                        NUMBER@3401..3402 "2"
                SEMICOLON@3402..3403 ";"
            WHITESPACE@3403..3405 "\n\t"
            EXPR_STMT@3405..3423
                BIN_EXPR@3405..3422
                    NAME_REF@3405..3410
                        IDENT@3405..3410 "iTest"
                    WHITESPACE@3410..3411 " "
                    EQ@3411..3412 "="
                    WHITESPACE@3412..3413 " "
                    BIN_EXPR@3413..3422
                        NAME_REF@3413..3418
                            IDENT@3413..3418 "iTest"
                        WHITESPACE@3418..3419 " "
                        PERCENT@3419..3420 "%"
                        WHITESPACE@3420..3421 " "
                        LITERAL@3421..3422
                            NUMBER@3421..3422 "2"
                SEMICOLON@3422..3423 ";"
            WHITESPACE@3423..3425 "\n\t"
            EXPR_STMT@3425..3444
                CALL_EXPR@3425..3443
                    NAME_REF@3425..3431
                        IDENT@3425..3431 "assert"
                    ARG_LIST@3431..3443
                        LPAREN@3431..3432 "("
                        BIN_EXPR@3432..3442
                            NAME_REF@3432..3437
                                IDENT@3432..3437 "iTest"
                            WHITESPACE@3437..3438 " "
                            EQ_2@3438..3440 "=="
                            WHITESPACE@3440..3441 " "
                            LITERAL@3441..3442
                                NUMBER@3441..3442 "0"
                        RPAREN@3442..3443 ")"
                SEMICOLON@3443..3444 ";"
            WHITESPACE@3444..3448 "\n\t\n\t"
            EXPR_STMT@3448..3470
                BIN_EXPR@3448..3469
                    NAME_REF@3448..3453
                        IDENT@3448..3453 "aTest"
                    WHITESPACE@3453..3454 " "
                    EQ@3454..3455 "="
                    WHITESPACE@3455..3456 " "
                    CALL_EXPR@3456..3469
                        NAME_REF@3456..3463
                            IDENT@3456..3463 "ar_List"
                        ARG_LIST@3463..3469
                            LPAREN@3463..3464 "("
                            LITERAL@3464..3465
                                NUMBER@3464..3465 "1"
                            COMMA@3465..3466 ","
                            WHITESPACE@3466..3467 " "
                            LITERAL@3467..3468
                                NUMBER@3467..3468 "2"
                            RPAREN@3468..3469 ")"
                SEMICOLON@3469..3470 ";"
            WHITESPACE@3470..3472 "\n\t"
            EXPR_STMT@3472..3496
                BIN_EXPR@3472..3495
                    SUBSCRIPT_EXPR@3472..3480
                        NAME_REF@3472..3477
                            IDENT@3472..3477 "aTest"
                        LSQ_BRACK@3477..3478 "["
                        LITERAL@3478..3479
                            NUMBER@3478..3479 "1"
                        RSQ_BRACK@3479..3480 "]"
                    WHITESPACE@3480..3481 " "
                    EQ@3481..3482 "="
                    WHITESPACE@3482..3483 " "
                    BIN_EXPR@3483..3495
                        SUBSCRIPT_EXPR@3483..3491
                            NAME_REF@3483..3488
                                IDENT@3483..3488 "aTest"
                            LSQ_BRACK@3488..3489 "["
                            LITERAL@3489..3490
                                NUMBER@3489..3490 "1"
                            RSQ_BRACK@3490..3491 "]"
                        WHITESPACE@3491..3492 " "
                        PERCENT@3492..3493 "%"
                        WHITESPACE@3493..3494 " "
                        LITERAL@3494..3495
                            NUMBER@3494..3495 "2"
                SEMICOLON@3495..3496 ";"
            WHITESPACE@3496..3498 "\n\t"
            EXPR_STMT@3498..3531
                CALL_EXPR@3498..3530
                    NAME_REF@3498..3504
                        IDENT@3498..3504 "assert"
                    ARG_LIST@3504..3530
                        LPAREN@3504..3505 "("
                        BIN_EXPR@3505..3529
                            NAME_REF@3505..3510
                                IDENT@3505..3510 "aTest"
                            WHITESPACE@3510..3511 " "
                            EQ_2@3511..3513 "=="
                            WHITESPACE@3513..3514 " "
                            PAREN_EXPR@3514..3529
                                LPAREN@3514..3515 "("
                                CALL_EXPR@3515..3528
                                    NAME_REF@3515..3522
                                        IDENT@3515..3522 "ar_List"
                                    ARG_LIST@3522..3528
                                        LPAREN@3522..3523 "("
                                        LITERAL@3523..3524
                                            NUMBER@3523..3524 "1"
                                        COMMA@3524..3525 ","
                                        WHITESPACE@3525..3526 " "
                                        LITERAL@3526..3527
                                            NUMBER@3526..3527 "0"
                                        RPAREN@3527..3528 ")"
                                RPAREN@3528..3529 ")"
                        RPAREN@3529..3530 ")"
                SEMICOLON@3530..3531 ";"
            WHITESPACE@3531..3534 "\n\t\n"
            COMMENT@3534..3549 "// \"&\" operator"
            WHITESPACE@3549..3551 "\n\t"
            EXPR_STMT@3551..3561
                BIN_EXPR@3551..3560
                    NAME_REF@3551..3556
                        IDENT@3551..3556 "iTest"
                    WHITESPACE@3556..3557 " "
                    EQ@3557..3558 "="
                    WHITESPACE@3558..3559 " "
                    LITERAL@3559..3560
                        NUMBER@3559..3560 "2"
                SEMICOLON@3560..3561 ";"
            WHITESPACE@3561..3563 "\n\t"
            EXPR_STMT@3563..3581
                BIN_EXPR@3563..3580
                    NAME_REF@3563..3568
                        IDENT@3563..3568 "iTest"
                    WHITESPACE@3568..3569 " "
                    EQ@3569..3570 "="
                    WHITESPACE@3570..3571 " "
                    BIN_EXPR@3571..3580
                        NAME_REF@3571..3576
                            IDENT@3571..3576 "iTest"
                        WHITESPACE@3576..3577 " "
                        AMPERSAND@3577..3578 "&"
                        WHITESPACE@3578..3579 " "
                        LITERAL@3579..3580
                            NUMBER@3579..3580 "2"
                SEMICOLON@3580..3581 ";"
            WHITESPACE@3581..3583 "\n\t"
            EXPR_STMT@3583..3602
                CALL_EXPR@3583..3601
                    NAME_REF@3583..3589
                        IDENT@3583..3589 "assert"
                    ARG_LIST@3589..3601
                        LPAREN@3589..3590 "("
                        BIN_EXPR@3590..3600
                            NAME_REF@3590..3595
                                IDENT@3590..3595 "iTest"
                            WHITESPACE@3595..3596 " "
                            EQ_2@3596..3598 "=="
                            WHITESPACE@3598..3599 " "
                            LITERAL@3599..3600
                                NUMBER@3599..3600 "2"
                        RPAREN@3600..3601 ")"
                SEMICOLON@3601..3602 ";"
            WHITESPACE@3602..3606 "\n\t\n\t"
            EXPR_STMT@3606..3628
                BIN_EXPR@3606..3627
                    NAME_REF@3606..3611
                        IDENT@3606..3611 "aTest"
                    WHITESPACE@3611..3612 " "
                    EQ@3612..3613 "="
                    WHITESPACE@3613..3614 " "
                    CALL_EXPR@3614..3627
                        NAME_REF@3614..3621
                            IDENT@3614..3621 "ar_List"
                        ARG_LIST@3621..3627
                            LPAREN@3621..3622 "("
                            LITERAL@3622..3623
                                NUMBER@3622..3623 "1"
                            COMMA@3623..3624 ","
                            WHITESPACE@3624..3625 " "
                            LITERAL@3625..3626
                                NUMBER@3625..3626 "4"
                            RPAREN@3626..3627 ")"
                SEMICOLON@3627..3628 ";"
            WHITESPACE@3628..3630 "\n\t"
            EXPR_STMT@3630..3654
                BIN_EXPR@3630..3653
                    SUBSCRIPT_EXPR@3630..3638
                        NAME_REF@3630..3635
                            IDENT@3630..3635 "aTest"
                        LSQ_BRACK@3635..3636 "["
                        LITERAL@3636..3637
                            NUMBER@3636..3637 "1"
                        RSQ_BRACK@3637..3638 "]"
                    WHITESPACE@3638..3639 " "
                    EQ@3639..3640 "="
                    WHITESPACE@3640..3641 " "
                    BIN_EXPR@3641..3653
                        SUBSCRIPT_EXPR@3641..3649
                            NAME_REF@3641..3646
                                IDENT@3641..3646 "aTest"
                            LSQ_BRACK@3646..3647 "["
                            LITERAL@3647..3648
                                NUMBER@3647..3648 "1"
                            RSQ_BRACK@3648..3649 "]"
                        WHITESPACE@3649..3650 " "
                        AMPERSAND@3650..3651 "&"
                        WHITESPACE@3651..3652 " "
                        LITERAL@3652..3653
                            NUMBER@3652..3653 "2"
                SEMICOLON@3653..3654 ";"
            WHITESPACE@3654..3656 "\n\t"
            EXPR_STMT@3656..3689
                CALL_EXPR@3656..3688
                    NAME_REF@3656..3662
                        IDENT@3656..3662 "assert"
                    ARG_LIST@3662..3688
                        LPAREN@3662..3663 "("
                        BIN_EXPR@3663..3687
                            NAME_REF@3663..3668
                                IDENT@3663..3668 "aTest"
                            WHITESPACE@3668..3669 " "
                            EQ_2@3669..3671 "=="
                            WHITESPACE@3671..3672 " "
                            PAREN_EXPR@3672..3687
                                LPAREN@3672..3673 "("
                                CALL_EXPR@3673..3686
                                    NAME_REF@3673..3680
                                        IDENT@3673..3680 "ar_List"
                                    ARG_LIST@3680..3686
                                        LPAREN@3680..3681 "("
                                        LITERAL@3681..3682
                                            NUMBER@3681..3682 "1"
                                        COMMA@3682..3683 ","
                                        WHITESPACE@3683..3684 " "
                                        LITERAL@3684..3685
                                            NUMBER@3684..3685 "0"
                                        RPAREN@3685..3686 ")"
                                RPAREN@3686..3687 ")"
                        RPAREN@3687..3688 ")"
                SEMICOLON@3688..3689 ";"
            WHITESPACE@3689..3692 "\n\t\n"
            COMMENT@3692..3707 "// \"|\" operator"
            WHITESPACE@3707..3709 "\n\t"
            EXPR_STMT@3709..3719
                BIN_EXPR@3709..3718
                    NAME_REF@3709..3714
                        IDENT@3709..3714 "iTest"
                    WHITESPACE@3714..3715 " "
                    EQ@3715..3716 "="
                    WHITESPACE@3716..3717 " "
                    LITERAL@3717..3718
                        NUMBER@3717..3718 "2"
                SEMICOLON@3718..3719 ";"
            WHITESPACE@3719..3721 "\n\t"
            EXPR_STMT@3721..3739
                BIN_EXPR@3721..3738
                    NAME_REF@3721..3726
                        IDENT@3721..3726 "iTest"
                    WHITESPACE@3726..3727 " "
                    EQ@3727..3728 "="
                    WHITESPACE@3728..3729 " "
                    BIN_EXPR@3729..3738
                        NAME_REF@3729..3734
                            IDENT@3729..3734 "iTest"
                        WHITESPACE@3734..3735 " "
                        VBAR@3735..3736 "|"
                        WHITESPACE@3736..3737 " "
                        LITERAL@3737..3738
                            NUMBER@3737..3738 "4"
                SEMICOLON@3738..3739 ";"
            WHITESPACE@3739..3741 "\n\t"
            EXPR_STMT@3741..3760
                CALL_EXPR@3741..3759
                    NAME_REF@3741..3747
                        IDENT@3741..3747 "assert"
                    ARG_LIST@3747..3759
                        LPAREN@3747..3748 "("
                        BIN_EXPR@3748..3758
                            NAME_REF@3748..3753
                                IDENT@3748..3753 "iTest"
                            WHITESPACE@3753..3754 " "
                            EQ_2@3754..3756 "=="
                            WHITESPACE@3756..3757 " "
                            LITERAL@3757..3758
                                NUMBER@3757..3758 "6"
                        RPAREN@3758..3759 ")"
                SEMICOLON@3759..3760 ";"
            WHITESPACE@3760..3764 "\n\t\n\t"
            EXPR_STMT@3764..3786
                BIN_EXPR@3764..3785
                    NAME_REF@3764..3769
                        IDENT@3764..3769 "aTest"
                    WHITESPACE@3769..3770 " "
                    EQ@3770..3771 "="
                    WHITESPACE@3771..3772 " "
                    CALL_EXPR@3772..3785
                        NAME_REF@3772..3779
                            IDENT@3772..3779 "ar_List"
                        ARG_LIST@3779..3785
                            LPAREN@3779..3780 "("
                            LITERAL@3780..3781
                                NUMBER@3780..3781 "1"
                            COMMA@3781..3782 ","
                            WHITESPACE@3782..3783 " "
                            LITERAL@3783..3784
                                NUMBER@3783..3784 "2"
                            RPAREN@3784..3785 ")"
                SEMICOLON@3785..3786 ";"
            WHITESPACE@3786..3788 "\n\t"
            EXPR_STMT@3788..3812
                BIN_EXPR@3788..3811
                    SUBSCRIPT_EXPR@3788..3796
                        NAME_REF@3788..3793
                            IDENT@3788..3793 "aTest"
                        LSQ_BRACK@3793..3794 "["
                        LITERAL@3794..3795
                            NUMBER@3794..3795 "1"
                        RSQ_BRACK@3795..3796 "]"
                    WHITESPACE@3796..3797 " "
                    EQ@3797..3798 "="
                    WHITESPACE@3798..3799 " "
                    BIN_EXPR@3799..3811
                        SUBSCRIPT_EXPR@3799..3807
                            NAME_REF@3799..3804
                                IDENT@3799..3804 "aTest"
                            LSQ_BRACK@3804..3805 "["
                            LITERAL@3805..3806
                                NUMBER@3805..3806 "1"
                            RSQ_BRACK@3806..3807 "]"
                        WHITESPACE@3807..3808 " "
                        VBAR@3808..3809 "|"
                        WHITESPACE@3809..3810 " "
                        LITERAL@3810..3811
                            NUMBER@3810..3811 "4"
                SEMICOLON@3811..3812 ";"
            WHITESPACE@3812..3814 "\n\t"
            EXPR_STMT@3814..3847
                CALL_EXPR@3814..3846
                    NAME_REF@3814..3820
                        IDENT@3814..3820 "assert"
                    ARG_LIST@3820..3846
                        LPAREN@3820..3821 "("
                        BIN_EXPR@3821..3845
                            NAME_REF@3821..3826
                                IDENT@3821..3826 "aTest"
                            WHITESPACE@3826..3827 " "
                            EQ_2@3827..3829 "=="
                            WHITESPACE@3829..3830 " "
                            PAREN_EXPR@3830..3845
                                LPAREN@3830..3831 "("
                                CALL_EXPR@3831..3844
                                    NAME_REF@3831..3838
                                        IDENT@3831..3838 "ar_List"
                                    ARG_LIST@3838..3844
                                        LPAREN@3838..3839 "("
                                        LITERAL@3839..3840
                                            NUMBER@3839..3840 "1"
                                        COMMA@3840..3841 ","
                                        WHITESPACE@3841..3842 " "
                                        LITERAL@3842..3843
                                            NUMBER@3842..3843 "6"
                                        RPAREN@3843..3844 ")"
                                RPAREN@3844..3845 ")"
                        RPAREN@3845..3846 ")"
                SEMICOLON@3846..3847 ";"
            WHITESPACE@3847..3850 "\n\t\n"
            COMMENT@3850..3877 "//== Binary shift operators"
            WHITESPACE@3877..3880 "\n\n\t"
            EXPR_STMT@3880..3902
                CALL_EXPR@3880..3901
                    NAME_REF@3880..3886
                        IDENT@3880..3886 "assert"
                    ARG_LIST@3886..3901
                        LPAREN@3886..3887 "("
                        BIN_EXPR@3887..3900
                            PAREN_EXPR@3887..3895
                                LPAREN@3887..3888 "("
                                BIN_EXPR@3888..3894
                                    LITERAL@3888..3889
                                        NUMBER@3888..3889 "1"
                                    WHITESPACE@3889..3890 " "
                                    LT_2@3890..3892 "<<"
                                    WHITESPACE@3892..3893 " "
                                    LITERAL@3893..3894
                                        NUMBER@3893..3894 "2"
                                RPAREN@3894..3895 ")"
                            WHITESPACE@3895..3896 " "
                            EQ_2@3896..3898 "=="
                            WHITESPACE@3898..3899 " "
                            LITERAL@3899..3900
                                NUMBER@3899..3900 "4"
                        RPAREN@3900..3901 ")"
                SEMICOLON@3901..3902 ";"
            WHITESPACE@3902..3904 "\n\t"
            EXPR_STMT@3904..3926
                CALL_EXPR@3904..3925
                    NAME_REF@3904..3910
                        IDENT@3904..3910 "assert"
                    ARG_LIST@3910..3925
                        LPAREN@3910..3911 "("
                        BIN_EXPR@3911..3924
                            PAREN_EXPR@3911..3919
                                LPAREN@3911..3912 "("
                                BIN_EXPR@3912..3918
                                    LITERAL@3912..3913
                                        NUMBER@3912..3913 "4"
                                    WHITESPACE@3913..3914 " "
                                    GT_2@3914..3916 ">>"
                                    WHITESPACE@3916..3917 " "
                                    LITERAL@3917..3918
                                        NUMBER@3917..3918 "2"
                                RPAREN@3918..3919 ")"
                            WHITESPACE@3919..3920 " "
                            EQ_2@3920..3922 "=="
                            WHITESPACE@3922..3923 " "
                            LITERAL@3923..3924
                                NUMBER@3923..3924 "1"
                        RPAREN@3924..3925 ")"
                SEMICOLON@3925..3926 ";"
            WHITESPACE@3926..3930 "\n\t\n\t"
            EXPR_STMT@3930..3993
                CALL_EXPR@3930..3992
                    NAME_REF@3930..3935
                        IDENT@3930..3935 "print"
                    ARG_LIST@3935..3992
                        LPAREN@3935..3936 "("
                        PAREN_EXPR@3936..3991
                            LPAREN@3936..3937 "("
                            BIN_EXPR@3937..3990
                                BIN_EXPR@3937..3973
                                    STR_EXPR@3937..3962
                                        QUOTE_DOUBLE@3937..3938 "\""
                                        STR_SHARD_LITERAL@3938..3961
                                            STR_SHARD@3938..3961 "Finished running xNVSE "
                                        QUOTE_DOUBLE@3961..3962 "\""
                                    WHITESPACE@3962..3963 " "
                                    PLUS@3963..3964 "+"
                                    WHITESPACE@3964..3965 " "
                                    NAME_REF@3965..3973
                                        IDENT@3965..3973 "testName"
                                WHITESPACE@3973..3974 " "
                                PLUS@3974..3975 "+"
                                WHITESPACE@3975..3976 " "
                                STR_EXPR@3976..3990
                                    QUOTE_DOUBLE@3976..3977 "\""
                                    STR_SHARD_LITERAL@3977..3989
                                        STR_SHARD@3977..3989 " unit tests."
                                    QUOTE_DOUBLE@3989..3990 "\""
                            RPAREN@3990..3991 ")"
                        RPAREN@3991..3992 ")"
                SEMICOLON@3992..3993 ";"
            WHITESPACE@3993..3994 "\n"
            RBRACK@3994..3995 "}"
