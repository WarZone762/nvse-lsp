name unary;

fn () {

	string testName = "Unary Operations";
	print(("Started running xNVSE " + testName + " unit tests."));

	// Increment/decrement by 1
	int i = 0;
	assert(i++ == 0); // incrementation should happen after the check occurs
	assert(i-- == 1);
	assert(i == 0);
	
	// Stringize/ Numericize
	string testStr = "123";
	i = #testStr;
	assert(i == 123);
	testStr = "test";
	testStr = $i;
	assert(testStr == "123");
	
	// Box / Unbox
	array aTest = &1;
	assert(aTest == (ar_List(1)));
	i = *aTest;
	assert(i == 1);
	i = 2; // reset, just in case
	i = aTest[0]; // Subscript
	assert(i == 1);
	
	// Subscript for strings
	testStr = "123";
	assert(testStr[0] == "1");
	
	// Logical Not
	assert(!false);

	print(("Finished running xNVSE " + testName + " unit tests."));
}